using System;
using System.Runtime.InteropServices;

namespace OpenTK.OpenGL
{
    public static partial class GL
    {
        public static bool ExtensionsLoaded = false;
        public static bool CoreLoaded = false;

        #region OpenGL functions

        public static Delegates.NewList NewList;
        public static Delegates.EndList EndList;
        public static Delegates.CallList CallList;
        public static Delegates.CallLists CallLists;
        public static Delegates.DeleteLists DeleteLists;
        public static Delegates.GenLists GenLists;
        public static Delegates.ListBase ListBase;
        public static Delegates.Begin Begin;
        public static Delegates.Bitmap Bitmap;
        public static Delegates.Color3b Color3b;
        public static Delegates.Color3bv Color3bv;
        public static Delegates.Color3d Color3d;
        public static Delegates.Color3dv Color3dv;
        public static Delegates.Color3f Color3f;
        public static Delegates.Color3fv Color3fv;
        public static Delegates.Color3i Color3i;
        public static Delegates.Color3iv Color3iv;
        public static Delegates.Color3s Color3s;
        public static Delegates.Color3sv Color3sv;
        public static Delegates.Color3ub Color3ub;
        public static Delegates.Color3ubv Color3ubv;
        public static Delegates.Color3ui Color3ui;
        public static Delegates.Color3uiv Color3uiv;
        public static Delegates.Color3us Color3us;
        public static Delegates.Color3usv Color3usv;
        public static Delegates.Color4b Color4b;
        public static Delegates.Color4bv Color4bv;
        public static Delegates.Color4d Color4d;
        public static Delegates.Color4dv Color4dv;
        public static Delegates.Color4f Color4f;
        public static Delegates.Color4fv Color4fv;
        public static Delegates.Color4i Color4i;
        public static Delegates.Color4iv Color4iv;
        public static Delegates.Color4s Color4s;
        public static Delegates.Color4sv Color4sv;
        public static Delegates.Color4ub Color4ub;
        public static Delegates.Color4ubv Color4ubv;
        public static Delegates.Color4ui Color4ui;
        public static Delegates.Color4uiv Color4uiv;
        public static Delegates.Color4us Color4us;
        public static Delegates.Color4usv Color4usv;
        public static Delegates.EdgeFlag EdgeFlag;
        public static Delegates.EdgeFlagv EdgeFlagv;
        public static Delegates.End End;
        public static Delegates.Indexd Indexd;
        public static Delegates.Indexdv Indexdv;
        public static Delegates.Indexf Indexf;
        public static Delegates.Indexfv Indexfv;
        public static Delegates.Indexi Indexi;
        public static Delegates.Indexiv Indexiv;
        public static Delegates.Indexs Indexs;
        public static Delegates.Indexsv Indexsv;
        public static Delegates.Normal3b Normal3b;
        public static Delegates.Normal3bv Normal3bv;
        public static Delegates.Normal3d Normal3d;
        public static Delegates.Normal3dv Normal3dv;
        public static Delegates.Normal3f Normal3f;
        public static Delegates.Normal3fv Normal3fv;
        public static Delegates.Normal3i Normal3i;
        public static Delegates.Normal3iv Normal3iv;
        public static Delegates.Normal3s Normal3s;
        public static Delegates.Normal3sv Normal3sv;
        public static Delegates.RasterPos2d RasterPos2d;
        public static Delegates.RasterPos2dv RasterPos2dv;
        public static Delegates.RasterPos2f RasterPos2f;
        public static Delegates.RasterPos2fv RasterPos2fv;
        public static Delegates.RasterPos2i RasterPos2i;
        public static Delegates.RasterPos2iv RasterPos2iv;
        public static Delegates.RasterPos2s RasterPos2s;
        public static Delegates.RasterPos2sv RasterPos2sv;
        public static Delegates.RasterPos3d RasterPos3d;
        public static Delegates.RasterPos3dv RasterPos3dv;
        public static Delegates.RasterPos3f RasterPos3f;
        public static Delegates.RasterPos3fv RasterPos3fv;
        public static Delegates.RasterPos3i RasterPos3i;
        public static Delegates.RasterPos3iv RasterPos3iv;
        public static Delegates.RasterPos3s RasterPos3s;
        public static Delegates.RasterPos3sv RasterPos3sv;
        public static Delegates.RasterPos4d RasterPos4d;
        public static Delegates.RasterPos4dv RasterPos4dv;
        public static Delegates.RasterPos4f RasterPos4f;
        public static Delegates.RasterPos4fv RasterPos4fv;
        public static Delegates.RasterPos4i RasterPos4i;
        public static Delegates.RasterPos4iv RasterPos4iv;
        public static Delegates.RasterPos4s RasterPos4s;
        public static Delegates.RasterPos4sv RasterPos4sv;
        public static Delegates.Rectd Rectd;
        public static Delegates.Rectdv Rectdv;
        public static Delegates.Rectf Rectf;
        public static Delegates.Rectfv Rectfv;
        public static Delegates.Recti Recti;
        public static Delegates.Rectiv Rectiv;
        public static Delegates.Rects Rects;
        public static Delegates.Rectsv Rectsv;
        public static Delegates.TexCoord1d TexCoord1d;
        public static Delegates.TexCoord1dv TexCoord1dv;
        public static Delegates.TexCoord1f TexCoord1f;
        public static Delegates.TexCoord1fv TexCoord1fv;
        public static Delegates.TexCoord1i TexCoord1i;
        public static Delegates.TexCoord1iv TexCoord1iv;
        public static Delegates.TexCoord1s TexCoord1s;
        public static Delegates.TexCoord1sv TexCoord1sv;
        public static Delegates.TexCoord2d TexCoord2d;
        public static Delegates.TexCoord2dv TexCoord2dv;
        public static Delegates.TexCoord2f TexCoord2f;
        public static Delegates.TexCoord2fv TexCoord2fv;
        public static Delegates.TexCoord2i TexCoord2i;
        public static Delegates.TexCoord2iv TexCoord2iv;
        public static Delegates.TexCoord2s TexCoord2s;
        public static Delegates.TexCoord2sv TexCoord2sv;
        public static Delegates.TexCoord3d TexCoord3d;
        public static Delegates.TexCoord3dv TexCoord3dv;
        public static Delegates.TexCoord3f TexCoord3f;
        public static Delegates.TexCoord3fv TexCoord3fv;
        public static Delegates.TexCoord3i TexCoord3i;
        public static Delegates.TexCoord3iv TexCoord3iv;
        public static Delegates.TexCoord3s TexCoord3s;
        public static Delegates.TexCoord3sv TexCoord3sv;
        public static Delegates.TexCoord4d TexCoord4d;
        public static Delegates.TexCoord4dv TexCoord4dv;
        public static Delegates.TexCoord4f TexCoord4f;
        public static Delegates.TexCoord4fv TexCoord4fv;
        public static Delegates.TexCoord4i TexCoord4i;
        public static Delegates.TexCoord4iv TexCoord4iv;
        public static Delegates.TexCoord4s TexCoord4s;
        public static Delegates.TexCoord4sv TexCoord4sv;
        public static Delegates.Vertex2d Vertex2d;
        public static Delegates.Vertex2dv Vertex2dv;
        public static Delegates.Vertex2f Vertex2f;
        public static Delegates.Vertex2fv Vertex2fv;
        public static Delegates.Vertex2i Vertex2i;
        public static Delegates.Vertex2iv Vertex2iv;
        public static Delegates.Vertex2s Vertex2s;
        public static Delegates.Vertex2sv Vertex2sv;
        public static Delegates.Vertex3d Vertex3d;
        public static Delegates.Vertex3dv Vertex3dv;
        public static Delegates.Vertex3f Vertex3f;
        public static Delegates.Vertex3fv Vertex3fv;
        public static Delegates.Vertex3i Vertex3i;
        public static Delegates.Vertex3iv Vertex3iv;
        public static Delegates.Vertex3s Vertex3s;
        public static Delegates.Vertex3sv Vertex3sv;
        public static Delegates.Vertex4d Vertex4d;
        public static Delegates.Vertex4dv Vertex4dv;
        public static Delegates.Vertex4f Vertex4f;
        public static Delegates.Vertex4fv Vertex4fv;
        public static Delegates.Vertex4i Vertex4i;
        public static Delegates.Vertex4iv Vertex4iv;
        public static Delegates.Vertex4s Vertex4s;
        public static Delegates.Vertex4sv Vertex4sv;
        public static Delegates.ClipPlane ClipPlane;
        public static Delegates.ColorMaterial ColorMaterial;
        public static Delegates.CullFace CullFace;
        public static Delegates.Fogf Fogf;
        public static Delegates.Fogfv Fogfv;
        public static Delegates.Fogi Fogi;
        public static Delegates.Fogiv Fogiv;
        public static Delegates.FrontFace FrontFace;
        public static Delegates.Hint Hint;
        public static Delegates.Lightf Lightf;
        public static Delegates.Lightfv Lightfv;
        public static Delegates.Lighti Lighti;
        public static Delegates.Lightiv Lightiv;
        public static Delegates.LightModelf LightModelf;
        public static Delegates.LightModelfv LightModelfv;
        public static Delegates.LightModeli LightModeli;
        public static Delegates.LightModeliv LightModeliv;
        public static Delegates.LineStipple LineStipple;
        public static Delegates.LineWidth LineWidth;
        public static Delegates.Materialf Materialf;
        public static Delegates.Materialfv Materialfv;
        public static Delegates.Materiali Materiali;
        public static Delegates.Materialiv Materialiv;
        public static Delegates.PointSize PointSize;
        public static Delegates.PolygonMode PolygonMode;
        public static Delegates.PolygonStipple PolygonStipple;
        public static Delegates.Scissor Scissor;
        public static Delegates.ShadeModel ShadeModel;
        public static Delegates.TexParameterf TexParameterf;
        public static Delegates.TexParameterfv TexParameterfv;
        public static Delegates.TexParameteri TexParameteri;
        public static Delegates.TexParameteriv TexParameteriv;
        public static Delegates.TexImage1D TexImage1D;
        public static Delegates.TexImage2D TexImage2D;
        public static Delegates.TexEnvf TexEnvf;
        public static Delegates.TexEnvfv TexEnvfv;
        public static Delegates.TexEnvi TexEnvi;
        public static Delegates.TexEnviv TexEnviv;
        public static Delegates.TexGend TexGend;
        public static Delegates.TexGendv TexGendv;
        public static Delegates.TexGenf TexGenf;
        public static Delegates.TexGenfv TexGenfv;
        public static Delegates.TexGeni TexGeni;
        public static Delegates.TexGeniv TexGeniv;
        public static Delegates.FeedbackBuffer FeedbackBuffer;
        public static Delegates.SelectBuffer SelectBuffer;
        public static Delegates.RenderMode RenderMode;
        public static Delegates.InitNames InitNames;
        public static Delegates.LoadName LoadName;
        public static Delegates.PassThrough PassThrough;
        public static Delegates.PopName PopName;
        public static Delegates.PushName PushName;
        public static Delegates.DrawBuffer DrawBuffer;
        public static Delegates.Clear Clear;
        public static Delegates.ClearAccum ClearAccum;
        public static Delegates.ClearIndex ClearIndex;
        public static Delegates.ClearColor ClearColor;
        public static Delegates.ClearStencil ClearStencil;
        public static Delegates.ClearDepth ClearDepth;
        public static Delegates.StencilMask StencilMask;
        public static Delegates.ColorMask ColorMask;
        public static Delegates.DepthMask DepthMask;
        public static Delegates.IndexMask IndexMask;
        public static Delegates.Accum Accum;
        public static Delegates.Disable Disable;
        public static Delegates.Enable Enable;
        public static Delegates.Finish Finish;
        public static Delegates.Flush Flush;
        public static Delegates.PopAttrib PopAttrib;
        public static Delegates.PushAttrib PushAttrib;
        public static Delegates.Map1d Map1d;
        public static Delegates.Map1f Map1f;
        public static Delegates.Map2d Map2d;
        public static Delegates.Map2f Map2f;
        public static Delegates.MapGrid1d MapGrid1d;
        public static Delegates.MapGrid1f MapGrid1f;
        public static Delegates.MapGrid2d MapGrid2d;
        public static Delegates.MapGrid2f MapGrid2f;
        public static Delegates.EvalCoord1d EvalCoord1d;
        public static Delegates.EvalCoord1dv EvalCoord1dv;
        public static Delegates.EvalCoord1f EvalCoord1f;
        public static Delegates.EvalCoord1fv EvalCoord1fv;
        public static Delegates.EvalCoord2d EvalCoord2d;
        public static Delegates.EvalCoord2dv EvalCoord2dv;
        public static Delegates.EvalCoord2f EvalCoord2f;
        public static Delegates.EvalCoord2fv EvalCoord2fv;
        public static Delegates.EvalMesh1 EvalMesh1;
        public static Delegates.EvalPoint1 EvalPoint1;
        public static Delegates.EvalMesh2 EvalMesh2;
        public static Delegates.EvalPoint2 EvalPoint2;
        public static Delegates.AlphaFunc AlphaFunc;
        public static Delegates.BlendFunc BlendFunc;
        public static Delegates.LogicOp LogicOp;
        public static Delegates.StencilFunc StencilFunc;
        public static Delegates.StencilOp StencilOp;
        public static Delegates.DepthFunc DepthFunc;
        public static Delegates.PixelZoom PixelZoom;
        public static Delegates.PixelTransferf PixelTransferf;
        public static Delegates.PixelTransferi PixelTransferi;
        public static Delegates.PixelStoref PixelStoref;
        public static Delegates.PixelStorei PixelStorei;
        public static Delegates.PixelMapfv PixelMapfv;
        public static Delegates.PixelMapuiv PixelMapuiv;
        public static Delegates.PixelMapusv PixelMapusv;
        public static Delegates.ReadBuffer ReadBuffer;
        public static Delegates.CopyPixels CopyPixels;
        public static Delegates.ReadPixels ReadPixels;
        public static Delegates.DrawPixels DrawPixels;
        public static Delegates.GetBooleanv GetBooleanv;
        public static Delegates.GetClipPlane GetClipPlane;
        public static Delegates.GetDoublev GetDoublev;
        public static Delegates.GetError GetError;
        public static Delegates.GetFloatv GetFloatv;
        public static Delegates.GetIntegerv GetIntegerv;
        public static Delegates.GetLightfv GetLightfv;
        public static Delegates.GetLightiv GetLightiv;
        public static Delegates.GetMapdv GetMapdv;
        public static Delegates.GetMapfv GetMapfv;
        public static Delegates.GetMapiv GetMapiv;
        public static Delegates.GetMaterialfv GetMaterialfv;
        public static Delegates.GetMaterialiv GetMaterialiv;
        public static Delegates.GetPixelMapfv GetPixelMapfv;
        public static Delegates.GetPixelMapuiv GetPixelMapuiv;
        public static Delegates.GetPixelMapusv GetPixelMapusv;
        public static Delegates.GetPolygonStipple GetPolygonStipple;
        public static Delegates.GetString GetString;
        public static Delegates.GetTexEnvfv GetTexEnvfv;
        public static Delegates.GetTexEnviv GetTexEnviv;
        public static Delegates.GetTexGendv GetTexGendv;
        public static Delegates.GetTexGenfv GetTexGenfv;
        public static Delegates.GetTexGeniv GetTexGeniv;
        public static Delegates.GetTexImage GetTexImage;
        public static Delegates.GetTexParameterfv GetTexParameterfv;
        public static Delegates.GetTexParameteriv GetTexParameteriv;
        public static Delegates.GetTexLevelParameterfv GetTexLevelParameterfv;
        public static Delegates.GetTexLevelParameteriv GetTexLevelParameteriv;
        public static Delegates.IsEnabled IsEnabled;
        public static Delegates.IsList IsList;
        public static Delegates.DepthRange DepthRange;
        public static Delegates.Frustum Frustum;
        public static Delegates.LoadIdentity LoadIdentity;
        public static Delegates.LoadMatrixf LoadMatrixf;
        public static Delegates.LoadMatrixd LoadMatrixd;
        public static Delegates.MatrixMode MatrixMode;
        public static Delegates.MultMatrixf MultMatrixf;
        public static Delegates.MultMatrixd MultMatrixd;
        public static Delegates.Ortho Ortho;
        public static Delegates.PopMatrix PopMatrix;
        public static Delegates.PushMatrix PushMatrix;
        public static Delegates.Rotated Rotated;
        public static Delegates.Rotatef Rotatef;
        public static Delegates.Scaled Scaled;
        public static Delegates.Scalef Scalef;
        public static Delegates.Translated Translated;
        public static Delegates.Translatef Translatef;
        public static Delegates.Viewport Viewport;
        public static Delegates.ArrayElement ArrayElement;
        public static Delegates.ColorPointer ColorPointer;
        public static Delegates.DisableClientState DisableClientState;
        public static Delegates.DrawArrays DrawArrays;
        public static Delegates.DrawElements DrawElements;
        public static Delegates.EdgeFlagPointer EdgeFlagPointer;
        public static Delegates.EnableClientState EnableClientState;
        public static Delegates.GetPointerv GetPointerv;
        public static Delegates.IndexPointer IndexPointer;
        public static Delegates.InterleavedArrays InterleavedArrays;
        public static Delegates.NormalPointer NormalPointer;
        public static Delegates.TexCoordPointer TexCoordPointer;
        public static Delegates.VertexPointer VertexPointer;
        public static Delegates.PolygonOffset PolygonOffset;
        public static Delegates.CopyTexImage1D CopyTexImage1D;
        public static Delegates.CopyTexImage2D CopyTexImage2D;
        public static Delegates.CopyTexSubImage1D CopyTexSubImage1D;
        public static Delegates.CopyTexSubImage2D CopyTexSubImage2D;
        public static Delegates.TexSubImage1D TexSubImage1D;
        public static Delegates.TexSubImage2D TexSubImage2D;
        public static Delegates.AreTexturesResident AreTexturesResident;
        public static Delegates.BindTexture BindTexture;
        public static Delegates.DeleteTextures DeleteTextures;
        public static Delegates.GenTextures GenTextures;
        public static Delegates.IsTexture IsTexture;
        public static Delegates.PrioritizeTextures PrioritizeTextures;
        public static Delegates.Indexub Indexub;
        public static Delegates.Indexubv Indexubv;
        public static Delegates.PopClientAttrib PopClientAttrib;
        public static Delegates.PushClientAttrib PushClientAttrib;
        public static Delegates.BlendColor BlendColor;
        public static Delegates.BlendEquation BlendEquation;
        public static Delegates.DrawRangeElements DrawRangeElements;
        public static Delegates.ColorTable ColorTable;
        public static Delegates.ColorTableParameterfv ColorTableParameterfv;
        public static Delegates.ColorTableParameteriv ColorTableParameteriv;
        public static Delegates.CopyColorTable CopyColorTable;
        public static Delegates.GetColorTable GetColorTable;
        public static Delegates.GetColorTableParameterfv GetColorTableParameterfv;
        public static Delegates.GetColorTableParameteriv GetColorTableParameteriv;
        public static Delegates.ColorSubTable ColorSubTable;
        public static Delegates.CopyColorSubTable CopyColorSubTable;
        public static Delegates.ConvolutionFilter1D ConvolutionFilter1D;
        public static Delegates.ConvolutionFilter2D ConvolutionFilter2D;
        public static Delegates.ConvolutionParameterf ConvolutionParameterf;
        public static Delegates.ConvolutionParameterfv ConvolutionParameterfv;
        public static Delegates.ConvolutionParameteri ConvolutionParameteri;
        public static Delegates.ConvolutionParameteriv ConvolutionParameteriv;
        public static Delegates.CopyConvolutionFilter1D CopyConvolutionFilter1D;
        public static Delegates.CopyConvolutionFilter2D CopyConvolutionFilter2D;
        public static Delegates.GetConvolutionFilter GetConvolutionFilter;
        public static Delegates.GetConvolutionParameterfv GetConvolutionParameterfv;
        public static Delegates.GetConvolutionParameteriv GetConvolutionParameteriv;
        public static Delegates.GetSeparableFilter GetSeparableFilter;
        public static Delegates.SeparableFilter2D SeparableFilter2D;
        public static Delegates.GetHistogram GetHistogram;
        public static Delegates.GetHistogramParameterfv GetHistogramParameterfv;
        public static Delegates.GetHistogramParameteriv GetHistogramParameteriv;
        public static Delegates.GetMinmax GetMinmax;
        public static Delegates.GetMinmaxParameterfv GetMinmaxParameterfv;
        public static Delegates.GetMinmaxParameteriv GetMinmaxParameteriv;
        public static Delegates.Histogram Histogram;
        public static Delegates.Minmax Minmax;
        public static Delegates.ResetHistogram ResetHistogram;
        public static Delegates.ResetMinmax ResetMinmax;
        public static Delegates.TexImage3D TexImage3D;
        public static Delegates.TexSubImage3D TexSubImage3D;
        public static Delegates.CopyTexSubImage3D CopyTexSubImage3D;
        public static Delegates.ActiveTexture ActiveTexture;
        public static Delegates.ClientActiveTexture ClientActiveTexture;
        public static Delegates.MultiTexCoord1d MultiTexCoord1d;
        public static Delegates.MultiTexCoord1dv MultiTexCoord1dv;
        public static Delegates.MultiTexCoord1f MultiTexCoord1f;
        public static Delegates.MultiTexCoord1fv MultiTexCoord1fv;
        public static Delegates.MultiTexCoord1i MultiTexCoord1i;
        public static Delegates.MultiTexCoord1iv MultiTexCoord1iv;
        public static Delegates.MultiTexCoord1s MultiTexCoord1s;
        public static Delegates.MultiTexCoord1sv MultiTexCoord1sv;
        public static Delegates.MultiTexCoord2d MultiTexCoord2d;
        public static Delegates.MultiTexCoord2dv MultiTexCoord2dv;
        public static Delegates.MultiTexCoord2f MultiTexCoord2f;
        public static Delegates.MultiTexCoord2fv MultiTexCoord2fv;
        public static Delegates.MultiTexCoord2i MultiTexCoord2i;
        public static Delegates.MultiTexCoord2iv MultiTexCoord2iv;
        public static Delegates.MultiTexCoord2s MultiTexCoord2s;
        public static Delegates.MultiTexCoord2sv MultiTexCoord2sv;
        public static Delegates.MultiTexCoord3d MultiTexCoord3d;
        public static Delegates.MultiTexCoord3dv MultiTexCoord3dv;
        public static Delegates.MultiTexCoord3f MultiTexCoord3f;
        public static Delegates.MultiTexCoord3fv MultiTexCoord3fv;
        public static Delegates.MultiTexCoord3i MultiTexCoord3i;
        public static Delegates.MultiTexCoord3iv MultiTexCoord3iv;
        public static Delegates.MultiTexCoord3s MultiTexCoord3s;
        public static Delegates.MultiTexCoord3sv MultiTexCoord3sv;
        public static Delegates.MultiTexCoord4d MultiTexCoord4d;
        public static Delegates.MultiTexCoord4dv MultiTexCoord4dv;
        public static Delegates.MultiTexCoord4f MultiTexCoord4f;
        public static Delegates.MultiTexCoord4fv MultiTexCoord4fv;
        public static Delegates.MultiTexCoord4i MultiTexCoord4i;
        public static Delegates.MultiTexCoord4iv MultiTexCoord4iv;
        public static Delegates.MultiTexCoord4s MultiTexCoord4s;
        public static Delegates.MultiTexCoord4sv MultiTexCoord4sv;
        public static Delegates.LoadTransposeMatrixf LoadTransposeMatrixf;
        public static Delegates.LoadTransposeMatrixd LoadTransposeMatrixd;
        public static Delegates.MultTransposeMatrixf MultTransposeMatrixf;
        public static Delegates.MultTransposeMatrixd MultTransposeMatrixd;
        public static Delegates.SampleCoverage SampleCoverage;
        public static Delegates.CompressedTexImage3D CompressedTexImage3D;
        public static Delegates.CompressedTexImage2D CompressedTexImage2D;
        public static Delegates.CompressedTexImage1D CompressedTexImage1D;
        public static Delegates.CompressedTexSubImage3D CompressedTexSubImage3D;
        public static Delegates.CompressedTexSubImage2D CompressedTexSubImage2D;
        public static Delegates.CompressedTexSubImage1D CompressedTexSubImage1D;
        public static Delegates.GetCompressedTexImage GetCompressedTexImage;
        public static Delegates.BlendFuncSeparate BlendFuncSeparate;
        public static Delegates.FogCoordf FogCoordf;
        public static Delegates.FogCoordfv FogCoordfv;
        public static Delegates.FogCoordd FogCoordd;
        public static Delegates.FogCoorddv FogCoorddv;
        public static Delegates.FogCoordPointer FogCoordPointer;
        public static Delegates.MultiDrawArrays MultiDrawArrays;
        public static Delegates.MultiDrawElements MultiDrawElements;
        public static Delegates.PointParameterf PointParameterf;
        public static Delegates.PointParameterfv PointParameterfv;
        public static Delegates.PointParameteri PointParameteri;
        public static Delegates.PointParameteriv PointParameteriv;
        public static Delegates.SecondaryColor3b SecondaryColor3b;
        public static Delegates.SecondaryColor3bv SecondaryColor3bv;
        public static Delegates.SecondaryColor3d SecondaryColor3d;
        public static Delegates.SecondaryColor3dv SecondaryColor3dv;
        public static Delegates.SecondaryColor3f SecondaryColor3f;
        public static Delegates.SecondaryColor3fv SecondaryColor3fv;
        public static Delegates.SecondaryColor3i SecondaryColor3i;
        public static Delegates.SecondaryColor3iv SecondaryColor3iv;
        public static Delegates.SecondaryColor3s SecondaryColor3s;
        public static Delegates.SecondaryColor3sv SecondaryColor3sv;
        public static Delegates.SecondaryColor3ub SecondaryColor3ub;
        public static Delegates.SecondaryColor3ubv SecondaryColor3ubv;
        public static Delegates.SecondaryColor3ui SecondaryColor3ui;
        public static Delegates.SecondaryColor3uiv SecondaryColor3uiv;
        public static Delegates.SecondaryColor3us SecondaryColor3us;
        public static Delegates.SecondaryColor3usv SecondaryColor3usv;
        public static Delegates.SecondaryColorPointer SecondaryColorPointer;
        public static Delegates.WindowPos2d WindowPos2d;
        public static Delegates.WindowPos2dv WindowPos2dv;
        public static Delegates.WindowPos2f WindowPos2f;
        public static Delegates.WindowPos2fv WindowPos2fv;
        public static Delegates.WindowPos2i WindowPos2i;
        public static Delegates.WindowPos2iv WindowPos2iv;
        public static Delegates.WindowPos2s WindowPos2s;
        public static Delegates.WindowPos2sv WindowPos2sv;
        public static Delegates.WindowPos3d WindowPos3d;
        public static Delegates.WindowPos3dv WindowPos3dv;
        public static Delegates.WindowPos3f WindowPos3f;
        public static Delegates.WindowPos3fv WindowPos3fv;
        public static Delegates.WindowPos3i WindowPos3i;
        public static Delegates.WindowPos3iv WindowPos3iv;
        public static Delegates.WindowPos3s WindowPos3s;
        public static Delegates.WindowPos3sv WindowPos3sv;
        public static Delegates.GenQueries GenQueries;
        public static Delegates.DeleteQueries DeleteQueries;
        public static Delegates.IsQuery IsQuery;
        public static Delegates.BeginQuery BeginQuery;
        public static Delegates.EndQuery EndQuery;
        public static Delegates.GetQueryiv GetQueryiv;
        public static Delegates.GetQueryObjectiv GetQueryObjectiv;
        public static Delegates.GetQueryObjectuiv GetQueryObjectuiv;
        public static Delegates.BindBuffer BindBuffer;
        public static Delegates.DeleteBuffers DeleteBuffers;
        public static Delegates.GenBuffers GenBuffers;
        public static Delegates.IsBuffer IsBuffer;
        public static Delegates.BufferData BufferData;
        public static Delegates.BufferSubData BufferSubData;
        public static Delegates.GetBufferSubData GetBufferSubData;
        public static Delegates.MapBuffer_ MapBuffer_;
        public static Delegates.UnmapBuffer UnmapBuffer;
        public static Delegates.GetBufferParameteriv GetBufferParameteriv;
        public static Delegates.GetBufferPointerv GetBufferPointerv;
        public static Delegates.BlendEquationSeparate BlendEquationSeparate;
        public static Delegates.DrawBuffers DrawBuffers;
        public static Delegates.StencilOpSeparate StencilOpSeparate;
        public static Delegates.StencilFuncSeparate StencilFuncSeparate;
        public static Delegates.StencilMaskSeparate StencilMaskSeparate;
        public static Delegates.AttachShader AttachShader;
        public static Delegates.BindAttribLocation BindAttribLocation;
        public static Delegates.CompileShader CompileShader;
        public static Delegates.CreateProgram CreateProgram;
        public static Delegates.CreateShader CreateShader;
        public static Delegates.DeleteProgram DeleteProgram;
        public static Delegates.DeleteShader DeleteShader;
        public static Delegates.DetachShader DetachShader;
        public static Delegates.DisableVertexAttribArray DisableVertexAttribArray;
        public static Delegates.EnableVertexAttribArray EnableVertexAttribArray;
        public static Delegates.GetActiveAttrib GetActiveAttrib;
        public static Delegates.GetActiveUniform GetActiveUniform;
        public static Delegates.GetAttachedShaders GetAttachedShaders;
        public static Delegates.GetAttribLocation GetAttribLocation;
        public static Delegates.GetProgramiv GetProgramiv;
        public static Delegates.GetProgramInfoLog GetProgramInfoLog;
        public static Delegates.GetShaderiv GetShaderiv;
        public static Delegates.GetShaderInfoLog GetShaderInfoLog;
        public static Delegates.GetShaderSource GetShaderSource;
        public static Delegates.GetUniformLocation GetUniformLocation;
        public static Delegates.GetUniformfv GetUniformfv;
        public static Delegates.GetUniformiv GetUniformiv;
        public static Delegates.GetVertexAttribdv GetVertexAttribdv;
        public static Delegates.GetVertexAttribfv GetVertexAttribfv;
        public static Delegates.GetVertexAttribiv GetVertexAttribiv;
        public static Delegates.GetVertexAttribPointerv GetVertexAttribPointerv;
        public static Delegates.IsProgram IsProgram;
        public static Delegates.IsShader IsShader;
        public static Delegates.LinkProgram LinkProgram;
        public static Delegates.ShaderSource ShaderSource;
        public static Delegates.UseProgram UseProgram;
        public static Delegates.Uniform1f Uniform1f;
        public static Delegates.Uniform2f Uniform2f;
        public static Delegates.Uniform3f Uniform3f;
        public static Delegates.Uniform4f Uniform4f;
        public static Delegates.Uniform1i Uniform1i;
        public static Delegates.Uniform2i Uniform2i;
        public static Delegates.Uniform3i Uniform3i;
        public static Delegates.Uniform4i Uniform4i;
        public static Delegates.Uniform1fv Uniform1fv;
        public static Delegates.Uniform2fv Uniform2fv;
        public static Delegates.Uniform3fv Uniform3fv;
        public static Delegates.Uniform4fv Uniform4fv;
        public static Delegates.Uniform1iv Uniform1iv;
        public static Delegates.Uniform2iv Uniform2iv;
        public static Delegates.Uniform3iv Uniform3iv;
        public static Delegates.Uniform4iv Uniform4iv;
        public static Delegates.UniformMatrix2fv UniformMatrix2fv;
        public static Delegates.UniformMatrix3fv UniformMatrix3fv;
        public static Delegates.UniformMatrix4fv UniformMatrix4fv;
        public static Delegates.ValidateProgram ValidateProgram;
        public static Delegates.VertexAttrib1d VertexAttrib1d;
        public static Delegates.VertexAttrib1dv VertexAttrib1dv;
        public static Delegates.VertexAttrib1f VertexAttrib1f;
        public static Delegates.VertexAttrib1fv VertexAttrib1fv;
        public static Delegates.VertexAttrib1s VertexAttrib1s;
        public static Delegates.VertexAttrib1sv VertexAttrib1sv;
        public static Delegates.VertexAttrib2d VertexAttrib2d;
        public static Delegates.VertexAttrib2dv VertexAttrib2dv;
        public static Delegates.VertexAttrib2f VertexAttrib2f;
        public static Delegates.VertexAttrib2fv VertexAttrib2fv;
        public static Delegates.VertexAttrib2s VertexAttrib2s;
        public static Delegates.VertexAttrib2sv VertexAttrib2sv;
        public static Delegates.VertexAttrib3d VertexAttrib3d;
        public static Delegates.VertexAttrib3dv VertexAttrib3dv;
        public static Delegates.VertexAttrib3f VertexAttrib3f;
        public static Delegates.VertexAttrib3fv VertexAttrib3fv;
        public static Delegates.VertexAttrib3s VertexAttrib3s;
        public static Delegates.VertexAttrib3sv VertexAttrib3sv;
        public static Delegates.VertexAttrib4Nbv VertexAttrib4Nbv;
        public static Delegates.VertexAttrib4Niv VertexAttrib4Niv;
        public static Delegates.VertexAttrib4Nsv VertexAttrib4Nsv;
        public static Delegates.VertexAttrib4Nub VertexAttrib4Nub;
        public static Delegates.VertexAttrib4Nubv VertexAttrib4Nubv;
        public static Delegates.VertexAttrib4Nuiv VertexAttrib4Nuiv;
        public static Delegates.VertexAttrib4Nusv VertexAttrib4Nusv;
        public static Delegates.VertexAttrib4bv VertexAttrib4bv;
        public static Delegates.VertexAttrib4d VertexAttrib4d;
        public static Delegates.VertexAttrib4dv VertexAttrib4dv;
        public static Delegates.VertexAttrib4f VertexAttrib4f;
        public static Delegates.VertexAttrib4fv VertexAttrib4fv;
        public static Delegates.VertexAttrib4iv VertexAttrib4iv;
        public static Delegates.VertexAttrib4s VertexAttrib4s;
        public static Delegates.VertexAttrib4sv VertexAttrib4sv;
        public static Delegates.VertexAttrib4ubv VertexAttrib4ubv;
        public static Delegates.VertexAttrib4uiv VertexAttrib4uiv;
        public static Delegates.VertexAttrib4usv VertexAttrib4usv;
        public static Delegates.VertexAttribPointer VertexAttribPointer;
        public static Delegates.ActiveTextureARB ActiveTextureARB;
        public static Delegates.ClientActiveTextureARB ClientActiveTextureARB;
        public static Delegates.MultiTexCoord1dARB MultiTexCoord1dARB;
        public static Delegates.MultiTexCoord1dvARB MultiTexCoord1dvARB;
        public static Delegates.MultiTexCoord1fARB MultiTexCoord1fARB;
        public static Delegates.MultiTexCoord1fvARB MultiTexCoord1fvARB;
        public static Delegates.MultiTexCoord1iARB MultiTexCoord1iARB;
        public static Delegates.MultiTexCoord1ivARB MultiTexCoord1ivARB;
        public static Delegates.MultiTexCoord1sARB MultiTexCoord1sARB;
        public static Delegates.MultiTexCoord1svARB MultiTexCoord1svARB;
        public static Delegates.MultiTexCoord2dARB MultiTexCoord2dARB;
        public static Delegates.MultiTexCoord2dvARB MultiTexCoord2dvARB;
        public static Delegates.MultiTexCoord2fARB MultiTexCoord2fARB;
        public static Delegates.MultiTexCoord2fvARB MultiTexCoord2fvARB;
        public static Delegates.MultiTexCoord2iARB MultiTexCoord2iARB;
        public static Delegates.MultiTexCoord2ivARB MultiTexCoord2ivARB;
        public static Delegates.MultiTexCoord2sARB MultiTexCoord2sARB;
        public static Delegates.MultiTexCoord2svARB MultiTexCoord2svARB;
        public static Delegates.MultiTexCoord3dARB MultiTexCoord3dARB;
        public static Delegates.MultiTexCoord3dvARB MultiTexCoord3dvARB;
        public static Delegates.MultiTexCoord3fARB MultiTexCoord3fARB;
        public static Delegates.MultiTexCoord3fvARB MultiTexCoord3fvARB;
        public static Delegates.MultiTexCoord3iARB MultiTexCoord3iARB;
        public static Delegates.MultiTexCoord3ivARB MultiTexCoord3ivARB;
        public static Delegates.MultiTexCoord3sARB MultiTexCoord3sARB;
        public static Delegates.MultiTexCoord3svARB MultiTexCoord3svARB;
        public static Delegates.MultiTexCoord4dARB MultiTexCoord4dARB;
        public static Delegates.MultiTexCoord4dvARB MultiTexCoord4dvARB;
        public static Delegates.MultiTexCoord4fARB MultiTexCoord4fARB;
        public static Delegates.MultiTexCoord4fvARB MultiTexCoord4fvARB;
        public static Delegates.MultiTexCoord4iARB MultiTexCoord4iARB;
        public static Delegates.MultiTexCoord4ivARB MultiTexCoord4ivARB;
        public static Delegates.MultiTexCoord4sARB MultiTexCoord4sARB;
        public static Delegates.MultiTexCoord4svARB MultiTexCoord4svARB;
        public static Delegates.LoadTransposeMatrixfARB LoadTransposeMatrixfARB;
        public static Delegates.LoadTransposeMatrixdARB LoadTransposeMatrixdARB;
        public static Delegates.MultTransposeMatrixfARB MultTransposeMatrixfARB;
        public static Delegates.MultTransposeMatrixdARB MultTransposeMatrixdARB;
        public static Delegates.SampleCoverageARB SampleCoverageARB;
        public static Delegates.CompressedTexImage3DARB CompressedTexImage3DARB;
        public static Delegates.CompressedTexImage2DARB CompressedTexImage2DARB;
        public static Delegates.CompressedTexImage1DARB CompressedTexImage1DARB;
        public static Delegates.CompressedTexSubImage3DARB CompressedTexSubImage3DARB;
        public static Delegates.CompressedTexSubImage2DARB CompressedTexSubImage2DARB;
        public static Delegates.CompressedTexSubImage1DARB CompressedTexSubImage1DARB;
        public static Delegates.GetCompressedTexImageARB GetCompressedTexImageARB;
        public static Delegates.PointParameterfARB PointParameterfARB;
        public static Delegates.PointParameterfvARB PointParameterfvARB;
        public static Delegates.WeightbvARB WeightbvARB;
        public static Delegates.WeightsvARB WeightsvARB;
        public static Delegates.WeightivARB WeightivARB;
        public static Delegates.WeightfvARB WeightfvARB;
        public static Delegates.WeightdvARB WeightdvARB;
        public static Delegates.WeightubvARB WeightubvARB;
        public static Delegates.WeightusvARB WeightusvARB;
        public static Delegates.WeightuivARB WeightuivARB;
        public static Delegates.WeightPointerARB WeightPointerARB;
        public static Delegates.VertexBlendARB VertexBlendARB;
        public static Delegates.CurrentPaletteMatrixARB CurrentPaletteMatrixARB;
        public static Delegates.MatrixIndexubvARB MatrixIndexubvARB;
        public static Delegates.MatrixIndexusvARB MatrixIndexusvARB;
        public static Delegates.MatrixIndexuivARB MatrixIndexuivARB;
        public static Delegates.MatrixIndexPointerARB MatrixIndexPointerARB;
        public static Delegates.WindowPos2dARB WindowPos2dARB;
        public static Delegates.WindowPos2dvARB WindowPos2dvARB;
        public static Delegates.WindowPos2fARB WindowPos2fARB;
        public static Delegates.WindowPos2fvARB WindowPos2fvARB;
        public static Delegates.WindowPos2iARB WindowPos2iARB;
        public static Delegates.WindowPos2ivARB WindowPos2ivARB;
        public static Delegates.WindowPos2sARB WindowPos2sARB;
        public static Delegates.WindowPos2svARB WindowPos2svARB;
        public static Delegates.WindowPos3dARB WindowPos3dARB;
        public static Delegates.WindowPos3dvARB WindowPos3dvARB;
        public static Delegates.WindowPos3fARB WindowPos3fARB;
        public static Delegates.WindowPos3fvARB WindowPos3fvARB;
        public static Delegates.WindowPos3iARB WindowPos3iARB;
        public static Delegates.WindowPos3ivARB WindowPos3ivARB;
        public static Delegates.WindowPos3sARB WindowPos3sARB;
        public static Delegates.WindowPos3svARB WindowPos3svARB;
        public static Delegates.VertexAttrib1dARB VertexAttrib1dARB;
        public static Delegates.VertexAttrib1dvARB VertexAttrib1dvARB;
        public static Delegates.VertexAttrib1fARB VertexAttrib1fARB;
        public static Delegates.VertexAttrib1fvARB VertexAttrib1fvARB;
        public static Delegates.VertexAttrib1sARB VertexAttrib1sARB;
        public static Delegates.VertexAttrib1svARB VertexAttrib1svARB;
        public static Delegates.VertexAttrib2dARB VertexAttrib2dARB;
        public static Delegates.VertexAttrib2dvARB VertexAttrib2dvARB;
        public static Delegates.VertexAttrib2fARB VertexAttrib2fARB;
        public static Delegates.VertexAttrib2fvARB VertexAttrib2fvARB;
        public static Delegates.VertexAttrib2sARB VertexAttrib2sARB;
        public static Delegates.VertexAttrib2svARB VertexAttrib2svARB;
        public static Delegates.VertexAttrib3dARB VertexAttrib3dARB;
        public static Delegates.VertexAttrib3dvARB VertexAttrib3dvARB;
        public static Delegates.VertexAttrib3fARB VertexAttrib3fARB;
        public static Delegates.VertexAttrib3fvARB VertexAttrib3fvARB;
        public static Delegates.VertexAttrib3sARB VertexAttrib3sARB;
        public static Delegates.VertexAttrib3svARB VertexAttrib3svARB;
        public static Delegates.VertexAttrib4NbvARB VertexAttrib4NbvARB;
        public static Delegates.VertexAttrib4NivARB VertexAttrib4NivARB;
        public static Delegates.VertexAttrib4NsvARB VertexAttrib4NsvARB;
        public static Delegates.VertexAttrib4NubARB VertexAttrib4NubARB;
        public static Delegates.VertexAttrib4NubvARB VertexAttrib4NubvARB;
        public static Delegates.VertexAttrib4NuivARB VertexAttrib4NuivARB;
        public static Delegates.VertexAttrib4NusvARB VertexAttrib4NusvARB;
        public static Delegates.VertexAttrib4bvARB VertexAttrib4bvARB;
        public static Delegates.VertexAttrib4dARB VertexAttrib4dARB;
        public static Delegates.VertexAttrib4dvARB VertexAttrib4dvARB;
        public static Delegates.VertexAttrib4fARB VertexAttrib4fARB;
        public static Delegates.VertexAttrib4fvARB VertexAttrib4fvARB;
        public static Delegates.VertexAttrib4ivARB VertexAttrib4ivARB;
        public static Delegates.VertexAttrib4sARB VertexAttrib4sARB;
        public static Delegates.VertexAttrib4svARB VertexAttrib4svARB;
        public static Delegates.VertexAttrib4ubvARB VertexAttrib4ubvARB;
        public static Delegates.VertexAttrib4uivARB VertexAttrib4uivARB;
        public static Delegates.VertexAttrib4usvARB VertexAttrib4usvARB;
        public static Delegates.VertexAttribPointerARB VertexAttribPointerARB;
        public static Delegates.EnableVertexAttribArrayARB EnableVertexAttribArrayARB;
        public static Delegates.DisableVertexAttribArrayARB DisableVertexAttribArrayARB;
        public static Delegates.ProgramStringARB ProgramStringARB;
        public static Delegates.BindProgramARB BindProgramARB;
        public static Delegates.DeleteProgramsARB DeleteProgramsARB;
        public static Delegates.GenProgramsARB GenProgramsARB;
        public static Delegates.ProgramEnvParameter4dARB ProgramEnvParameter4dARB;
        public static Delegates.ProgramEnvParameter4dvARB ProgramEnvParameter4dvARB;
        public static Delegates.ProgramEnvParameter4fARB ProgramEnvParameter4fARB;
        public static Delegates.ProgramEnvParameter4fvARB ProgramEnvParameter4fvARB;
        public static Delegates.ProgramLocalParameter4dARB ProgramLocalParameter4dARB;
        public static Delegates.ProgramLocalParameter4dvARB ProgramLocalParameter4dvARB;
        public static Delegates.ProgramLocalParameter4fARB ProgramLocalParameter4fARB;
        public static Delegates.ProgramLocalParameter4fvARB ProgramLocalParameter4fvARB;
        public static Delegates.GetProgramEnvParameterdvARB GetProgramEnvParameterdvARB;
        public static Delegates.GetProgramEnvParameterfvARB GetProgramEnvParameterfvARB;
        public static Delegates.GetProgramLocalParameterdvARB GetProgramLocalParameterdvARB;
        public static Delegates.GetProgramLocalParameterfvARB GetProgramLocalParameterfvARB;
        public static Delegates.GetProgramivARB GetProgramivARB;
        public static Delegates.GetProgramStringARB GetProgramStringARB;
        public static Delegates.GetVertexAttribdvARB GetVertexAttribdvARB;
        public static Delegates.GetVertexAttribfvARB GetVertexAttribfvARB;
        public static Delegates.GetVertexAttribivARB GetVertexAttribivARB;
        public static Delegates.GetVertexAttribPointervARB GetVertexAttribPointervARB;
        public static Delegates.IsProgramARB IsProgramARB;
        public static Delegates.BindBufferARB BindBufferARB;
        public static Delegates.DeleteBuffersARB DeleteBuffersARB;
        public static Delegates.GenBuffersARB GenBuffersARB;
        public static Delegates.IsBufferARB IsBufferARB;
        public static Delegates.BufferDataARB BufferDataARB;
        public static Delegates.BufferSubDataARB BufferSubDataARB;
        public static Delegates.GetBufferSubDataARB GetBufferSubDataARB;
        public static Delegates.MapBufferARB_ MapBufferARB_;
        public static Delegates.UnmapBufferARB UnmapBufferARB;
        public static Delegates.GetBufferParameterivARB GetBufferParameterivARB;
        public static Delegates.GetBufferPointervARB GetBufferPointervARB;
        public static Delegates.GenQueriesARB GenQueriesARB;
        public static Delegates.DeleteQueriesARB DeleteQueriesARB;
        public static Delegates.IsQueryARB IsQueryARB;
        public static Delegates.BeginQueryARB BeginQueryARB;
        public static Delegates.EndQueryARB EndQueryARB;
        public static Delegates.GetQueryivARB GetQueryivARB;
        public static Delegates.GetQueryObjectivARB GetQueryObjectivARB;
        public static Delegates.GetQueryObjectuivARB GetQueryObjectuivARB;
        public static Delegates.DeleteObjectARB DeleteObjectARB;
        public static Delegates.GetHandleARB GetHandleARB;
        public static Delegates.DetachObjectARB DetachObjectARB;
        public static Delegates.CreateShaderObjectARB CreateShaderObjectARB;
        public static Delegates.ShaderSourceARB ShaderSourceARB;
        public static Delegates.CompileShaderARB CompileShaderARB;
        public static Delegates.CreateProgramObjectARB CreateProgramObjectARB;
        public static Delegates.AttachObjectARB AttachObjectARB;
        public static Delegates.LinkProgramARB LinkProgramARB;
        public static Delegates.UseProgramObjectARB UseProgramObjectARB;
        public static Delegates.ValidateProgramARB ValidateProgramARB;
        public static Delegates.Uniform1fARB Uniform1fARB;
        public static Delegates.Uniform2fARB Uniform2fARB;
        public static Delegates.Uniform3fARB Uniform3fARB;
        public static Delegates.Uniform4fARB Uniform4fARB;
        public static Delegates.Uniform1iARB Uniform1iARB;
        public static Delegates.Uniform2iARB Uniform2iARB;
        public static Delegates.Uniform3iARB Uniform3iARB;
        public static Delegates.Uniform4iARB Uniform4iARB;
        public static Delegates.Uniform1fvARB Uniform1fvARB;
        public static Delegates.Uniform2fvARB Uniform2fvARB;
        public static Delegates.Uniform3fvARB Uniform3fvARB;
        public static Delegates.Uniform4fvARB Uniform4fvARB;
        public static Delegates.Uniform1ivARB Uniform1ivARB;
        public static Delegates.Uniform2ivARB Uniform2ivARB;
        public static Delegates.Uniform3ivARB Uniform3ivARB;
        public static Delegates.Uniform4ivARB Uniform4ivARB;
        public static Delegates.UniformMatrix2fvARB UniformMatrix2fvARB;
        public static Delegates.UniformMatrix3fvARB UniformMatrix3fvARB;
        public static Delegates.UniformMatrix4fvARB UniformMatrix4fvARB;
        public static Delegates.GetObjectParameterfvARB GetObjectParameterfvARB;
        public static Delegates.GetObjectParameterivARB GetObjectParameterivARB;
        public static Delegates.GetInfoLogARB GetInfoLogARB;
        public static Delegates.GetAttachedObjectsARB GetAttachedObjectsARB;
        public static Delegates.GetUniformLocationARB GetUniformLocationARB;
        public static Delegates.GetActiveUniformARB GetActiveUniformARB;
        public static Delegates.GetUniformfvARB GetUniformfvARB;
        public static Delegates.GetUniformivARB GetUniformivARB;
        public static Delegates.GetShaderSourceARB GetShaderSourceARB;
        public static Delegates.BindAttribLocationARB BindAttribLocationARB;
        public static Delegates.GetActiveAttribARB GetActiveAttribARB;
        public static Delegates.GetAttribLocationARB GetAttribLocationARB;
        public static Delegates.DrawBuffersARB DrawBuffersARB;
        public static Delegates.ClampColorARB ClampColorARB;
        public static Delegates.BlendColorEXT BlendColorEXT;
        public static Delegates.PolygonOffsetEXT PolygonOffsetEXT;
        public static Delegates.TexImage3DEXT TexImage3DEXT;
        public static Delegates.TexSubImage3DEXT TexSubImage3DEXT;
        public static Delegates.GetTexFilterFuncSGIS GetTexFilterFuncSGIS;
        public static Delegates.TexFilterFuncSGIS TexFilterFuncSGIS;
        public static Delegates.TexSubImage1DEXT TexSubImage1DEXT;
        public static Delegates.TexSubImage2DEXT TexSubImage2DEXT;
        public static Delegates.CopyTexImage1DEXT CopyTexImage1DEXT;
        public static Delegates.CopyTexImage2DEXT CopyTexImage2DEXT;
        public static Delegates.CopyTexSubImage1DEXT CopyTexSubImage1DEXT;
        public static Delegates.CopyTexSubImage2DEXT CopyTexSubImage2DEXT;
        public static Delegates.CopyTexSubImage3DEXT CopyTexSubImage3DEXT;
        public static Delegates.GetHistogramEXT GetHistogramEXT;
        public static Delegates.GetHistogramParameterfvEXT GetHistogramParameterfvEXT;
        public static Delegates.GetHistogramParameterivEXT GetHistogramParameterivEXT;
        public static Delegates.GetMinmaxEXT GetMinmaxEXT;
        public static Delegates.GetMinmaxParameterfvEXT GetMinmaxParameterfvEXT;
        public static Delegates.GetMinmaxParameterivEXT GetMinmaxParameterivEXT;
        public static Delegates.HistogramEXT HistogramEXT;
        public static Delegates.MinmaxEXT MinmaxEXT;
        public static Delegates.ResetHistogramEXT ResetHistogramEXT;
        public static Delegates.ResetMinmaxEXT ResetMinmaxEXT;
        public static Delegates.ConvolutionFilter1DEXT ConvolutionFilter1DEXT;
        public static Delegates.ConvolutionFilter2DEXT ConvolutionFilter2DEXT;
        public static Delegates.ConvolutionParameterfEXT ConvolutionParameterfEXT;
        public static Delegates.ConvolutionParameterfvEXT ConvolutionParameterfvEXT;
        public static Delegates.ConvolutionParameteriEXT ConvolutionParameteriEXT;
        public static Delegates.ConvolutionParameterivEXT ConvolutionParameterivEXT;
        public static Delegates.CopyConvolutionFilter1DEXT CopyConvolutionFilter1DEXT;
        public static Delegates.CopyConvolutionFilter2DEXT CopyConvolutionFilter2DEXT;
        public static Delegates.GetConvolutionFilterEXT GetConvolutionFilterEXT;
        public static Delegates.GetConvolutionParameterfvEXT GetConvolutionParameterfvEXT;
        public static Delegates.GetConvolutionParameterivEXT GetConvolutionParameterivEXT;
        public static Delegates.GetSeparableFilterEXT GetSeparableFilterEXT;
        public static Delegates.SeparableFilter2DEXT SeparableFilter2DEXT;
        public static Delegates.ColorTableSGI ColorTableSGI;
        public static Delegates.ColorTableParameterfvSGI ColorTableParameterfvSGI;
        public static Delegates.ColorTableParameterivSGI ColorTableParameterivSGI;
        public static Delegates.CopyColorTableSGI CopyColorTableSGI;
        public static Delegates.GetColorTableSGI GetColorTableSGI;
        public static Delegates.GetColorTableParameterfvSGI GetColorTableParameterfvSGI;
        public static Delegates.GetColorTableParameterivSGI GetColorTableParameterivSGI;
        public static Delegates.PixelTexGenSGIX PixelTexGenSGIX;
        public static Delegates.PixelTexGenParameteriSGIS PixelTexGenParameteriSGIS;
        public static Delegates.PixelTexGenParameterivSGIS PixelTexGenParameterivSGIS;
        public static Delegates.PixelTexGenParameterfSGIS PixelTexGenParameterfSGIS;
        public static Delegates.PixelTexGenParameterfvSGIS PixelTexGenParameterfvSGIS;
        public static Delegates.GetPixelTexGenParameterivSGIS GetPixelTexGenParameterivSGIS;
        public static Delegates.GetPixelTexGenParameterfvSGIS GetPixelTexGenParameterfvSGIS;
        public static Delegates.TexImage4DSGIS TexImage4DSGIS;
        public static Delegates.TexSubImage4DSGIS TexSubImage4DSGIS;
        public static Delegates.AreTexturesResidentEXT AreTexturesResidentEXT;
        public static Delegates.BindTextureEXT BindTextureEXT;
        public static Delegates.DeleteTexturesEXT DeleteTexturesEXT;
        public static Delegates.GenTexturesEXT GenTexturesEXT;
        public static Delegates.IsTextureEXT IsTextureEXT;
        public static Delegates.PrioritizeTexturesEXT PrioritizeTexturesEXT;
        public static Delegates.DetailTexFuncSGIS DetailTexFuncSGIS;
        public static Delegates.GetDetailTexFuncSGIS GetDetailTexFuncSGIS;
        public static Delegates.SharpenTexFuncSGIS SharpenTexFuncSGIS;
        public static Delegates.GetSharpenTexFuncSGIS GetSharpenTexFuncSGIS;
        public static Delegates.SampleMaskSGIS SampleMaskSGIS;
        public static Delegates.SamplePatternSGIS SamplePatternSGIS;
        public static Delegates.ArrayElementEXT ArrayElementEXT;
        public static Delegates.ColorPointerEXT ColorPointerEXT;
        public static Delegates.DrawArraysEXT DrawArraysEXT;
        public static Delegates.EdgeFlagPointerEXT EdgeFlagPointerEXT;
        public static Delegates.GetPointervEXT GetPointervEXT;
        public static Delegates.IndexPointerEXT IndexPointerEXT;
        public static Delegates.NormalPointerEXT NormalPointerEXT;
        public static Delegates.TexCoordPointerEXT TexCoordPointerEXT;
        public static Delegates.VertexPointerEXT VertexPointerEXT;
        public static Delegates.BlendEquationEXT BlendEquationEXT;
        public static Delegates.SpriteParameterfSGIX SpriteParameterfSGIX;
        public static Delegates.SpriteParameterfvSGIX SpriteParameterfvSGIX;
        public static Delegates.SpriteParameteriSGIX SpriteParameteriSGIX;
        public static Delegates.SpriteParameterivSGIX SpriteParameterivSGIX;
        public static Delegates.PointParameterfEXT PointParameterfEXT;
        public static Delegates.PointParameterfvEXT PointParameterfvEXT;
        public static Delegates.PointParameterfSGIS PointParameterfSGIS;
        public static Delegates.PointParameterfvSGIS PointParameterfvSGIS;
        public static Delegates.GetInstrumentsSGIX GetInstrumentsSGIX;
        public static Delegates.InstrumentsBufferSGIX InstrumentsBufferSGIX;
        public static Delegates.PollInstrumentsSGIX PollInstrumentsSGIX;
        public static Delegates.ReadInstrumentsSGIX ReadInstrumentsSGIX;
        public static Delegates.StartInstrumentsSGIX StartInstrumentsSGIX;
        public static Delegates.StopInstrumentsSGIX StopInstrumentsSGIX;
        public static Delegates.FrameZoomSGIX FrameZoomSGIX;
        public static Delegates.TagSampleBufferSGIX TagSampleBufferSGIX;
        public static Delegates.DeformationMap3dSGIX DeformationMap3dSGIX;
        public static Delegates.DeformationMap3fSGIX DeformationMap3fSGIX;
        public static Delegates.DeformSGIX DeformSGIX;
        public static Delegates.LoadIdentityDeformationMapSGIX LoadIdentityDeformationMapSGIX;
        public static Delegates.ReferencePlaneSGIX ReferencePlaneSGIX;
        public static Delegates.FlushRasterSGIX FlushRasterSGIX;
        public static Delegates.FogFuncSGIS FogFuncSGIS;
        public static Delegates.GetFogFuncSGIS GetFogFuncSGIS;
        public static Delegates.ImageTransformParameteriHP ImageTransformParameteriHP;
        public static Delegates.ImageTransformParameterfHP ImageTransformParameterfHP;
        public static Delegates.ImageTransformParameterivHP ImageTransformParameterivHP;
        public static Delegates.ImageTransformParameterfvHP ImageTransformParameterfvHP;
        public static Delegates.GetImageTransformParameterivHP GetImageTransformParameterivHP;
        public static Delegates.GetImageTransformParameterfvHP GetImageTransformParameterfvHP;
        public static Delegates.ColorSubTableEXT ColorSubTableEXT;
        public static Delegates.CopyColorSubTableEXT CopyColorSubTableEXT;
        public static Delegates.HintPGI HintPGI;
        public static Delegates.ColorTableEXT ColorTableEXT;
        public static Delegates.GetColorTableEXT GetColorTableEXT;
        public static Delegates.GetColorTableParameterivEXT GetColorTableParameterivEXT;
        public static Delegates.GetColorTableParameterfvEXT GetColorTableParameterfvEXT;
        public static Delegates.GetListParameterfvSGIX GetListParameterfvSGIX;
        public static Delegates.GetListParameterivSGIX GetListParameterivSGIX;
        public static Delegates.ListParameterfSGIX ListParameterfSGIX;
        public static Delegates.ListParameterfvSGIX ListParameterfvSGIX;
        public static Delegates.ListParameteriSGIX ListParameteriSGIX;
        public static Delegates.ListParameterivSGIX ListParameterivSGIX;
        public static Delegates.IndexMaterialEXT IndexMaterialEXT;
        public static Delegates.IndexFuncEXT IndexFuncEXT;
        public static Delegates.LockArraysEXT LockArraysEXT;
        public static Delegates.UnlockArraysEXT UnlockArraysEXT;
        public static Delegates.CullParameterdvEXT CullParameterdvEXT;
        public static Delegates.CullParameterfvEXT CullParameterfvEXT;
        public static Delegates.FragmentColorMaterialSGIX FragmentColorMaterialSGIX;
        public static Delegates.FragmentLightfSGIX FragmentLightfSGIX;
        public static Delegates.FragmentLightfvSGIX FragmentLightfvSGIX;
        public static Delegates.FragmentLightiSGIX FragmentLightiSGIX;
        public static Delegates.FragmentLightivSGIX FragmentLightivSGIX;
        public static Delegates.FragmentLightModelfSGIX FragmentLightModelfSGIX;
        public static Delegates.FragmentLightModelfvSGIX FragmentLightModelfvSGIX;
        public static Delegates.FragmentLightModeliSGIX FragmentLightModeliSGIX;
        public static Delegates.FragmentLightModelivSGIX FragmentLightModelivSGIX;
        public static Delegates.FragmentMaterialfSGIX FragmentMaterialfSGIX;
        public static Delegates.FragmentMaterialfvSGIX FragmentMaterialfvSGIX;
        public static Delegates.FragmentMaterialiSGIX FragmentMaterialiSGIX;
        public static Delegates.FragmentMaterialivSGIX FragmentMaterialivSGIX;
        public static Delegates.GetFragmentLightfvSGIX GetFragmentLightfvSGIX;
        public static Delegates.GetFragmentLightivSGIX GetFragmentLightivSGIX;
        public static Delegates.GetFragmentMaterialfvSGIX GetFragmentMaterialfvSGIX;
        public static Delegates.GetFragmentMaterialivSGIX GetFragmentMaterialivSGIX;
        public static Delegates.LightEnviSGIX LightEnviSGIX;
        public static Delegates.DrawRangeElementsEXT DrawRangeElementsEXT;
        public static Delegates.ApplyTextureEXT ApplyTextureEXT;
        public static Delegates.TextureLightEXT TextureLightEXT;
        public static Delegates.TextureMaterialEXT TextureMaterialEXT;
        public static Delegates.AsyncMarkerSGIX AsyncMarkerSGIX;
        public static Delegates.FinishAsyncSGIX FinishAsyncSGIX;
        public static Delegates.PollAsyncSGIX PollAsyncSGIX;
        public static Delegates.GenAsyncMarkersSGIX GenAsyncMarkersSGIX;
        public static Delegates.DeleteAsyncMarkersSGIX DeleteAsyncMarkersSGIX;
        public static Delegates.IsAsyncMarkerSGIX IsAsyncMarkerSGIX;
        public static Delegates.VertexPointervINTEL VertexPointervINTEL;
        public static Delegates.NormalPointervINTEL NormalPointervINTEL;
        public static Delegates.ColorPointervINTEL ColorPointervINTEL;
        public static Delegates.TexCoordPointervINTEL TexCoordPointervINTEL;
        public static Delegates.PixelTransformParameteriEXT PixelTransformParameteriEXT;
        public static Delegates.PixelTransformParameterfEXT PixelTransformParameterfEXT;
        public static Delegates.PixelTransformParameterivEXT PixelTransformParameterivEXT;
        public static Delegates.PixelTransformParameterfvEXT PixelTransformParameterfvEXT;
        public static Delegates.SecondaryColor3bEXT SecondaryColor3bEXT;
        public static Delegates.SecondaryColor3bvEXT SecondaryColor3bvEXT;
        public static Delegates.SecondaryColor3dEXT SecondaryColor3dEXT;
        public static Delegates.SecondaryColor3dvEXT SecondaryColor3dvEXT;
        public static Delegates.SecondaryColor3fEXT SecondaryColor3fEXT;
        public static Delegates.SecondaryColor3fvEXT SecondaryColor3fvEXT;
        public static Delegates.SecondaryColor3iEXT SecondaryColor3iEXT;
        public static Delegates.SecondaryColor3ivEXT SecondaryColor3ivEXT;
        public static Delegates.SecondaryColor3sEXT SecondaryColor3sEXT;
        public static Delegates.SecondaryColor3svEXT SecondaryColor3svEXT;
        public static Delegates.SecondaryColor3ubEXT SecondaryColor3ubEXT;
        public static Delegates.SecondaryColor3ubvEXT SecondaryColor3ubvEXT;
        public static Delegates.SecondaryColor3uiEXT SecondaryColor3uiEXT;
        public static Delegates.SecondaryColor3uivEXT SecondaryColor3uivEXT;
        public static Delegates.SecondaryColor3usEXT SecondaryColor3usEXT;
        public static Delegates.SecondaryColor3usvEXT SecondaryColor3usvEXT;
        public static Delegates.SecondaryColorPointerEXT SecondaryColorPointerEXT;
        public static Delegates.TextureNormalEXT TextureNormalEXT;
        public static Delegates.MultiDrawArraysEXT MultiDrawArraysEXT;
        public static Delegates.MultiDrawElementsEXT MultiDrawElementsEXT;
        public static Delegates.FogCoordfEXT FogCoordfEXT;
        public static Delegates.FogCoordfvEXT FogCoordfvEXT;
        public static Delegates.FogCoorddEXT FogCoorddEXT;
        public static Delegates.FogCoorddvEXT FogCoorddvEXT;
        public static Delegates.FogCoordPointerEXT FogCoordPointerEXT;
        public static Delegates.Tangent3bEXT Tangent3bEXT;
        public static Delegates.Tangent3bvEXT Tangent3bvEXT;
        public static Delegates.Tangent3dEXT Tangent3dEXT;
        public static Delegates.Tangent3dvEXT Tangent3dvEXT;
        public static Delegates.Tangent3fEXT Tangent3fEXT;
        public static Delegates.Tangent3fvEXT Tangent3fvEXT;
        public static Delegates.Tangent3iEXT Tangent3iEXT;
        public static Delegates.Tangent3ivEXT Tangent3ivEXT;
        public static Delegates.Tangent3sEXT Tangent3sEXT;
        public static Delegates.Tangent3svEXT Tangent3svEXT;
        public static Delegates.Binormal3bEXT Binormal3bEXT;
        public static Delegates.Binormal3bvEXT Binormal3bvEXT;
        public static Delegates.Binormal3dEXT Binormal3dEXT;
        public static Delegates.Binormal3dvEXT Binormal3dvEXT;
        public static Delegates.Binormal3fEXT Binormal3fEXT;
        public static Delegates.Binormal3fvEXT Binormal3fvEXT;
        public static Delegates.Binormal3iEXT Binormal3iEXT;
        public static Delegates.Binormal3ivEXT Binormal3ivEXT;
        public static Delegates.Binormal3sEXT Binormal3sEXT;
        public static Delegates.Binormal3svEXT Binormal3svEXT;
        public static Delegates.TangentPointerEXT TangentPointerEXT;
        public static Delegates.BinormalPointerEXT BinormalPointerEXT;
        public static Delegates.FinishTextureSUNX FinishTextureSUNX;
        public static Delegates.GlobalAlphaFactorbSUN GlobalAlphaFactorbSUN;
        public static Delegates.GlobalAlphaFactorsSUN GlobalAlphaFactorsSUN;
        public static Delegates.GlobalAlphaFactoriSUN GlobalAlphaFactoriSUN;
        public static Delegates.GlobalAlphaFactorfSUN GlobalAlphaFactorfSUN;
        public static Delegates.GlobalAlphaFactordSUN GlobalAlphaFactordSUN;
        public static Delegates.GlobalAlphaFactorubSUN GlobalAlphaFactorubSUN;
        public static Delegates.GlobalAlphaFactorusSUN GlobalAlphaFactorusSUN;
        public static Delegates.GlobalAlphaFactoruiSUN GlobalAlphaFactoruiSUN;
        public static Delegates.ReplacementCodeuiSUN ReplacementCodeuiSUN;
        public static Delegates.ReplacementCodeusSUN ReplacementCodeusSUN;
        public static Delegates.ReplacementCodeubSUN ReplacementCodeubSUN;
        public static Delegates.ReplacementCodeuivSUN ReplacementCodeuivSUN;
        public static Delegates.ReplacementCodeusvSUN ReplacementCodeusvSUN;
        public static Delegates.ReplacementCodeubvSUN ReplacementCodeubvSUN;
        public static Delegates.ReplacementCodePointerSUN ReplacementCodePointerSUN;
        public static Delegates.Color4ubVertex2fSUN Color4ubVertex2fSUN;
        public static Delegates.Color4ubVertex2fvSUN Color4ubVertex2fvSUN;
        public static Delegates.Color4ubVertex3fSUN Color4ubVertex3fSUN;
        public static Delegates.Color4ubVertex3fvSUN Color4ubVertex3fvSUN;
        public static Delegates.Color3fVertex3fSUN Color3fVertex3fSUN;
        public static Delegates.Color3fVertex3fvSUN Color3fVertex3fvSUN;
        public static Delegates.Normal3fVertex3fSUN Normal3fVertex3fSUN;
        public static Delegates.Normal3fVertex3fvSUN Normal3fVertex3fvSUN;
        public static Delegates.Color4fNormal3fVertex3fSUN Color4fNormal3fVertex3fSUN;
        public static Delegates.Color4fNormal3fVertex3fvSUN Color4fNormal3fVertex3fvSUN;
        public static Delegates.TexCoord2fVertex3fSUN TexCoord2fVertex3fSUN;
        public static Delegates.TexCoord2fVertex3fvSUN TexCoord2fVertex3fvSUN;
        public static Delegates.TexCoord4fVertex4fSUN TexCoord4fVertex4fSUN;
        public static Delegates.TexCoord4fVertex4fvSUN TexCoord4fVertex4fvSUN;
        public static Delegates.TexCoord2fColor4ubVertex3fSUN TexCoord2fColor4ubVertex3fSUN;
        public static Delegates.TexCoord2fColor4ubVertex3fvSUN TexCoord2fColor4ubVertex3fvSUN;
        public static Delegates.TexCoord2fColor3fVertex3fSUN TexCoord2fColor3fVertex3fSUN;
        public static Delegates.TexCoord2fColor3fVertex3fvSUN TexCoord2fColor3fVertex3fvSUN;
        public static Delegates.TexCoord2fNormal3fVertex3fSUN TexCoord2fNormal3fVertex3fSUN;
        public static Delegates.TexCoord2fNormal3fVertex3fvSUN TexCoord2fNormal3fVertex3fvSUN;
        public static Delegates.TexCoord2fColor4fNormal3fVertex3fSUN TexCoord2fColor4fNormal3fVertex3fSUN;
        public static Delegates.TexCoord2fColor4fNormal3fVertex3fvSUN TexCoord2fColor4fNormal3fVertex3fvSUN;
        public static Delegates.TexCoord4fColor4fNormal3fVertex4fSUN TexCoord4fColor4fNormal3fVertex4fSUN;
        public static Delegates.TexCoord4fColor4fNormal3fVertex4fvSUN TexCoord4fColor4fNormal3fVertex4fvSUN;
        public static Delegates.ReplacementCodeuiVertex3fSUN ReplacementCodeuiVertex3fSUN;
        public static Delegates.ReplacementCodeuiVertex3fvSUN ReplacementCodeuiVertex3fvSUN;
        public static Delegates.ReplacementCodeuiColor4ubVertex3fSUN ReplacementCodeuiColor4ubVertex3fSUN;
        public static Delegates.ReplacementCodeuiColor4ubVertex3fvSUN ReplacementCodeuiColor4ubVertex3fvSUN;
        public static Delegates.ReplacementCodeuiColor3fVertex3fSUN ReplacementCodeuiColor3fVertex3fSUN;
        public static Delegates.ReplacementCodeuiColor3fVertex3fvSUN ReplacementCodeuiColor3fVertex3fvSUN;
        public static Delegates.ReplacementCodeuiNormal3fVertex3fSUN ReplacementCodeuiNormal3fVertex3fSUN;
        public static Delegates.ReplacementCodeuiNormal3fVertex3fvSUN ReplacementCodeuiNormal3fVertex3fvSUN;
        public static Delegates.ReplacementCodeuiColor4fNormal3fVertex3fSUN ReplacementCodeuiColor4fNormal3fVertex3fSUN;
        public static Delegates.ReplacementCodeuiColor4fNormal3fVertex3fvSUN ReplacementCodeuiColor4fNormal3fVertex3fvSUN;
        public static Delegates.ReplacementCodeuiTexCoord2fVertex3fSUN ReplacementCodeuiTexCoord2fVertex3fSUN;
        public static Delegates.ReplacementCodeuiTexCoord2fVertex3fvSUN ReplacementCodeuiTexCoord2fVertex3fvSUN;
        public static Delegates.ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
        public static Delegates.ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
        public static Delegates.ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
        public static Delegates.ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
        public static Delegates.BlendFuncSeparateEXT BlendFuncSeparateEXT;
        public static Delegates.BlendFuncSeparateINGR BlendFuncSeparateINGR;
        public static Delegates.VertexWeightfEXT VertexWeightfEXT;
        public static Delegates.VertexWeightfvEXT VertexWeightfvEXT;
        public static Delegates.VertexWeightPointerEXT VertexWeightPointerEXT;
        public static Delegates.FlushVertexArrayRangeNV FlushVertexArrayRangeNV;
        public static Delegates.VertexArrayRangeNV VertexArrayRangeNV;
        public static Delegates.CombinerParameterfvNV CombinerParameterfvNV;
        public static Delegates.CombinerParameterfNV CombinerParameterfNV;
        public static Delegates.CombinerParameterivNV CombinerParameterivNV;
        public static Delegates.CombinerParameteriNV CombinerParameteriNV;
        public static Delegates.CombinerInputNV CombinerInputNV;
        public static Delegates.CombinerOutputNV CombinerOutputNV;
        public static Delegates.FinalCombinerInputNV FinalCombinerInputNV;
        public static Delegates.GetCombinerInputParameterfvNV GetCombinerInputParameterfvNV;
        public static Delegates.GetCombinerInputParameterivNV GetCombinerInputParameterivNV;
        public static Delegates.GetCombinerOutputParameterfvNV GetCombinerOutputParameterfvNV;
        public static Delegates.GetCombinerOutputParameterivNV GetCombinerOutputParameterivNV;
        public static Delegates.GetFinalCombinerInputParameterfvNV GetFinalCombinerInputParameterfvNV;
        public static Delegates.GetFinalCombinerInputParameterivNV GetFinalCombinerInputParameterivNV;
        public static Delegates.ResizeBuffersMESA ResizeBuffersMESA;
        public static Delegates.WindowPos2dMESA WindowPos2dMESA;
        public static Delegates.WindowPos2dvMESA WindowPos2dvMESA;
        public static Delegates.WindowPos2fMESA WindowPos2fMESA;
        public static Delegates.WindowPos2fvMESA WindowPos2fvMESA;
        public static Delegates.WindowPos2iMESA WindowPos2iMESA;
        public static Delegates.WindowPos2ivMESA WindowPos2ivMESA;
        public static Delegates.WindowPos2sMESA WindowPos2sMESA;
        public static Delegates.WindowPos2svMESA WindowPos2svMESA;
        public static Delegates.WindowPos3dMESA WindowPos3dMESA;
        public static Delegates.WindowPos3dvMESA WindowPos3dvMESA;
        public static Delegates.WindowPos3fMESA WindowPos3fMESA;
        public static Delegates.WindowPos3fvMESA WindowPos3fvMESA;
        public static Delegates.WindowPos3iMESA WindowPos3iMESA;
        public static Delegates.WindowPos3ivMESA WindowPos3ivMESA;
        public static Delegates.WindowPos3sMESA WindowPos3sMESA;
        public static Delegates.WindowPos3svMESA WindowPos3svMESA;
        public static Delegates.WindowPos4dMESA WindowPos4dMESA;
        public static Delegates.WindowPos4dvMESA WindowPos4dvMESA;
        public static Delegates.WindowPos4fMESA WindowPos4fMESA;
        public static Delegates.WindowPos4fvMESA WindowPos4fvMESA;
        public static Delegates.WindowPos4iMESA WindowPos4iMESA;
        public static Delegates.WindowPos4ivMESA WindowPos4ivMESA;
        public static Delegates.WindowPos4sMESA WindowPos4sMESA;
        public static Delegates.WindowPos4svMESA WindowPos4svMESA;
        public static Delegates.MultiModeDrawArraysIBM MultiModeDrawArraysIBM;
        public static Delegates.MultiModeDrawElementsIBM MultiModeDrawElementsIBM;
        public static Delegates.ColorPointerListIBM ColorPointerListIBM;
        public static Delegates.SecondaryColorPointerListIBM SecondaryColorPointerListIBM;
        public static Delegates.EdgeFlagPointerListIBM EdgeFlagPointerListIBM;
        public static Delegates.FogCoordPointerListIBM FogCoordPointerListIBM;
        public static Delegates.IndexPointerListIBM IndexPointerListIBM;
        public static Delegates.NormalPointerListIBM NormalPointerListIBM;
        public static Delegates.TexCoordPointerListIBM TexCoordPointerListIBM;
        public static Delegates.VertexPointerListIBM VertexPointerListIBM;
        public static Delegates.TbufferMask3DFX TbufferMask3DFX;
        public static Delegates.SampleMaskEXT SampleMaskEXT;
        public static Delegates.SamplePatternEXT SamplePatternEXT;
        public static Delegates.TextureColorMaskSGIS TextureColorMaskSGIS;
        public static Delegates.IglooInterfaceSGIX IglooInterfaceSGIX;
        public static Delegates.DeleteFencesNV DeleteFencesNV;
        public static Delegates.GenFencesNV GenFencesNV;
        public static Delegates.IsFenceNV IsFenceNV;
        public static Delegates.TestFenceNV TestFenceNV;
        public static Delegates.GetFenceivNV GetFenceivNV;
        public static Delegates.FinishFenceNV FinishFenceNV;
        public static Delegates.SetFenceNV SetFenceNV;
        public static Delegates.MapControlPointsNV MapControlPointsNV;
        public static Delegates.MapParameterivNV MapParameterivNV;
        public static Delegates.MapParameterfvNV MapParameterfvNV;
        public static Delegates.GetMapControlPointsNV GetMapControlPointsNV;
        public static Delegates.GetMapParameterivNV GetMapParameterivNV;
        public static Delegates.GetMapParameterfvNV GetMapParameterfvNV;
        public static Delegates.GetMapAttribParameterivNV GetMapAttribParameterivNV;
        public static Delegates.GetMapAttribParameterfvNV GetMapAttribParameterfvNV;
        public static Delegates.EvalMapsNV EvalMapsNV;
        public static Delegates.CombinerStageParameterfvNV CombinerStageParameterfvNV;
        public static Delegates.GetCombinerStageParameterfvNV GetCombinerStageParameterfvNV;
        public static Delegates.AreProgramsResidentNV AreProgramsResidentNV;
        public static Delegates.BindProgramNV BindProgramNV;
        public static Delegates.DeleteProgramsNV DeleteProgramsNV;
        public static Delegates.ExecuteProgramNV ExecuteProgramNV;
        public static Delegates.GenProgramsNV GenProgramsNV;
        public static Delegates.GetProgramParameterdvNV GetProgramParameterdvNV;
        public static Delegates.GetProgramParameterfvNV GetProgramParameterfvNV;
        public static Delegates.GetProgramivNV GetProgramivNV;
        public static Delegates.GetProgramStringNV GetProgramStringNV;
        public static Delegates.GetTrackMatrixivNV GetTrackMatrixivNV;
        public static Delegates.GetVertexAttribdvNV GetVertexAttribdvNV;
        public static Delegates.GetVertexAttribfvNV GetVertexAttribfvNV;
        public static Delegates.GetVertexAttribivNV GetVertexAttribivNV;
        public static Delegates.GetVertexAttribPointervNV GetVertexAttribPointervNV;
        public static Delegates.IsProgramNV IsProgramNV;
        public static Delegates.LoadProgramNV LoadProgramNV;
        public static Delegates.ProgramParameter4dNV ProgramParameter4dNV;
        public static Delegates.ProgramParameter4dvNV ProgramParameter4dvNV;
        public static Delegates.ProgramParameter4fNV ProgramParameter4fNV;
        public static Delegates.ProgramParameter4fvNV ProgramParameter4fvNV;
        public static Delegates.ProgramParameters4dvNV ProgramParameters4dvNV;
        public static Delegates.ProgramParameters4fvNV ProgramParameters4fvNV;
        public static Delegates.RequestResidentProgramsNV RequestResidentProgramsNV;
        public static Delegates.TrackMatrixNV TrackMatrixNV;
        public static Delegates.VertexAttribPointerNV VertexAttribPointerNV;
        public static Delegates.VertexAttrib1dNV VertexAttrib1dNV;
        public static Delegates.VertexAttrib1dvNV VertexAttrib1dvNV;
        public static Delegates.VertexAttrib1fNV VertexAttrib1fNV;
        public static Delegates.VertexAttrib1fvNV VertexAttrib1fvNV;
        public static Delegates.VertexAttrib1sNV VertexAttrib1sNV;
        public static Delegates.VertexAttrib1svNV VertexAttrib1svNV;
        public static Delegates.VertexAttrib2dNV VertexAttrib2dNV;
        public static Delegates.VertexAttrib2dvNV VertexAttrib2dvNV;
        public static Delegates.VertexAttrib2fNV VertexAttrib2fNV;
        public static Delegates.VertexAttrib2fvNV VertexAttrib2fvNV;
        public static Delegates.VertexAttrib2sNV VertexAttrib2sNV;
        public static Delegates.VertexAttrib2svNV VertexAttrib2svNV;
        public static Delegates.VertexAttrib3dNV VertexAttrib3dNV;
        public static Delegates.VertexAttrib3dvNV VertexAttrib3dvNV;
        public static Delegates.VertexAttrib3fNV VertexAttrib3fNV;
        public static Delegates.VertexAttrib3fvNV VertexAttrib3fvNV;
        public static Delegates.VertexAttrib3sNV VertexAttrib3sNV;
        public static Delegates.VertexAttrib3svNV VertexAttrib3svNV;
        public static Delegates.VertexAttrib4dNV VertexAttrib4dNV;
        public static Delegates.VertexAttrib4dvNV VertexAttrib4dvNV;
        public static Delegates.VertexAttrib4fNV VertexAttrib4fNV;
        public static Delegates.VertexAttrib4fvNV VertexAttrib4fvNV;
        public static Delegates.VertexAttrib4sNV VertexAttrib4sNV;
        public static Delegates.VertexAttrib4svNV VertexAttrib4svNV;
        public static Delegates.VertexAttrib4ubNV VertexAttrib4ubNV;
        public static Delegates.VertexAttrib4ubvNV VertexAttrib4ubvNV;
        public static Delegates.VertexAttribs1dvNV VertexAttribs1dvNV;
        public static Delegates.VertexAttribs1fvNV VertexAttribs1fvNV;
        public static Delegates.VertexAttribs1svNV VertexAttribs1svNV;
        public static Delegates.VertexAttribs2dvNV VertexAttribs2dvNV;
        public static Delegates.VertexAttribs2fvNV VertexAttribs2fvNV;
        public static Delegates.VertexAttribs2svNV VertexAttribs2svNV;
        public static Delegates.VertexAttribs3dvNV VertexAttribs3dvNV;
        public static Delegates.VertexAttribs3fvNV VertexAttribs3fvNV;
        public static Delegates.VertexAttribs3svNV VertexAttribs3svNV;
        public static Delegates.VertexAttribs4dvNV VertexAttribs4dvNV;
        public static Delegates.VertexAttribs4fvNV VertexAttribs4fvNV;
        public static Delegates.VertexAttribs4svNV VertexAttribs4svNV;
        public static Delegates.VertexAttribs4ubvNV VertexAttribs4ubvNV;
        public static Delegates.TexBumpParameterivATI TexBumpParameterivATI;
        public static Delegates.TexBumpParameterfvATI TexBumpParameterfvATI;
        public static Delegates.GetTexBumpParameterivATI GetTexBumpParameterivATI;
        public static Delegates.GetTexBumpParameterfvATI GetTexBumpParameterfvATI;
        public static Delegates.GenFragmentShadersATI GenFragmentShadersATI;
        public static Delegates.BindFragmentShaderATI BindFragmentShaderATI;
        public static Delegates.DeleteFragmentShaderATI DeleteFragmentShaderATI;
        public static Delegates.BeginFragmentShaderATI BeginFragmentShaderATI;
        public static Delegates.EndFragmentShaderATI EndFragmentShaderATI;
        public static Delegates.PassTexCoordATI PassTexCoordATI;
        public static Delegates.SampleMapATI SampleMapATI;
        public static Delegates.ColorFragmentOp1ATI ColorFragmentOp1ATI;
        public static Delegates.ColorFragmentOp2ATI ColorFragmentOp2ATI;
        public static Delegates.ColorFragmentOp3ATI ColorFragmentOp3ATI;
        public static Delegates.AlphaFragmentOp1ATI AlphaFragmentOp1ATI;
        public static Delegates.AlphaFragmentOp2ATI AlphaFragmentOp2ATI;
        public static Delegates.AlphaFragmentOp3ATI AlphaFragmentOp3ATI;
        public static Delegates.SetFragmentShaderConstantATI SetFragmentShaderConstantATI;
        public static Delegates.PNTrianglesiATI PNTrianglesiATI;
        public static Delegates.PNTrianglesfATI PNTrianglesfATI;
        public static Delegates.NewObjectBufferATI NewObjectBufferATI;
        public static Delegates.IsObjectBufferATI IsObjectBufferATI;
        public static Delegates.UpdateObjectBufferATI UpdateObjectBufferATI;
        public static Delegates.GetObjectBufferfvATI GetObjectBufferfvATI;
        public static Delegates.GetObjectBufferivATI GetObjectBufferivATI;
        public static Delegates.FreeObjectBufferATI FreeObjectBufferATI;
        public static Delegates.ArrayObjectATI ArrayObjectATI;
        public static Delegates.GetArrayObjectfvATI GetArrayObjectfvATI;
        public static Delegates.GetArrayObjectivATI GetArrayObjectivATI;
        public static Delegates.VariantArrayObjectATI VariantArrayObjectATI;
        public static Delegates.GetVariantArrayObjectfvATI GetVariantArrayObjectfvATI;
        public static Delegates.GetVariantArrayObjectivATI GetVariantArrayObjectivATI;
        public static Delegates.BeginVertexShaderEXT BeginVertexShaderEXT;
        public static Delegates.EndVertexShaderEXT EndVertexShaderEXT;
        public static Delegates.BindVertexShaderEXT BindVertexShaderEXT;
        public static Delegates.GenVertexShadersEXT GenVertexShadersEXT;
        public static Delegates.DeleteVertexShaderEXT DeleteVertexShaderEXT;
        public static Delegates.ShaderOp1EXT ShaderOp1EXT;
        public static Delegates.ShaderOp2EXT ShaderOp2EXT;
        public static Delegates.ShaderOp3EXT ShaderOp3EXT;
        public static Delegates.SwizzleEXT SwizzleEXT;
        public static Delegates.WriteMaskEXT WriteMaskEXT;
        public static Delegates.InsertComponentEXT InsertComponentEXT;
        public static Delegates.ExtractComponentEXT ExtractComponentEXT;
        public static Delegates.GenSymbolsEXT GenSymbolsEXT;
        public static Delegates.SetInvariantEXT SetInvariantEXT;
        public static Delegates.SetLocalConstantEXT SetLocalConstantEXT;
        public static Delegates.VariantbvEXT VariantbvEXT;
        public static Delegates.VariantsvEXT VariantsvEXT;
        public static Delegates.VariantivEXT VariantivEXT;
        public static Delegates.VariantfvEXT VariantfvEXT;
        public static Delegates.VariantdvEXT VariantdvEXT;
        public static Delegates.VariantubvEXT VariantubvEXT;
        public static Delegates.VariantusvEXT VariantusvEXT;
        public static Delegates.VariantuivEXT VariantuivEXT;
        public static Delegates.VariantPointerEXT VariantPointerEXT;
        public static Delegates.EnableVariantClientStateEXT EnableVariantClientStateEXT;
        public static Delegates.DisableVariantClientStateEXT DisableVariantClientStateEXT;
        public static Delegates.BindLightParameterEXT BindLightParameterEXT;
        public static Delegates.BindMaterialParameterEXT BindMaterialParameterEXT;
        public static Delegates.BindTexGenParameterEXT BindTexGenParameterEXT;
        public static Delegates.BindTextureUnitParameterEXT BindTextureUnitParameterEXT;
        public static Delegates.BindParameterEXT BindParameterEXT;
        public static Delegates.IsVariantEnabledEXT IsVariantEnabledEXT;
        public static Delegates.GetVariantBooleanvEXT GetVariantBooleanvEXT;
        public static Delegates.GetVariantIntegervEXT GetVariantIntegervEXT;
        public static Delegates.GetVariantFloatvEXT GetVariantFloatvEXT;
        public static Delegates.GetVariantPointervEXT GetVariantPointervEXT;
        public static Delegates.GetInvariantBooleanvEXT GetInvariantBooleanvEXT;
        public static Delegates.GetInvariantIntegervEXT GetInvariantIntegervEXT;
        public static Delegates.GetInvariantFloatvEXT GetInvariantFloatvEXT;
        public static Delegates.GetLocalConstantBooleanvEXT GetLocalConstantBooleanvEXT;
        public static Delegates.GetLocalConstantIntegervEXT GetLocalConstantIntegervEXT;
        public static Delegates.GetLocalConstantFloatvEXT GetLocalConstantFloatvEXT;
        public static Delegates.VertexStream1sATI VertexStream1sATI;
        public static Delegates.VertexStream1svATI VertexStream1svATI;
        public static Delegates.VertexStream1iATI VertexStream1iATI;
        public static Delegates.VertexStream1ivATI VertexStream1ivATI;
        public static Delegates.VertexStream1fATI VertexStream1fATI;
        public static Delegates.VertexStream1fvATI VertexStream1fvATI;
        public static Delegates.VertexStream1dATI VertexStream1dATI;
        public static Delegates.VertexStream1dvATI VertexStream1dvATI;
        public static Delegates.VertexStream2sATI VertexStream2sATI;
        public static Delegates.VertexStream2svATI VertexStream2svATI;
        public static Delegates.VertexStream2iATI VertexStream2iATI;
        public static Delegates.VertexStream2ivATI VertexStream2ivATI;
        public static Delegates.VertexStream2fATI VertexStream2fATI;
        public static Delegates.VertexStream2fvATI VertexStream2fvATI;
        public static Delegates.VertexStream2dATI VertexStream2dATI;
        public static Delegates.VertexStream2dvATI VertexStream2dvATI;
        public static Delegates.VertexStream3sATI VertexStream3sATI;
        public static Delegates.VertexStream3svATI VertexStream3svATI;
        public static Delegates.VertexStream3iATI VertexStream3iATI;
        public static Delegates.VertexStream3ivATI VertexStream3ivATI;
        public static Delegates.VertexStream3fATI VertexStream3fATI;
        public static Delegates.VertexStream3fvATI VertexStream3fvATI;
        public static Delegates.VertexStream3dATI VertexStream3dATI;
        public static Delegates.VertexStream3dvATI VertexStream3dvATI;
        public static Delegates.VertexStream4sATI VertexStream4sATI;
        public static Delegates.VertexStream4svATI VertexStream4svATI;
        public static Delegates.VertexStream4iATI VertexStream4iATI;
        public static Delegates.VertexStream4ivATI VertexStream4ivATI;
        public static Delegates.VertexStream4fATI VertexStream4fATI;
        public static Delegates.VertexStream4fvATI VertexStream4fvATI;
        public static Delegates.VertexStream4dATI VertexStream4dATI;
        public static Delegates.VertexStream4dvATI VertexStream4dvATI;
        public static Delegates.NormalStream3bATI NormalStream3bATI;
        public static Delegates.NormalStream3bvATI NormalStream3bvATI;
        public static Delegates.NormalStream3sATI NormalStream3sATI;
        public static Delegates.NormalStream3svATI NormalStream3svATI;
        public static Delegates.NormalStream3iATI NormalStream3iATI;
        public static Delegates.NormalStream3ivATI NormalStream3ivATI;
        public static Delegates.NormalStream3fATI NormalStream3fATI;
        public static Delegates.NormalStream3fvATI NormalStream3fvATI;
        public static Delegates.NormalStream3dATI NormalStream3dATI;
        public static Delegates.NormalStream3dvATI NormalStream3dvATI;
        public static Delegates.ClientActiveVertexStreamATI ClientActiveVertexStreamATI;
        public static Delegates.VertexBlendEnviATI VertexBlendEnviATI;
        public static Delegates.VertexBlendEnvfATI VertexBlendEnvfATI;
        public static Delegates.ElementPointerATI ElementPointerATI;
        public static Delegates.DrawElementArrayATI DrawElementArrayATI;
        public static Delegates.DrawRangeElementArrayATI DrawRangeElementArrayATI;
        public static Delegates.DrawMeshArraysSUN DrawMeshArraysSUN;
        public static Delegates.GenOcclusionQueriesNV GenOcclusionQueriesNV;
        public static Delegates.DeleteOcclusionQueriesNV DeleteOcclusionQueriesNV;
        public static Delegates.IsOcclusionQueryNV IsOcclusionQueryNV;
        public static Delegates.BeginOcclusionQueryNV BeginOcclusionQueryNV;
        public static Delegates.EndOcclusionQueryNV EndOcclusionQueryNV;
        public static Delegates.GetOcclusionQueryivNV GetOcclusionQueryivNV;
        public static Delegates.GetOcclusionQueryuivNV GetOcclusionQueryuivNV;
        public static Delegates.PointParameteriNV PointParameteriNV;
        public static Delegates.PointParameterivNV PointParameterivNV;
        public static Delegates.ActiveStencilFaceEXT ActiveStencilFaceEXT;
        public static Delegates.ElementPointerAPPLE ElementPointerAPPLE;
        public static Delegates.DrawElementArrayAPPLE DrawElementArrayAPPLE;
        public static Delegates.DrawRangeElementArrayAPPLE DrawRangeElementArrayAPPLE;
        public static Delegates.MultiDrawElementArrayAPPLE MultiDrawElementArrayAPPLE;
        public static Delegates.MultiDrawRangeElementArrayAPPLE MultiDrawRangeElementArrayAPPLE;
        public static Delegates.GenFencesAPPLE GenFencesAPPLE;
        public static Delegates.DeleteFencesAPPLE DeleteFencesAPPLE;
        public static Delegates.SetFenceAPPLE SetFenceAPPLE;
        public static Delegates.IsFenceAPPLE IsFenceAPPLE;
        public static Delegates.TestFenceAPPLE TestFenceAPPLE;
        public static Delegates.FinishFenceAPPLE FinishFenceAPPLE;
        public static Delegates.TestObjectAPPLE TestObjectAPPLE;
        public static Delegates.FinishObjectAPPLE FinishObjectAPPLE;
        public static Delegates.BindVertexArrayAPPLE BindVertexArrayAPPLE;
        public static Delegates.DeleteVertexArraysAPPLE DeleteVertexArraysAPPLE;
        public static Delegates.GenVertexArraysAPPLE GenVertexArraysAPPLE;
        public static Delegates.IsVertexArrayAPPLE IsVertexArrayAPPLE;
        public static Delegates.VertexArrayRangeAPPLE VertexArrayRangeAPPLE;
        public static Delegates.FlushVertexArrayRangeAPPLE FlushVertexArrayRangeAPPLE;
        public static Delegates.VertexArrayParameteriAPPLE VertexArrayParameteriAPPLE;
        public static Delegates.DrawBuffersATI DrawBuffersATI;
        public static Delegates.ProgramNamedParameter4fNV ProgramNamedParameter4fNV;
        public static Delegates.ProgramNamedParameter4dNV ProgramNamedParameter4dNV;
        public static Delegates.ProgramNamedParameter4fvNV ProgramNamedParameter4fvNV;
        public static Delegates.ProgramNamedParameter4dvNV ProgramNamedParameter4dvNV;
        public static Delegates.GetProgramNamedParameterfvNV GetProgramNamedParameterfvNV;
        public static Delegates.GetProgramNamedParameterdvNV GetProgramNamedParameterdvNV;
        public static Delegates.Vertex2hNV Vertex2hNV;
        public static Delegates.Vertex2hvNV Vertex2hvNV;
        public static Delegates.Vertex3hNV Vertex3hNV;
        public static Delegates.Vertex3hvNV Vertex3hvNV;
        public static Delegates.Vertex4hNV Vertex4hNV;
        public static Delegates.Vertex4hvNV Vertex4hvNV;
        public static Delegates.Normal3hNV Normal3hNV;
        public static Delegates.Normal3hvNV Normal3hvNV;
        public static Delegates.Color3hNV Color3hNV;
        public static Delegates.Color3hvNV Color3hvNV;
        public static Delegates.Color4hNV Color4hNV;
        public static Delegates.Color4hvNV Color4hvNV;
        public static Delegates.TexCoord1hNV TexCoord1hNV;
        public static Delegates.TexCoord1hvNV TexCoord1hvNV;
        public static Delegates.TexCoord2hNV TexCoord2hNV;
        public static Delegates.TexCoord2hvNV TexCoord2hvNV;
        public static Delegates.TexCoord3hNV TexCoord3hNV;
        public static Delegates.TexCoord3hvNV TexCoord3hvNV;
        public static Delegates.TexCoord4hNV TexCoord4hNV;
        public static Delegates.TexCoord4hvNV TexCoord4hvNV;
        public static Delegates.MultiTexCoord1hNV MultiTexCoord1hNV;
        public static Delegates.MultiTexCoord1hvNV MultiTexCoord1hvNV;
        public static Delegates.MultiTexCoord2hNV MultiTexCoord2hNV;
        public static Delegates.MultiTexCoord2hvNV MultiTexCoord2hvNV;
        public static Delegates.MultiTexCoord3hNV MultiTexCoord3hNV;
        public static Delegates.MultiTexCoord3hvNV MultiTexCoord3hvNV;
        public static Delegates.MultiTexCoord4hNV MultiTexCoord4hNV;
        public static Delegates.MultiTexCoord4hvNV MultiTexCoord4hvNV;
        public static Delegates.FogCoordhNV FogCoordhNV;
        public static Delegates.FogCoordhvNV FogCoordhvNV;
        public static Delegates.SecondaryColor3hNV SecondaryColor3hNV;
        public static Delegates.SecondaryColor3hvNV SecondaryColor3hvNV;
        public static Delegates.VertexWeighthNV VertexWeighthNV;
        public static Delegates.VertexWeighthvNV VertexWeighthvNV;
        public static Delegates.VertexAttrib1hNV VertexAttrib1hNV;
        public static Delegates.VertexAttrib1hvNV VertexAttrib1hvNV;
        public static Delegates.VertexAttrib2hNV VertexAttrib2hNV;
        public static Delegates.VertexAttrib2hvNV VertexAttrib2hvNV;
        public static Delegates.VertexAttrib3hNV VertexAttrib3hNV;
        public static Delegates.VertexAttrib3hvNV VertexAttrib3hvNV;
        public static Delegates.VertexAttrib4hNV VertexAttrib4hNV;
        public static Delegates.VertexAttrib4hvNV VertexAttrib4hvNV;
        public static Delegates.VertexAttribs1hvNV VertexAttribs1hvNV;
        public static Delegates.VertexAttribs2hvNV VertexAttribs2hvNV;
        public static Delegates.VertexAttribs3hvNV VertexAttribs3hvNV;
        public static Delegates.VertexAttribs4hvNV VertexAttribs4hvNV;
        public static Delegates.PixelDataRangeNV PixelDataRangeNV;
        public static Delegates.FlushPixelDataRangeNV FlushPixelDataRangeNV;
        public static Delegates.PrimitiveRestartNV PrimitiveRestartNV;
        public static Delegates.PrimitiveRestartIndexNV PrimitiveRestartIndexNV;
        public static Delegates.MapObjectBufferATI_ MapObjectBufferATI_;
        public static Delegates.UnmapObjectBufferATI UnmapObjectBufferATI;
        public static Delegates.StencilOpSeparateATI StencilOpSeparateATI;
        public static Delegates.StencilFuncSeparateATI StencilFuncSeparateATI;
        public static Delegates.VertexAttribArrayObjectATI VertexAttribArrayObjectATI;
        public static Delegates.GetVertexAttribArrayObjectfvATI GetVertexAttribArrayObjectfvATI;
        public static Delegates.GetVertexAttribArrayObjectivATI GetVertexAttribArrayObjectivATI;
        public static Delegates.DepthBoundsEXT DepthBoundsEXT;
        public static Delegates.BlendEquationSeparateEXT BlendEquationSeparateEXT;
        public static Delegates.IsRenderbufferEXT IsRenderbufferEXT;
        public static Delegates.BindRenderbufferEXT BindRenderbufferEXT;
        public static Delegates.DeleteRenderbuffersEXT DeleteRenderbuffersEXT;
        public static Delegates.GenRenderbuffersEXT GenRenderbuffersEXT;
        public static Delegates.RenderbufferStorageEXT RenderbufferStorageEXT;
        public static Delegates.GetRenderbufferParameterivEXT GetRenderbufferParameterivEXT;
        public static Delegates.IsFramebufferEXT IsFramebufferEXT;
        public static Delegates.BindFramebufferEXT BindFramebufferEXT;
        public static Delegates.DeleteFramebuffersEXT DeleteFramebuffersEXT;
        public static Delegates.GenFramebuffersEXT GenFramebuffersEXT;
        public static Delegates.CheckFramebufferStatusEXT CheckFramebufferStatusEXT;
        public static Delegates.FramebufferTexture1DEXT FramebufferTexture1DEXT;
        public static Delegates.FramebufferTexture2DEXT FramebufferTexture2DEXT;
        public static Delegates.FramebufferTexture3DEXT FramebufferTexture3DEXT;
        public static Delegates.FramebufferRenderbufferEXT FramebufferRenderbufferEXT;
        public static Delegates.GetFramebufferAttachmentParameterivEXT GetFramebufferAttachmentParameterivEXT;
        public static Delegates.GenerateMipmapEXT GenerateMipmapEXT;
        public static Delegates.StringMarkerGREMEDY StringMarkerGREMEDY;

        #endregion

        #region OpenGL function prototypes

        public static class Delegates
        {
            public delegate void NewList(uint list, Enums.ListMode mode);
            public delegate void EndList();
            public delegate void CallList(uint list);
            public delegate void CallLists(int n, Enums.ListNameType type, [MarshalAs(UnmanagedType.AsAny)] object lists);
            public delegate void DeleteLists(uint list, int range);
            public delegate uint GenLists(int range);
            public delegate void ListBase(uint @base);
            public delegate void Begin(Enums.BeginMode mode);
            public delegate void Bitmap(int width, int height, float xorig, float yorig, float xmove, float ymove, byte[] bitmap);
            public delegate void Color3b(byte red, byte green, byte blue);
            public delegate void Color3bv(byte[] v);
            public delegate void Color3d(double red, double green, double blue);
            public delegate void Color3dv(double[] v);
            public delegate void Color3f(float red, float green, float blue);
            public delegate void Color3fv(float[] v);
            public delegate void Color3i(int red, int green, int blue);
            public delegate void Color3iv(int[] v);
            public delegate void Color3s(short red, short green, short blue);
            public delegate void Color3sv(short[] v);
            public delegate void Color3ub(byte red, byte green, byte blue);
            public delegate void Color3ubv(byte[] v);
            public delegate void Color3ui(uint red, uint green, uint blue);
            public delegate void Color3uiv(uint[] v);
            public delegate void Color3us(ushort red, ushort green, ushort blue);
            public delegate void Color3usv(ushort[] v);
            public delegate void Color4b(byte red, byte green, byte blue, byte alpha);
            public delegate void Color4bv(byte[] v);
            public delegate void Color4d(double red, double green, double blue, double alpha);
            public delegate void Color4dv(double[] v);
            public delegate void Color4f(float red, float green, float blue, float alpha);
            public delegate void Color4fv(float[] v);
            public delegate void Color4i(int red, int green, int blue, int alpha);
            public delegate void Color4iv(int[] v);
            public delegate void Color4s(short red, short green, short blue, short alpha);
            public delegate void Color4sv(short[] v);
            public delegate void Color4ub(byte red, byte green, byte blue, byte alpha);
            public delegate void Color4ubv(byte[] v);
            public delegate void Color4ui(uint red, uint green, uint blue, uint alpha);
            public delegate void Color4uiv(uint[] v);
            public delegate void Color4us(ushort red, ushort green, ushort blue, ushort alpha);
            public delegate void Color4usv(ushort[] v);
            public delegate void EdgeFlag(bool flag);
            public delegate void EdgeFlagv(bool[] flag);
            public delegate void End();
            public delegate void Indexd(double c);
            public delegate void Indexdv(double[] c);
            public delegate void Indexf(float c);
            public delegate void Indexfv(float[] c);
            public delegate void Indexi(int c);
            public delegate void Indexiv(int[] c);
            public delegate void Indexs(short c);
            public delegate void Indexsv(short[] c);
            public delegate void Normal3b(byte nx, byte ny, byte nz);
            public delegate void Normal3bv(byte[] v);
            public delegate void Normal3d(double nx, double ny, double nz);
            public delegate void Normal3dv(double[] v);
            public delegate void Normal3f(float nx, float ny, float nz);
            public delegate void Normal3fv(float[] v);
            public delegate void Normal3i(int nx, int ny, int nz);
            public delegate void Normal3iv(int[] v);
            public delegate void Normal3s(short nx, short ny, short nz);
            public delegate void Normal3sv(short[] v);
            public delegate void RasterPos2d(double x, double y);
            public delegate void RasterPos2dv(double[] v);
            public delegate void RasterPos2f(float x, float y);
            public delegate void RasterPos2fv(float[] v);
            public delegate void RasterPos2i(int x, int y);
            public delegate void RasterPos2iv(int[] v);
            public delegate void RasterPos2s(short x, short y);
            public delegate void RasterPos2sv(short[] v);
            public delegate void RasterPos3d(double x, double y, double z);
            public delegate void RasterPos3dv(double[] v);
            public delegate void RasterPos3f(float x, float y, float z);
            public delegate void RasterPos3fv(float[] v);
            public delegate void RasterPos3i(int x, int y, int z);
            public delegate void RasterPos3iv(int[] v);
            public delegate void RasterPos3s(short x, short y, short z);
            public delegate void RasterPos3sv(short[] v);
            public delegate void RasterPos4d(double x, double y, double z, double w);
            public delegate void RasterPos4dv(double[] v);
            public delegate void RasterPos4f(float x, float y, float z, float w);
            public delegate void RasterPos4fv(float[] v);
            public delegate void RasterPos4i(int x, int y, int z, int w);
            public delegate void RasterPos4iv(int[] v);
            public delegate void RasterPos4s(short x, short y, short z, short w);
            public delegate void RasterPos4sv(short[] v);
            public delegate void Rectd(double x1, double y1, double x2, double y2);
            public delegate void Rectdv(double[] v1, double[] v2);
            public delegate void Rectf(float x1, float y1, float x2, float y2);
            public delegate void Rectfv(float[] v1, float[] v2);
            public delegate void Recti(int x1, int y1, int x2, int y2);
            public delegate void Rectiv(int[] v1, int[] v2);
            public delegate void Rects(short x1, short y1, short x2, short y2);
            public delegate void Rectsv(short[] v1, short[] v2);
            public delegate void TexCoord1d(double s);
            public delegate void TexCoord1dv(double[] v);
            public delegate void TexCoord1f(float s);
            public delegate void TexCoord1fv(float[] v);
            public delegate void TexCoord1i(int s);
            public delegate void TexCoord1iv(int[] v);
            public delegate void TexCoord1s(short s);
            public delegate void TexCoord1sv(short[] v);
            public delegate void TexCoord2d(double s, double t);
            public delegate void TexCoord2dv(double[] v);
            public delegate void TexCoord2f(float s, float t);
            public delegate void TexCoord2fv(float[] v);
            public delegate void TexCoord2i(int s, int t);
            public delegate void TexCoord2iv(int[] v);
            public delegate void TexCoord2s(short s, short t);
            public delegate void TexCoord2sv(short[] v);
            public delegate void TexCoord3d(double s, double t, double r);
            public delegate void TexCoord3dv(double[] v);
            public delegate void TexCoord3f(float s, float t, float r);
            public delegate void TexCoord3fv(float[] v);
            public delegate void TexCoord3i(int s, int t, int r);
            public delegate void TexCoord3iv(int[] v);
            public delegate void TexCoord3s(short s, short t, short r);
            public delegate void TexCoord3sv(short[] v);
            public delegate void TexCoord4d(double s, double t, double r, double q);
            public delegate void TexCoord4dv(double[] v);
            public delegate void TexCoord4f(float s, float t, float r, float q);
            public delegate void TexCoord4fv(float[] v);
            public delegate void TexCoord4i(int s, int t, int r, int q);
            public delegate void TexCoord4iv(int[] v);
            public delegate void TexCoord4s(short s, short t, short r, short q);
            public delegate void TexCoord4sv(short[] v);
            public delegate void Vertex2d(double x, double y);
            public delegate void Vertex2dv(double[] v);
            public delegate void Vertex2f(float x, float y);
            public delegate void Vertex2fv(float[] v);
            public delegate void Vertex2i(int x, int y);
            public delegate void Vertex2iv(int[] v);
            public delegate void Vertex2s(short x, short y);
            public delegate void Vertex2sv(short[] v);
            public delegate void Vertex3d(double x, double y, double z);
            public delegate void Vertex3dv(double[] v);
            public delegate void Vertex3f(float x, float y, float z);
            public delegate void Vertex3fv(float[] v);
            public delegate void Vertex3i(int x, int y, int z);
            public delegate void Vertex3iv(int[] v);
            public delegate void Vertex3s(short x, short y, short z);
            public delegate void Vertex3sv(short[] v);
            public delegate void Vertex4d(double x, double y, double z, double w);
            public delegate void Vertex4dv(double[] v);
            public delegate void Vertex4f(float x, float y, float z, float w);
            public delegate void Vertex4fv(float[] v);
            public delegate void Vertex4i(int x, int y, int z, int w);
            public delegate void Vertex4iv(int[] v);
            public delegate void Vertex4s(short x, short y, short z, short w);
            public delegate void Vertex4sv(short[] v);
            public delegate void ClipPlane(Enums.ClipPlaneName plane, double[] equation);
            public delegate void ColorMaterial(Enums.MaterialFace face, Enums.ColorMaterialParameter mode);
            public delegate void CullFace(Enums.CullFaceMode mode);
            public delegate void Fogf(Enums.FogParameter pname, float param);
            public delegate void Fogfv(Enums.FogParameter pname, float[] parameters);
            public delegate void Fogi(Enums.FogParameter pname, int param);
            public delegate void Fogiv(Enums.FogParameter pname, int[] parameters);
            public delegate void FrontFace(Enums.FrontFaceDirection mode);
            public delegate void Hint(Enums.HintTarget target, Enums.HintMode mode);
            public delegate void Lightf(Enums.LightName light, Enums.LightParameter pname, float param);
            public delegate void Lightfv(Enums.LightName light, Enums.LightParameter pname, float[] parameters);
            public delegate void Lighti(Enums.LightName light, Enums.LightParameter pname, int param);
            public delegate void Lightiv(Enums.LightName light, Enums.LightParameter pname, int[] parameters);
            public delegate void LightModelf(Enums.LightModelParameter pname, float param);
            public delegate void LightModelfv(Enums.LightModelParameter pname, float[] parameters);
            public delegate void LightModeli(Enums.LightModelParameter pname, int param);
            public delegate void LightModeliv(Enums.LightModelParameter pname, int[] parameters);
            public delegate void LineStipple(int factor, ushort pattern);
            public delegate void LineWidth(float width);
            public delegate void Materialf(Enums.MaterialFace face, Enums.MaterialParameter pname, float param);
            public delegate void Materialfv(Enums.MaterialFace face, Enums.MaterialParameter pname, float[] parameters);
            public delegate void Materiali(Enums.MaterialFace face, Enums.MaterialParameter pname, int param);
            public delegate void Materialiv(Enums.MaterialFace face, Enums.MaterialParameter pname, int[] parameters);
            public delegate void PointSize(float size);
            public delegate void PolygonMode(Enums.MaterialFace face, Enums.PolygonMode mode);
            public delegate void PolygonStipple(byte[] mask);
            public delegate void Scissor(int x, int y, int width, int height);
            public delegate void ShadeModel(Enums.ShadingModel mode);
            public delegate void TexParameterf(Enums.TextureTarget target, Enums.TextureParameterName pname, float param);
            public delegate void TexParameterfv(Enums.TextureTarget target, Enums.TextureParameterName pname, float[] parameters);
            public delegate void TexParameteri(Enums.TextureTarget target, Enums.TextureParameterName pname, int param);
            public delegate void TexParameteriv(Enums.TextureTarget target, Enums.TextureParameterName pname, int[] parameters);
            public delegate void TexImage1D(Enums.TextureTarget target, int level, int internalformat, int width, int border, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void TexImage2D(Enums.TextureTarget target, int level, int internalformat, int width, int height, int border, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void TexEnvf(Enums.TextureEnvTarget target, Enums.TextureEnvParameter pname, float param);
            public delegate void TexEnvfv(Enums.TextureEnvTarget target, Enums.TextureEnvParameter pname, float[] parameters);
            public delegate void TexEnvi(Enums.TextureEnvTarget target, Enums.TextureEnvParameter pname, int param);
            public delegate void TexEnviv(Enums.TextureEnvTarget target, Enums.TextureEnvParameter pname, int[] parameters);
            public delegate void TexGend(Enums.TextureCoordName coord, Enums.TextureGenParameter pname, double param);
            public delegate void TexGendv(Enums.TextureCoordName coord, Enums.TextureGenParameter pname, double[] parameters);
            public delegate void TexGenf(Enums.TextureCoordName coord, Enums.TextureGenParameter pname, float param);
            public delegate void TexGenfv(Enums.TextureCoordName coord, Enums.TextureGenParameter pname, float[] parameters);
            public delegate void TexGeni(Enums.TextureCoordName coord, Enums.TextureGenParameter pname, int param);
            public delegate void TexGeniv(Enums.TextureCoordName coord, Enums.TextureGenParameter pname, int[] parameters);
            public delegate void FeedbackBuffer(int size, Enums.FeedbackType type, out float[] buffer);
            public delegate void SelectBuffer(int size, out uint[] buffer);
            public delegate int RenderMode(Enums.RenderingMode mode);
            public delegate void InitNames();
            public delegate void LoadName(uint name);
            public delegate void PassThrough(float token);
            public delegate void PopName();
            public delegate void PushName(uint name);
            public delegate void DrawBuffer(Enums.DrawBufferMode mode);
            public delegate void Clear(Enums.ClearBufferMask mask);
            public delegate void ClearAccum(float red, float green, float blue, float alpha);
            public delegate void ClearIndex(float c);
            public delegate void ClearColor(float red, float green, float blue, float alpha);
            public delegate void ClearStencil(int s);
            public delegate void ClearDepth(double depth);
            public delegate void StencilMask(uint mask);
            public delegate void ColorMask(bool red, bool green, bool blue, bool alpha);
            public delegate void DepthMask(bool flag);
            public delegate void IndexMask(uint mask);
            public delegate void Accum(Enums.AccumOp op, float value);
            public delegate void Disable(Enums.EnableCap cap);
            public delegate void Enable(Enums.EnableCap cap);
            public delegate void Finish();
            public delegate void Flush();
            public delegate void PopAttrib();
            public delegate void PushAttrib(Enums.AttribMask mask);
            public delegate void Map1d(Enums.MapTarget target, double u1, double u2, int stride, int order, double[] points);
            public delegate void Map1f(Enums.MapTarget target, float u1, float u2, int stride, int order, float[] points);
            public delegate void Map2d(Enums.MapTarget target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double[] points);
            public delegate void Map2f(Enums.MapTarget target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float[] points);
            public delegate void MapGrid1d(int un, double u1, double u2);
            public delegate void MapGrid1f(int un, float u1, float u2);
            public delegate void MapGrid2d(int un, double u1, double u2, int vn, double v1, double v2);
            public delegate void MapGrid2f(int un, float u1, float u2, int vn, float v1, float v2);
            public delegate void EvalCoord1d(double u);
            public delegate void EvalCoord1dv(double[] u);
            public delegate void EvalCoord1f(float u);
            public delegate void EvalCoord1fv(float[] u);
            public delegate void EvalCoord2d(double u, double v);
            public delegate void EvalCoord2dv(double[] u);
            public delegate void EvalCoord2f(float u, float v);
            public delegate void EvalCoord2fv(float[] u);
            public delegate void EvalMesh1(Enums.MeshMode1 mode, int i1, int i2);
            public delegate void EvalPoint1(int i);
            public delegate void EvalMesh2(Enums.MeshMode2 mode, int i1, int i2, int j1, int j2);
            public delegate void EvalPoint2(int i, int j);
            public delegate void AlphaFunc(Enums.AlphaFunction func, float reference);
            public delegate void BlendFunc(Enums.BlendingFactorSrc sfactor, Enums.BlendingFactorDest dfactor);
            public delegate void LogicOp(Enums.LogicOp opcode);
            public delegate void StencilFunc(Enums.StencilFunction func, int reference, uint mask);
            public delegate void StencilOp(Enums.StencilOp fail, Enums.StencilOp zfail, Enums.StencilOp zpass);
            public delegate void DepthFunc(Enums.DepthFunction func);
            public delegate void PixelZoom(float xfactor, float yfactor);
            public delegate void PixelTransferf(Enums.PixelTransferParameter pname, float param);
            public delegate void PixelTransferi(Enums.PixelTransferParameter pname, int param);
            public delegate void PixelStoref(Enums.PixelStoreParameter pname, float param);
            public delegate void PixelStorei(Enums.PixelStoreParameter pname, int param);
            public delegate void PixelMapfv(Enums.PixelMap map, int mapsize, float[] values);
            public delegate void PixelMapuiv(Enums.PixelMap map, int mapsize, uint[] values);
            public delegate void PixelMapusv(Enums.PixelMap map, int mapsize, ushort[] values);
            public delegate void ReadBuffer(Enums.ReadBufferMode mode);
            public delegate void CopyPixels(int x, int y, int width, int height, Enums.PixelCopyType type);
            public delegate void ReadPixels(int x, int y, int width, int height, Enums.PixelFormat format, Enums.PixelType type, out object pixels);
            public delegate void DrawPixels(int width, int height, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void GetBooleanv(Enums.GetPName pname, out bool[] parameters);
            public delegate void GetClipPlane(Enums.ClipPlaneName plane, out double[] equation);
            public delegate void GetDoublev(Enums.GetPName pname, out double[] parameters);
            public delegate Enums.ErrorCode GetError();
            public delegate void GetFloatv(Enums.GetPName pname, out float[] parameters);
            public delegate void GetIntegerv(Enums.GetPName pname, out int[] parameters);
            public delegate void GetLightfv(Enums.LightName light, Enums.LightParameter pname, out float[] parameters);
            public delegate void GetLightiv(Enums.LightName light, Enums.LightParameter pname, out int[] parameters);
            public delegate void GetMapdv(Enums.MapTarget target, Enums.GetMapQuery query, out double[] v);
            public delegate void GetMapfv(Enums.MapTarget target, Enums.GetMapQuery query, out float[] v);
            public delegate void GetMapiv(Enums.MapTarget target, Enums.GetMapQuery query, out int[] v);
            public delegate void GetMaterialfv(Enums.MaterialFace face, Enums.MaterialParameter pname, out float[] parameters);
            public delegate void GetMaterialiv(Enums.MaterialFace face, Enums.MaterialParameter pname, out int[] parameters);
            public delegate void GetPixelMapfv(Enums.PixelMap map, out float[] values);
            public delegate void GetPixelMapuiv(Enums.PixelMap map, out uint[] values);
            public delegate void GetPixelMapusv(Enums.PixelMap map, out ushort[] values);
            public delegate void GetPolygonStipple(out byte[] mask);
            public delegate string GetString(Enums.StringName name);
            public delegate void GetTexEnvfv(Enums.TextureEnvTarget target, Enums.TextureEnvParameter pname, out float[] parameters);
            public delegate void GetTexEnviv(Enums.TextureEnvTarget target, Enums.TextureEnvParameter pname, out int[] parameters);
            public delegate void GetTexGendv(Enums.TextureCoordName coord, Enums.TextureGenParameter pname, out double[] parameters);
            public delegate void GetTexGenfv(Enums.TextureCoordName coord, Enums.TextureGenParameter pname, out float[] parameters);
            public delegate void GetTexGeniv(Enums.TextureCoordName coord, Enums.TextureGenParameter pname, out int[] parameters);
            public delegate void GetTexImage(Enums.TextureTarget target, int level, Enums.PixelFormat format, Enums.PixelType type, out object pixels);
            public delegate void GetTexParameterfv(Enums.TextureTarget target, Enums.GetTextureParameter pname, out float[] parameters);
            public delegate void GetTexParameteriv(Enums.TextureTarget target, Enums.GetTextureParameter pname, out int[] parameters);
            public delegate void GetTexLevelParameterfv(Enums.TextureTarget target, int level, Enums.GetTextureParameter pname, out float[] parameters);
            public delegate void GetTexLevelParameteriv(Enums.TextureTarget target, int level, Enums.GetTextureParameter pname, out int[] parameters);
            public delegate bool IsEnabled(Enums.EnableCap cap);
            public delegate bool IsList(uint list);
            public delegate void DepthRange(double near, double far);
            public delegate void Frustum(double left, double right, double bottom, double top, double zNear, double zFar);
            public delegate void LoadIdentity();
            public delegate void LoadMatrixf(float[] m);
            public delegate void LoadMatrixd(double[] m);
            public delegate void MatrixMode(Enums.MatrixMode mode);
            public delegate void MultMatrixf(float[] m);
            public delegate void MultMatrixd(double[] m);
            public delegate void Ortho(double left, double right, double bottom, double top, double zNear, double zFar);
            public delegate void PopMatrix();
            public delegate void PushMatrix();
            public delegate void Rotated(double angle, double x, double y, double z);
            public delegate void Rotatef(float angle, float x, float y, float z);
            public delegate void Scaled(double x, double y, double z);
            public delegate void Scalef(float x, float y, float z);
            public delegate void Translated(double x, double y, double z);
            public delegate void Translatef(float x, float y, float z);
            public delegate void Viewport(int x, int y, int width, int height);
            public delegate void ArrayElement(int i);
            public delegate void ColorPointer(int size, Enums.ColorPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void DisableClientState(Enums.EnableCap array);
            public delegate void DrawArrays(Enums.BeginMode mode, int first, int count);
            public delegate void DrawElements(Enums.BeginMode mode, int count, uint type, [MarshalAs(UnmanagedType.AsAny)] object indices);
            public delegate void EdgeFlagPointer(int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void EnableClientState(Enums.EnableCap array);
            public delegate void GetPointerv(Enums.GetPointervPName pname, out object parameters);
            public delegate void IndexPointer(Enums.IndexPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void InterleavedArrays(Enums.InterleavedArrayFormat format, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void NormalPointer(Enums.NormalPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void TexCoordPointer(int size, Enums.TexCoordPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void VertexPointer(int size, Enums.VertexPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void PolygonOffset(float factor, float units);
            public delegate void CopyTexImage1D(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int x, int y, int width, int border);
            public delegate void CopyTexImage2D(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int x, int y, int width, int height, int border);
            public delegate void CopyTexSubImage1D(Enums.TextureTarget target, int level, int xoffset, int x, int y, int width);
            public delegate void CopyTexSubImage2D(Enums.TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
            public delegate void TexSubImage1D(Enums.TextureTarget target, int level, int xoffset, int width, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void TexSubImage2D(Enums.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate bool AreTexturesResident(int n, uint[] textures, out bool[] residences);
            public delegate void BindTexture(Enums.TextureTarget target, uint texture);
            public delegate void DeleteTextures(int n, uint[] textures);
            public delegate void GenTextures(int n, out uint[] textures);
            public delegate bool IsTexture(uint texture);
            public delegate void PrioritizeTextures(int n, uint[] textures, float[] priorities);
            public delegate void Indexub(byte c);
            public delegate void Indexubv(byte[] c);
            public delegate void PopClientAttrib();
            public delegate void PushClientAttrib(Enums.ClientAttribMask mask);
            public delegate void BlendColor(float red, float green, float blue, float alpha);
            public delegate void BlendEquation(Enums.BlendEquationModeEXT mode);
            public delegate void DrawRangeElements(Enums.BeginMode mode, uint start, uint end, int count, uint type, [MarshalAs(UnmanagedType.AsAny)] object indices);
            public delegate void ColorTable(Enums.ColorTableTargetSGI target, Enums.PixelInternalFormat internalformat, int width, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object table);
            public delegate void ColorTableParameterfv(Enums.ColorTableTargetSGI target, Enums.ColorTableParameterPNameSGI pname, float[] parameters);
            public delegate void ColorTableParameteriv(Enums.ColorTableTargetSGI target, Enums.ColorTableParameterPNameSGI pname, int[] parameters);
            public delegate void CopyColorTable(Enums.ColorTableTargetSGI target, Enums.PixelInternalFormat internalformat, int x, int y, int width);
            public delegate void GetColorTable(Enums.ColorTableTargetSGI target, Enums.PixelFormat format, Enums.PixelType type, out object table);
            public delegate void GetColorTableParameterfv(Enums.ColorTableTargetSGI target, Enums.GetColorTableParameterPNameSGI pname, out float[] parameters);
            public delegate void GetColorTableParameteriv(Enums.ColorTableTargetSGI target, Enums.GetColorTableParameterPNameSGI pname, out int[] parameters);
            public delegate void ColorSubTable(Enums.ColorTableTargetSGI target, int start, int count, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CopyColorSubTable(Enums.ColorTableTargetSGI target, int start, int x, int y, int width);
            public delegate void ConvolutionFilter1D(Enums.ConvolutionTargetEXT target, Enums.PixelInternalFormat internalformat, int width, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object image);
            public delegate void ConvolutionFilter2D(Enums.ConvolutionTargetEXT target, Enums.PixelInternalFormat internalformat, int width, int height, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object image);
            public delegate void ConvolutionParameterf(Enums.ConvolutionTargetEXT target, Enums.ConvolutionParameterEXT pname, float parameters);
            public delegate void ConvolutionParameterfv(Enums.ConvolutionTargetEXT target, Enums.ConvolutionParameterEXT pname, float[] parameters);
            public delegate void ConvolutionParameteri(Enums.ConvolutionTargetEXT target, Enums.ConvolutionParameterEXT pname, int parameters);
            public delegate void ConvolutionParameteriv(Enums.ConvolutionTargetEXT target, Enums.ConvolutionParameterEXT pname, int[] parameters);
            public delegate void CopyConvolutionFilter1D(Enums.ConvolutionTargetEXT target, Enums.PixelInternalFormat internalformat, int x, int y, int width);
            public delegate void CopyConvolutionFilter2D(Enums.ConvolutionTargetEXT target, Enums.PixelInternalFormat internalformat, int x, int y, int width, int height);
            public delegate void GetConvolutionFilter(Enums.ConvolutionTargetEXT target, Enums.PixelFormat format, Enums.PixelType type, out object image);
            public delegate void GetConvolutionParameterfv(Enums.ConvolutionTargetEXT target, Enums.GetConvolutionParameter pname, out float[] parameters);
            public delegate void GetConvolutionParameteriv(Enums.ConvolutionTargetEXT target, Enums.GetConvolutionParameter pname, out int[] parameters);
            public delegate void GetSeparableFilter(Enums.SeparableTargetEXT target, Enums.PixelFormat format, Enums.PixelType type, out object row, out object column, out object span);
            public delegate void SeparableFilter2D(Enums.SeparableTargetEXT target, Enums.PixelInternalFormat internalformat, int width, int height, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object row, [MarshalAs(UnmanagedType.AsAny)] object column);
            public delegate void GetHistogram(Enums.HistogramTargetEXT target, bool reset, Enums.PixelFormat format, Enums.PixelType type, out object values);
            public delegate void GetHistogramParameterfv(Enums.HistogramTargetEXT target, Enums.GetHistogramParameterPNameEXT pname, out float[] parameters);
            public delegate void GetHistogramParameteriv(Enums.HistogramTargetEXT target, Enums.GetHistogramParameterPNameEXT pname, out int[] parameters);
            public delegate void GetMinmax(Enums.MinmaxTargetEXT target, bool reset, Enums.PixelFormat format, Enums.PixelType type, out object values);
            public delegate void GetMinmaxParameterfv(Enums.MinmaxTargetEXT target, Enums.GetMinmaxParameterPNameEXT pname, out float[] parameters);
            public delegate void GetMinmaxParameteriv(Enums.MinmaxTargetEXT target, Enums.GetMinmaxParameterPNameEXT pname, out int[] parameters);
            public delegate void Histogram(Enums.HistogramTargetEXT target, int width, Enums.PixelInternalFormat internalformat, bool sink);
            public delegate void Minmax(Enums.MinmaxTargetEXT target, Enums.PixelInternalFormat internalformat, bool sink);
            public delegate void ResetHistogram(Enums.HistogramTargetEXT target);
            public delegate void ResetMinmax(Enums.MinmaxTargetEXT target);
            public delegate void TexImage3D(Enums.TextureTarget target, int level, int internalformat, int width, int height, int depth, int border, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void TexSubImage3D(Enums.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void CopyTexSubImage3D(Enums.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
            public delegate void ActiveTexture(uint texture);
            public delegate void ClientActiveTexture(uint texture);
            public delegate void MultiTexCoord1d(uint target, double s);
            public delegate void MultiTexCoord1dv(uint target, double[] v);
            public delegate void MultiTexCoord1f(uint target, float s);
            public delegate void MultiTexCoord1fv(uint target, float[] v);
            public delegate void MultiTexCoord1i(uint target, int s);
            public delegate void MultiTexCoord1iv(uint target, int[] v);
            public delegate void MultiTexCoord1s(uint target, short s);
            public delegate void MultiTexCoord1sv(uint target, short[] v);
            public delegate void MultiTexCoord2d(uint target, double s, double t);
            public delegate void MultiTexCoord2dv(uint target, double[] v);
            public delegate void MultiTexCoord2f(uint target, float s, float t);
            public delegate void MultiTexCoord2fv(uint target, float[] v);
            public delegate void MultiTexCoord2i(uint target, int s, int t);
            public delegate void MultiTexCoord2iv(uint target, int[] v);
            public delegate void MultiTexCoord2s(uint target, short s, short t);
            public delegate void MultiTexCoord2sv(uint target, short[] v);
            public delegate void MultiTexCoord3d(uint target, double s, double t, double r);
            public delegate void MultiTexCoord3dv(uint target, double[] v);
            public delegate void MultiTexCoord3f(uint target, float s, float t, float r);
            public delegate void MultiTexCoord3fv(uint target, float[] v);
            public delegate void MultiTexCoord3i(uint target, int s, int t, int r);
            public delegate void MultiTexCoord3iv(uint target, int[] v);
            public delegate void MultiTexCoord3s(uint target, short s, short t, short r);
            public delegate void MultiTexCoord3sv(uint target, short[] v);
            public delegate void MultiTexCoord4d(uint target, double s, double t, double r, double q);
            public delegate void MultiTexCoord4dv(uint target, double[] v);
            public delegate void MultiTexCoord4f(uint target, float s, float t, float r, float q);
            public delegate void MultiTexCoord4fv(uint target, float[] v);
            public delegate void MultiTexCoord4i(uint target, int s, int t, int r, int q);
            public delegate void MultiTexCoord4iv(uint target, int[] v);
            public delegate void MultiTexCoord4s(uint target, short s, short t, short r, short q);
            public delegate void MultiTexCoord4sv(uint target, short[] v);
            public delegate void LoadTransposeMatrixf(float[] m);
            public delegate void LoadTransposeMatrixd(double[] m);
            public delegate void MultTransposeMatrixf(float[] m);
            public delegate void MultTransposeMatrixd(double[] m);
            public delegate void SampleCoverage(float value, bool invert);
            public delegate void CompressedTexImage3D(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CompressedTexImage2D(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int width, int height, int border, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CompressedTexImage1D(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int width, int border, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CompressedTexSubImage3D(Enums.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, Enums.PixelFormat format, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CompressedTexSubImage2D(Enums.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, Enums.PixelFormat format, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CompressedTexSubImage1D(Enums.TextureTarget target, int level, int xoffset, int width, Enums.PixelFormat format, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void GetCompressedTexImage(Enums.TextureTarget target, int level, out object img);
            public delegate void BlendFuncSeparate(uint sfactorRGB, uint dfactorRGB, uint sfactorAlpha, uint dfactorAlpha);
            public delegate void FogCoordf(float coord);
            public delegate void FogCoordfv(float[] coord);
            public delegate void FogCoordd(double coord);
            public delegate void FogCoorddv(double[] coord);
            public delegate void FogCoordPointer(uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void MultiDrawArrays(Enums.BeginMode mode, out int[] first, out int[] count, int primcount);
            public delegate void MultiDrawElements(Enums.BeginMode mode, int[] count, uint type, [MarshalAs(UnmanagedType.AsAny)] object indices, int primcount);
            public delegate void PointParameterf(Enums.PointParameterNameSGIS pname, float param);
            public delegate void PointParameterfv(Enums.PointParameterNameSGIS pname, float[] parameters);
            public delegate void PointParameteri(Enums.PointParameterNameSGIS pname, int param);
            public delegate void PointParameteriv(Enums.PointParameterNameSGIS pname, int[] parameters);
            public delegate void SecondaryColor3b(byte red, byte green, byte blue);
            public delegate void SecondaryColor3bv(byte[] v);
            public delegate void SecondaryColor3d(double red, double green, double blue);
            public delegate void SecondaryColor3dv(double[] v);
            public delegate void SecondaryColor3f(float red, float green, float blue);
            public delegate void SecondaryColor3fv(float[] v);
            public delegate void SecondaryColor3i(int red, int green, int blue);
            public delegate void SecondaryColor3iv(int[] v);
            public delegate void SecondaryColor3s(short red, short green, short blue);
            public delegate void SecondaryColor3sv(short[] v);
            public delegate void SecondaryColor3ub(byte red, byte green, byte blue);
            public delegate void SecondaryColor3ubv(byte[] v);
            public delegate void SecondaryColor3ui(uint red, uint green, uint blue);
            public delegate void SecondaryColor3uiv(uint[] v);
            public delegate void SecondaryColor3us(ushort red, ushort green, ushort blue);
            public delegate void SecondaryColor3usv(ushort[] v);
            public delegate void SecondaryColorPointer(int size, Enums.ColorPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void WindowPos2d(double x, double y);
            public delegate void WindowPos2dv(double[] v);
            public delegate void WindowPos2f(float x, float y);
            public delegate void WindowPos2fv(float[] v);
            public delegate void WindowPos2i(int x, int y);
            public delegate void WindowPos2iv(int[] v);
            public delegate void WindowPos2s(short x, short y);
            public delegate void WindowPos2sv(short[] v);
            public delegate void WindowPos3d(double x, double y, double z);
            public delegate void WindowPos3dv(double[] v);
            public delegate void WindowPos3f(float x, float y, float z);
            public delegate void WindowPos3fv(float[] v);
            public delegate void WindowPos3i(int x, int y, int z);
            public delegate void WindowPos3iv(int[] v);
            public delegate void WindowPos3s(short x, short y, short z);
            public delegate void WindowPos3sv(short[] v);
            public delegate void GenQueries(int n, out uint[] ids);
            public delegate void DeleteQueries(int n, uint[] ids);
            public delegate bool IsQuery(uint id);
            public delegate void BeginQuery(uint target, uint id);
            public delegate void EndQuery(uint target);
            public delegate void GetQueryiv(uint target, uint pname, out int[] parameters);
            public delegate void GetQueryObjectiv(uint id, uint pname, out int[] parameters);
            public delegate void GetQueryObjectuiv(uint id, uint pname, out uint[] parameters);
            public delegate void BindBuffer(uint target, uint buffer);
            public delegate void DeleteBuffers(int n, uint[] buffers);
            public delegate void GenBuffers(int n, out uint[] buffers);
            public delegate bool IsBuffer(uint buffer);
            public delegate void BufferData(uint target, IntPtr size, [MarshalAs(UnmanagedType.AsAny)] object data, uint usage);
            public delegate void BufferSubData(uint target, IntPtr offset, IntPtr size, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void GetBufferSubData(uint target, IntPtr offset, IntPtr size, out object data);
            public delegate IntPtr MapBuffer_(uint target, uint access);
            public delegate bool UnmapBuffer(uint target);
            public delegate void GetBufferParameteriv(uint target, uint pname, out int[] parameters);
            public delegate void GetBufferPointerv(uint target, uint pname, out object parameters);
            public delegate void BlendEquationSeparate(Enums.BlendEquationModeEXT modeRGB, Enums.BlendEquationModeEXT modeAlpha);
            public delegate void DrawBuffers(int n, Enums.DrawBufferMode[] bufs);
            public delegate void StencilOpSeparate(uint face, Enums.StencilOp sfail, Enums.StencilOp dpfail, Enums.StencilOp dppass);
            public delegate void StencilFuncSeparate(Enums.StencilFunction frontfunc, Enums.StencilFunction backfunc, int reference, uint mask);
            public delegate void StencilMaskSeparate(uint face, uint mask);
            public delegate void AttachShader(uint program, uint shader);
            public delegate void BindAttribLocation(uint program, uint index, char[] name);
            public delegate void CompileShader(uint shader);
            public delegate uint CreateProgram();
            public delegate uint CreateShader(uint type);
            public delegate void DeleteProgram(uint program);
            public delegate void DeleteShader(uint shader);
            public delegate void DetachShader(uint program, uint shader);
            public delegate void DisableVertexAttribArray(uint index);
            public delegate void EnableVertexAttribArray(uint index);
            public delegate void GetActiveAttrib(uint program, uint index, int bufSize, out int[] length, out int[] size, out uint[] type, out char[] name);
            public delegate void GetActiveUniform(uint program, uint index, int bufSize, out int[] length, out int[] size, out uint[] type, out char[] name);
            public delegate void GetAttachedShaders(uint program, int maxCount, out int[] count, out uint[] obj);
            public delegate int GetAttribLocation(uint program, char[] name);
            public delegate void GetProgramiv(uint program, uint pname, out int[] parameters);
            public delegate void GetProgramInfoLog(uint program, int bufSize, out int[] length, out char[] infoLog);
            public delegate void GetShaderiv(uint shader, uint pname, out int[] parameters);
            public delegate void GetShaderInfoLog(uint shader, int bufSize, out int[] length, out char[] infoLog);
            public delegate void GetShaderSource(uint shader, int bufSize, out int[] length, out char[] source);
            public delegate int GetUniformLocation(uint program, char[] name);
            public delegate void GetUniformfv(uint program, int location, out float[] parameters);
            public delegate void GetUniformiv(uint program, int location, out int[] parameters);
            public delegate void GetVertexAttribdv(uint index, uint pname, out double[] parameters);
            public delegate void GetVertexAttribfv(uint index, uint pname, out float[] parameters);
            public delegate void GetVertexAttribiv(uint index, uint pname, out int[] parameters);
            public delegate void GetVertexAttribPointerv(uint index, uint pname, out object pointer);
            public delegate bool IsProgram(uint program);
            public delegate bool IsShader(uint shader);
            public delegate void LinkProgram(uint program);
            public delegate void ShaderSource(uint shader, int count, string[] @string, int[] length);
            public delegate void UseProgram(uint program);
            public delegate void Uniform1f(int location, float v0);
            public delegate void Uniform2f(int location, float v0, float v1);
            public delegate void Uniform3f(int location, float v0, float v1, float v2);
            public delegate void Uniform4f(int location, float v0, float v1, float v2, float v3);
            public delegate void Uniform1i(int location, int v0);
            public delegate void Uniform2i(int location, int v0, int v1);
            public delegate void Uniform3i(int location, int v0, int v1, int v2);
            public delegate void Uniform4i(int location, int v0, int v1, int v2, int v3);
            public delegate void Uniform1fv(int location, int count, float[] value);
            public delegate void Uniform2fv(int location, int count, float[] value);
            public delegate void Uniform3fv(int location, int count, float[] value);
            public delegate void Uniform4fv(int location, int count, float[] value);
            public delegate void Uniform1iv(int location, int count, int[] value);
            public delegate void Uniform2iv(int location, int count, int[] value);
            public delegate void Uniform3iv(int location, int count, int[] value);
            public delegate void Uniform4iv(int location, int count, int[] value);
            public delegate void UniformMatrix2fv(int location, int count, bool transpose, float[] value);
            public delegate void UniformMatrix3fv(int location, int count, bool transpose, float[] value);
            public delegate void UniformMatrix4fv(int location, int count, bool transpose, float[] value);
            public delegate void ValidateProgram(uint program);
            public delegate void VertexAttrib1d(uint index, double x);
            public delegate void VertexAttrib1dv(uint index, double[] v);
            public delegate void VertexAttrib1f(uint index, float x);
            public delegate void VertexAttrib1fv(uint index, float[] v);
            public delegate void VertexAttrib1s(uint index, short x);
            public delegate void VertexAttrib1sv(uint index, short[] v);
            public delegate void VertexAttrib2d(uint index, double x, double y);
            public delegate void VertexAttrib2dv(uint index, double[] v);
            public delegate void VertexAttrib2f(uint index, float x, float y);
            public delegate void VertexAttrib2fv(uint index, float[] v);
            public delegate void VertexAttrib2s(uint index, short x, short y);
            public delegate void VertexAttrib2sv(uint index, short[] v);
            public delegate void VertexAttrib3d(uint index, double x, double y, double z);
            public delegate void VertexAttrib3dv(uint index, double[] v);
            public delegate void VertexAttrib3f(uint index, float x, float y, float z);
            public delegate void VertexAttrib3fv(uint index, float[] v);
            public delegate void VertexAttrib3s(uint index, short x, short y, short z);
            public delegate void VertexAttrib3sv(uint index, short[] v);
            public delegate void VertexAttrib4Nbv(uint index, byte[] v);
            public delegate void VertexAttrib4Niv(uint index, int[] v);
            public delegate void VertexAttrib4Nsv(uint index, short[] v);
            public delegate void VertexAttrib4Nub(uint index, byte x, byte y, byte z, byte w);
            public delegate void VertexAttrib4Nubv(uint index, byte[] v);
            public delegate void VertexAttrib4Nuiv(uint index, uint[] v);
            public delegate void VertexAttrib4Nusv(uint index, ushort[] v);
            public delegate void VertexAttrib4bv(uint index, byte[] v);
            public delegate void VertexAttrib4d(uint index, double x, double y, double z, double w);
            public delegate void VertexAttrib4dv(uint index, double[] v);
            public delegate void VertexAttrib4f(uint index, float x, float y, float z, float w);
            public delegate void VertexAttrib4fv(uint index, float[] v);
            public delegate void VertexAttrib4iv(uint index, int[] v);
            public delegate void VertexAttrib4s(uint index, short x, short y, short z, short w);
            public delegate void VertexAttrib4sv(uint index, short[] v);
            public delegate void VertexAttrib4ubv(uint index, byte[] v);
            public delegate void VertexAttrib4uiv(uint index, uint[] v);
            public delegate void VertexAttrib4usv(uint index, ushort[] v);
            public delegate void VertexAttribPointer(uint index, int size, uint type, bool normalized, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void ActiveTextureARB(uint texture);
            public delegate void ClientActiveTextureARB(uint texture);
            public delegate void MultiTexCoord1dARB(uint target, double s);
            public delegate void MultiTexCoord1dvARB(uint target, double[] v);
            public delegate void MultiTexCoord1fARB(uint target, float s);
            public delegate void MultiTexCoord1fvARB(uint target, float[] v);
            public delegate void MultiTexCoord1iARB(uint target, int s);
            public delegate void MultiTexCoord1ivARB(uint target, int[] v);
            public delegate void MultiTexCoord1sARB(uint target, short s);
            public delegate void MultiTexCoord1svARB(uint target, short[] v);
            public delegate void MultiTexCoord2dARB(uint target, double s, double t);
            public delegate void MultiTexCoord2dvARB(uint target, double[] v);
            public delegate void MultiTexCoord2fARB(uint target, float s, float t);
            public delegate void MultiTexCoord2fvARB(uint target, float[] v);
            public delegate void MultiTexCoord2iARB(uint target, int s, int t);
            public delegate void MultiTexCoord2ivARB(uint target, int[] v);
            public delegate void MultiTexCoord2sARB(uint target, short s, short t);
            public delegate void MultiTexCoord2svARB(uint target, short[] v);
            public delegate void MultiTexCoord3dARB(uint target, double s, double t, double r);
            public delegate void MultiTexCoord3dvARB(uint target, double[] v);
            public delegate void MultiTexCoord3fARB(uint target, float s, float t, float r);
            public delegate void MultiTexCoord3fvARB(uint target, float[] v);
            public delegate void MultiTexCoord3iARB(uint target, int s, int t, int r);
            public delegate void MultiTexCoord3ivARB(uint target, int[] v);
            public delegate void MultiTexCoord3sARB(uint target, short s, short t, short r);
            public delegate void MultiTexCoord3svARB(uint target, short[] v);
            public delegate void MultiTexCoord4dARB(uint target, double s, double t, double r, double q);
            public delegate void MultiTexCoord4dvARB(uint target, double[] v);
            public delegate void MultiTexCoord4fARB(uint target, float s, float t, float r, float q);
            public delegate void MultiTexCoord4fvARB(uint target, float[] v);
            public delegate void MultiTexCoord4iARB(uint target, int s, int t, int r, int q);
            public delegate void MultiTexCoord4ivARB(uint target, int[] v);
            public delegate void MultiTexCoord4sARB(uint target, short s, short t, short r, short q);
            public delegate void MultiTexCoord4svARB(uint target, short[] v);
            public delegate void LoadTransposeMatrixfARB(float[] m);
            public delegate void LoadTransposeMatrixdARB(double[] m);
            public delegate void MultTransposeMatrixfARB(float[] m);
            public delegate void MultTransposeMatrixdARB(double[] m);
            public delegate void SampleCoverageARB(float value, bool invert);
            public delegate void CompressedTexImage3DARB(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CompressedTexImage2DARB(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int width, int height, int border, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CompressedTexImage1DARB(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int width, int border, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CompressedTexSubImage3DARB(Enums.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, Enums.PixelFormat format, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CompressedTexSubImage2DARB(Enums.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, Enums.PixelFormat format, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CompressedTexSubImage1DARB(Enums.TextureTarget target, int level, int xoffset, int width, Enums.PixelFormat format, int imageSize, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void GetCompressedTexImageARB(Enums.TextureTarget target, int level, out object img);
            public delegate void PointParameterfARB(Enums.PointParameterNameSGIS pname, float param);
            public delegate void PointParameterfvARB(Enums.PointParameterNameSGIS pname, float[] parameters);
            public delegate void WeightbvARB(int size, byte[] weights);
            public delegate void WeightsvARB(int size, short[] weights);
            public delegate void WeightivARB(int size, int[] weights);
            public delegate void WeightfvARB(int size, float[] weights);
            public delegate void WeightdvARB(int size, double[] weights);
            public delegate void WeightubvARB(int size, byte[] weights);
            public delegate void WeightusvARB(int size, ushort[] weights);
            public delegate void WeightuivARB(int size, uint[] weights);
            public delegate void WeightPointerARB(int size, uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void VertexBlendARB(int count);
            public delegate void CurrentPaletteMatrixARB(int index);
            public delegate void MatrixIndexubvARB(int size, byte[] indices);
            public delegate void MatrixIndexusvARB(int size, ushort[] indices);
            public delegate void MatrixIndexuivARB(int size, uint[] indices);
            public delegate void MatrixIndexPointerARB(int size, uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void WindowPos2dARB(double x, double y);
            public delegate void WindowPos2dvARB(double[] v);
            public delegate void WindowPos2fARB(float x, float y);
            public delegate void WindowPos2fvARB(float[] v);
            public delegate void WindowPos2iARB(int x, int y);
            public delegate void WindowPos2ivARB(int[] v);
            public delegate void WindowPos2sARB(short x, short y);
            public delegate void WindowPos2svARB(short[] v);
            public delegate void WindowPos3dARB(double x, double y, double z);
            public delegate void WindowPos3dvARB(double[] v);
            public delegate void WindowPos3fARB(float x, float y, float z);
            public delegate void WindowPos3fvARB(float[] v);
            public delegate void WindowPos3iARB(int x, int y, int z);
            public delegate void WindowPos3ivARB(int[] v);
            public delegate void WindowPos3sARB(short x, short y, short z);
            public delegate void WindowPos3svARB(short[] v);
            public delegate void VertexAttrib1dARB(uint index, double x);
            public delegate void VertexAttrib1dvARB(uint index, double[] v);
            public delegate void VertexAttrib1fARB(uint index, float x);
            public delegate void VertexAttrib1fvARB(uint index, float[] v);
            public delegate void VertexAttrib1sARB(uint index, short x);
            public delegate void VertexAttrib1svARB(uint index, short[] v);
            public delegate void VertexAttrib2dARB(uint index, double x, double y);
            public delegate void VertexAttrib2dvARB(uint index, double[] v);
            public delegate void VertexAttrib2fARB(uint index, float x, float y);
            public delegate void VertexAttrib2fvARB(uint index, float[] v);
            public delegate void VertexAttrib2sARB(uint index, short x, short y);
            public delegate void VertexAttrib2svARB(uint index, short[] v);
            public delegate void VertexAttrib3dARB(uint index, double x, double y, double z);
            public delegate void VertexAttrib3dvARB(uint index, double[] v);
            public delegate void VertexAttrib3fARB(uint index, float x, float y, float z);
            public delegate void VertexAttrib3fvARB(uint index, float[] v);
            public delegate void VertexAttrib3sARB(uint index, short x, short y, short z);
            public delegate void VertexAttrib3svARB(uint index, short[] v);
            public delegate void VertexAttrib4NbvARB(uint index, byte[] v);
            public delegate void VertexAttrib4NivARB(uint index, int[] v);
            public delegate void VertexAttrib4NsvARB(uint index, short[] v);
            public delegate void VertexAttrib4NubARB(uint index, byte x, byte y, byte z, byte w);
            public delegate void VertexAttrib4NubvARB(uint index, byte[] v);
            public delegate void VertexAttrib4NuivARB(uint index, uint[] v);
            public delegate void VertexAttrib4NusvARB(uint index, ushort[] v);
            public delegate void VertexAttrib4bvARB(uint index, byte[] v);
            public delegate void VertexAttrib4dARB(uint index, double x, double y, double z, double w);
            public delegate void VertexAttrib4dvARB(uint index, double[] v);
            public delegate void VertexAttrib4fARB(uint index, float x, float y, float z, float w);
            public delegate void VertexAttrib4fvARB(uint index, float[] v);
            public delegate void VertexAttrib4ivARB(uint index, int[] v);
            public delegate void VertexAttrib4sARB(uint index, short x, short y, short z, short w);
            public delegate void VertexAttrib4svARB(uint index, short[] v);
            public delegate void VertexAttrib4ubvARB(uint index, byte[] v);
            public delegate void VertexAttrib4uivARB(uint index, uint[] v);
            public delegate void VertexAttrib4usvARB(uint index, ushort[] v);
            public delegate void VertexAttribPointerARB(uint index, int size, uint type, bool normalized, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void EnableVertexAttribArrayARB(uint index);
            public delegate void DisableVertexAttribArrayARB(uint index);
            public delegate void ProgramStringARB(uint target, uint format, int len, [MarshalAs(UnmanagedType.AsAny)] object @string);
            public delegate void BindProgramARB(uint target, uint program);
            public delegate void DeleteProgramsARB(int n, uint[] programs);
            public delegate void GenProgramsARB(int n, out uint[] programs);
            public delegate void ProgramEnvParameter4dARB(uint target, uint index, double x, double y, double z, double w);
            public delegate void ProgramEnvParameter4dvARB(uint target, uint index, double[] parameters);
            public delegate void ProgramEnvParameter4fARB(uint target, uint index, float x, float y, float z, float w);
            public delegate void ProgramEnvParameter4fvARB(uint target, uint index, float[] parameters);
            public delegate void ProgramLocalParameter4dARB(uint target, uint index, double x, double y, double z, double w);
            public delegate void ProgramLocalParameter4dvARB(uint target, uint index, double[] parameters);
            public delegate void ProgramLocalParameter4fARB(uint target, uint index, float x, float y, float z, float w);
            public delegate void ProgramLocalParameter4fvARB(uint target, uint index, float[] parameters);
            public delegate void GetProgramEnvParameterdvARB(uint target, uint index, out double[] parameters);
            public delegate void GetProgramEnvParameterfvARB(uint target, uint index, out float[] parameters);
            public delegate void GetProgramLocalParameterdvARB(uint target, uint index, out double[] parameters);
            public delegate void GetProgramLocalParameterfvARB(uint target, uint index, out float[] parameters);
            public delegate void GetProgramivARB(uint target, uint pname, out int[] parameters);
            public delegate void GetProgramStringARB(uint target, uint pname, out object @string);
            public delegate void GetVertexAttribdvARB(uint index, uint pname, out double[] parameters);
            public delegate void GetVertexAttribfvARB(uint index, uint pname, out float[] parameters);
            public delegate void GetVertexAttribivARB(uint index, uint pname, out int[] parameters);
            public delegate void GetVertexAttribPointervARB(uint index, uint pname, out object pointer);
            public delegate bool IsProgramARB(uint program);
            public delegate void BindBufferARB(uint target, uint buffer);
            public delegate void DeleteBuffersARB(int n, uint[] buffers);
            public delegate void GenBuffersARB(int n, out uint[] buffers);
            public delegate bool IsBufferARB(uint buffer);
            public delegate void BufferDataARB(uint target, IntPtr size, [MarshalAs(UnmanagedType.AsAny)] object data, uint usage);
            public delegate void BufferSubDataARB(uint target, IntPtr offset, IntPtr size, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void GetBufferSubDataARB(uint target, IntPtr offset, IntPtr size, out object data);
            public delegate IntPtr MapBufferARB_(uint target, uint access);
            public delegate bool UnmapBufferARB(uint target);
            public delegate void GetBufferParameterivARB(uint target, uint pname, out int[] parameters);
            public delegate void GetBufferPointervARB(uint target, uint pname, out object parameters);
            public delegate void GenQueriesARB(int n, out uint[] ids);
            public delegate void DeleteQueriesARB(int n, uint[] ids);
            public delegate bool IsQueryARB(uint id);
            public delegate void BeginQueryARB(uint target, uint id);
            public delegate void EndQueryARB(uint target);
            public delegate void GetQueryivARB(uint target, uint pname, out int[] parameters);
            public delegate void GetQueryObjectivARB(uint id, uint pname, out int[] parameters);
            public delegate void GetQueryObjectuivARB(uint id, uint pname, out uint[] parameters);
            public delegate void DeleteObjectARB(uint obj);
            public delegate uint GetHandleARB(uint pname);
            public delegate void DetachObjectARB(uint containerObj, uint attachedObj);
            public delegate uint CreateShaderObjectARB(uint shaderType);
            public delegate void ShaderSourceARB(uint shaderObj, int count, string[] @string, int[] length);
            public delegate void CompileShaderARB(uint shaderObj);
            public delegate uint CreateProgramObjectARB();
            public delegate void AttachObjectARB(uint containerObj, uint obj);
            public delegate void LinkProgramARB(uint programObj);
            public delegate void UseProgramObjectARB(uint programObj);
            public delegate void ValidateProgramARB(uint programObj);
            public delegate void Uniform1fARB(int location, float v0);
            public delegate void Uniform2fARB(int location, float v0, float v1);
            public delegate void Uniform3fARB(int location, float v0, float v1, float v2);
            public delegate void Uniform4fARB(int location, float v0, float v1, float v2, float v3);
            public delegate void Uniform1iARB(int location, int v0);
            public delegate void Uniform2iARB(int location, int v0, int v1);
            public delegate void Uniform3iARB(int location, int v0, int v1, int v2);
            public delegate void Uniform4iARB(int location, int v0, int v1, int v2, int v3);
            public delegate void Uniform1fvARB(int location, int count, float[] value);
            public delegate void Uniform2fvARB(int location, int count, float[] value);
            public delegate void Uniform3fvARB(int location, int count, float[] value);
            public delegate void Uniform4fvARB(int location, int count, float[] value);
            public delegate void Uniform1ivARB(int location, int count, int[] value);
            public delegate void Uniform2ivARB(int location, int count, int[] value);
            public delegate void Uniform3ivARB(int location, int count, int[] value);
            public delegate void Uniform4ivARB(int location, int count, int[] value);
            public delegate void UniformMatrix2fvARB(int location, int count, bool transpose, float[] value);
            public delegate void UniformMatrix3fvARB(int location, int count, bool transpose, float[] value);
            public delegate void UniformMatrix4fvARB(int location, int count, bool transpose, float[] value);
            public delegate void GetObjectParameterfvARB(uint obj, uint pname, out float[] parameters);
            public delegate void GetObjectParameterivARB(uint obj, uint pname, out int[] parameters);
            public delegate void GetInfoLogARB(uint obj, int maxLength, out int[] length, out char[] infoLog);
            public delegate void GetAttachedObjectsARB(uint containerObj, int maxCount, out int[] count, out uint[] obj);
            public delegate int GetUniformLocationARB(uint programObj, char[] name);
            public delegate void GetActiveUniformARB(uint programObj, uint index, int maxLength, out int[] length, out int[] size, out uint[] type, out char[] name);
            public delegate void GetUniformfvARB(uint programObj, int location, out float[] parameters);
            public delegate void GetUniformivARB(uint programObj, int location, out int[] parameters);
            public delegate void GetShaderSourceARB(uint obj, int maxLength, out int[] length, out char[] source);
            public delegate void BindAttribLocationARB(uint programObj, uint index, char[] name);
            public delegate void GetActiveAttribARB(uint programObj, uint index, int maxLength, out int[] length, out int[] size, out uint[] type, out char[] name);
            public delegate int GetAttribLocationARB(uint programObj, char[] name);
            public delegate void DrawBuffersARB(int n, Enums.DrawBufferMode[] bufs);
            public delegate void ClampColorARB(uint target, uint clamp);
            public delegate void BlendColorEXT(float red, float green, float blue, float alpha);
            public delegate void PolygonOffsetEXT(float factor, float bias);
            public delegate void TexImage3DEXT(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int width, int height, int depth, int border, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void TexSubImage3DEXT(Enums.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void GetTexFilterFuncSGIS(Enums.TextureTarget target, uint filter, out float[] weights);
            public delegate void TexFilterFuncSGIS(Enums.TextureTarget target, uint filter, int n, float[] weights);
            public delegate void TexSubImage1DEXT(Enums.TextureTarget target, int level, int xoffset, int width, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void TexSubImage2DEXT(Enums.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void CopyTexImage1DEXT(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int x, int y, int width, int border);
            public delegate void CopyTexImage2DEXT(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int x, int y, int width, int height, int border);
            public delegate void CopyTexSubImage1DEXT(Enums.TextureTarget target, int level, int xoffset, int x, int y, int width);
            public delegate void CopyTexSubImage2DEXT(Enums.TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
            public delegate void CopyTexSubImage3DEXT(Enums.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
            public delegate void GetHistogramEXT(Enums.HistogramTargetEXT target, bool reset, Enums.PixelFormat format, Enums.PixelType type, out object values);
            public delegate void GetHistogramParameterfvEXT(Enums.HistogramTargetEXT target, Enums.GetHistogramParameterPNameEXT pname, out float[] parameters);
            public delegate void GetHistogramParameterivEXT(Enums.HistogramTargetEXT target, Enums.GetHistogramParameterPNameEXT pname, out int[] parameters);
            public delegate void GetMinmaxEXT(Enums.MinmaxTargetEXT target, bool reset, Enums.PixelFormat format, Enums.PixelType type, out object values);
            public delegate void GetMinmaxParameterfvEXT(Enums.MinmaxTargetEXT target, Enums.GetMinmaxParameterPNameEXT pname, out float[] parameters);
            public delegate void GetMinmaxParameterivEXT(Enums.MinmaxTargetEXT target, Enums.GetMinmaxParameterPNameEXT pname, out int[] parameters);
            public delegate void HistogramEXT(Enums.HistogramTargetEXT target, int width, Enums.PixelInternalFormat internalformat, bool sink);
            public delegate void MinmaxEXT(Enums.MinmaxTargetEXT target, Enums.PixelInternalFormat internalformat, bool sink);
            public delegate void ResetHistogramEXT(Enums.HistogramTargetEXT target);
            public delegate void ResetMinmaxEXT(Enums.MinmaxTargetEXT target);
            public delegate void ConvolutionFilter1DEXT(Enums.ConvolutionTargetEXT target, Enums.PixelInternalFormat internalformat, int width, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object image);
            public delegate void ConvolutionFilter2DEXT(Enums.ConvolutionTargetEXT target, Enums.PixelInternalFormat internalformat, int width, int height, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object image);
            public delegate void ConvolutionParameterfEXT(Enums.ConvolutionTargetEXT target, Enums.ConvolutionParameterEXT pname, float parameters);
            public delegate void ConvolutionParameterfvEXT(Enums.ConvolutionTargetEXT target, Enums.ConvolutionParameterEXT pname, float[] parameters);
            public delegate void ConvolutionParameteriEXT(Enums.ConvolutionTargetEXT target, Enums.ConvolutionParameterEXT pname, int parameters);
            public delegate void ConvolutionParameterivEXT(Enums.ConvolutionTargetEXT target, Enums.ConvolutionParameterEXT pname, int[] parameters);
            public delegate void CopyConvolutionFilter1DEXT(Enums.ConvolutionTargetEXT target, Enums.PixelInternalFormat internalformat, int x, int y, int width);
            public delegate void CopyConvolutionFilter2DEXT(Enums.ConvolutionTargetEXT target, Enums.PixelInternalFormat internalformat, int x, int y, int width, int height);
            public delegate void GetConvolutionFilterEXT(Enums.ConvolutionTargetEXT target, Enums.PixelFormat format, Enums.PixelType type, out object image);
            public delegate void GetConvolutionParameterfvEXT(Enums.ConvolutionTargetEXT target, Enums.ConvolutionParameterEXT pname, out float[] parameters);
            public delegate void GetConvolutionParameterivEXT(Enums.ConvolutionTargetEXT target, Enums.ConvolutionParameterEXT pname, out int[] parameters);
            public delegate void GetSeparableFilterEXT(Enums.SeparableTargetEXT target, Enums.PixelFormat format, Enums.PixelType type, out object row, out object column, out object span);
            public delegate void SeparableFilter2DEXT(Enums.SeparableTargetEXT target, Enums.PixelInternalFormat internalformat, int width, int height, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object row, [MarshalAs(UnmanagedType.AsAny)] object column);
            public delegate void ColorTableSGI(Enums.ColorTableTargetSGI target, Enums.PixelInternalFormat internalformat, int width, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object table);
            public delegate void ColorTableParameterfvSGI(Enums.ColorTableTargetSGI target, Enums.ColorTableParameterPNameSGI pname, float[] parameters);
            public delegate void ColorTableParameterivSGI(Enums.ColorTableTargetSGI target, Enums.ColorTableParameterPNameSGI pname, int[] parameters);
            public delegate void CopyColorTableSGI(Enums.ColorTableTargetSGI target, Enums.PixelInternalFormat internalformat, int x, int y, int width);
            public delegate void GetColorTableSGI(Enums.ColorTableTargetSGI target, Enums.PixelFormat format, Enums.PixelType type, out object table);
            public delegate void GetColorTableParameterfvSGI(Enums.ColorTableTargetSGI target, Enums.GetColorTableParameterPNameSGI pname, out float[] parameters);
            public delegate void GetColorTableParameterivSGI(Enums.ColorTableTargetSGI target, Enums.GetColorTableParameterPNameSGI pname, out int[] parameters);
            public delegate void PixelTexGenSGIX(uint mode);
            public delegate void PixelTexGenParameteriSGIS(Enums.PixelTexGenParameterNameSGIS pname, int param);
            public delegate void PixelTexGenParameterivSGIS(Enums.PixelTexGenParameterNameSGIS pname, int[] parameters);
            public delegate void PixelTexGenParameterfSGIS(Enums.PixelTexGenParameterNameSGIS pname, float param);
            public delegate void PixelTexGenParameterfvSGIS(Enums.PixelTexGenParameterNameSGIS pname, float[] parameters);
            public delegate void GetPixelTexGenParameterivSGIS(Enums.PixelTexGenParameterNameSGIS pname, out int[] parameters);
            public delegate void GetPixelTexGenParameterfvSGIS(Enums.PixelTexGenParameterNameSGIS pname, out float[] parameters);
            public delegate void TexImage4DSGIS(Enums.TextureTarget target, int level, Enums.PixelInternalFormat internalformat, int width, int height, int depth, int size4d, int border, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate void TexSubImage4DSGIS(Enums.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int woffset, int width, int height, int depth, int size4d, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object pixels);
            public delegate bool AreTexturesResidentEXT(int n, uint[] textures, out bool[] residences);
            public delegate void BindTextureEXT(Enums.TextureTarget target, uint texture);
            public delegate void DeleteTexturesEXT(int n, uint[] textures);
            public delegate void GenTexturesEXT(int n, out uint[] textures);
            public delegate bool IsTextureEXT(uint texture);
            public delegate void PrioritizeTexturesEXT(int n, uint[] textures, float[] priorities);
            public delegate void DetailTexFuncSGIS(Enums.TextureTarget target, int n, float[] points);
            public delegate void GetDetailTexFuncSGIS(Enums.TextureTarget target, out float[] points);
            public delegate void SharpenTexFuncSGIS(Enums.TextureTarget target, int n, float[] points);
            public delegate void GetSharpenTexFuncSGIS(Enums.TextureTarget target, out float[] points);
            public delegate void SampleMaskSGIS(float value, bool invert);
            public delegate void SamplePatternSGIS(Enums.SamplePatternSGIS pattern);
            public delegate void ArrayElementEXT(int i);
            public delegate void ColorPointerEXT(int size, Enums.ColorPointerType type, int stride, int count, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void DrawArraysEXT(Enums.BeginMode mode, int first, int count);
            public delegate void EdgeFlagPointerEXT(int stride, int count, bool[] pointer);
            public delegate void GetPointervEXT(Enums.GetPointervPName pname, out object parameters);
            public delegate void IndexPointerEXT(Enums.IndexPointerType type, int stride, int count, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void NormalPointerEXT(Enums.NormalPointerType type, int stride, int count, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void TexCoordPointerEXT(int size, Enums.TexCoordPointerType type, int stride, int count, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void VertexPointerEXT(int size, Enums.VertexPointerType type, int stride, int count, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void BlendEquationEXT(Enums.BlendEquationModeEXT mode);
            public delegate void SpriteParameterfSGIX(uint pname, float param);
            public delegate void SpriteParameterfvSGIX(uint pname, float[] parameters);
            public delegate void SpriteParameteriSGIX(uint pname, int param);
            public delegate void SpriteParameterivSGIX(uint pname, int[] parameters);
            public delegate void PointParameterfEXT(Enums.PointParameterNameSGIS pname, float param);
            public delegate void PointParameterfvEXT(Enums.PointParameterNameSGIS pname, float[] parameters);
            public delegate void PointParameterfSGIS(Enums.PointParameterNameSGIS pname, float param);
            public delegate void PointParameterfvSGIS(Enums.PointParameterNameSGIS pname, float[] parameters);
            public delegate int GetInstrumentsSGIX();
            public delegate void InstrumentsBufferSGIX(int size, out int[] buffer);
            public delegate int PollInstrumentsSGIX(out int[] marker_p);
            public delegate void ReadInstrumentsSGIX(int marker);
            public delegate void StartInstrumentsSGIX();
            public delegate void StopInstrumentsSGIX(int marker);
            public delegate void FrameZoomSGIX(int factor);
            public delegate void TagSampleBufferSGIX();
            public delegate void DeformationMap3dSGIX(Enums.FfdTargetSGIX target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double w1, double w2, int wstride, int worder, double[] points);
            public delegate void DeformationMap3fSGIX(Enums.FfdTargetSGIX target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float w1, float w2, int wstride, int worder, float[] points);
            public delegate void DeformSGIX(Enums.FfdMaskSGIX mask);
            public delegate void LoadIdentityDeformationMapSGIX(Enums.FfdMaskSGIX mask);
            public delegate void ReferencePlaneSGIX(double[] equation);
            public delegate void FlushRasterSGIX();
            public delegate void FogFuncSGIS(int n, float[] points);
            public delegate void GetFogFuncSGIS(out float[] points);
            public delegate void ImageTransformParameteriHP(uint target, uint pname, int param);
            public delegate void ImageTransformParameterfHP(uint target, uint pname, float param);
            public delegate void ImageTransformParameterivHP(uint target, uint pname, int[] parameters);
            public delegate void ImageTransformParameterfvHP(uint target, uint pname, float[] parameters);
            public delegate void GetImageTransformParameterivHP(uint target, uint pname, out int[] parameters);
            public delegate void GetImageTransformParameterfvHP(uint target, uint pname, out float[] parameters);
            public delegate void ColorSubTableEXT(Enums.ColorTableTargetSGI target, int start, int count, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object data);
            public delegate void CopyColorSubTableEXT(Enums.ColorTableTargetSGI target, int start, int x, int y, int width);
            public delegate void HintPGI(uint target, int mode);
            public delegate void ColorTableEXT(Enums.ColorTableTargetSGI target, Enums.PixelInternalFormat internalFormat, int width, Enums.PixelFormat format, Enums.PixelType type, [MarshalAs(UnmanagedType.AsAny)] object table);
            public delegate void GetColorTableEXT(Enums.ColorTableTargetSGI target, Enums.PixelFormat format, Enums.PixelType type, out object data);
            public delegate void GetColorTableParameterivEXT(Enums.ColorTableTargetSGI target, Enums.GetColorTableParameterPNameSGI pname, out int[] parameters);
            public delegate void GetColorTableParameterfvEXT(Enums.ColorTableTargetSGI target, Enums.GetColorTableParameterPNameSGI pname, out float[] parameters);
            public delegate void GetListParameterfvSGIX(uint list, Enums.ListParameterName pname, out float[] parameters);
            public delegate void GetListParameterivSGIX(uint list, Enums.ListParameterName pname, out int[] parameters);
            public delegate void ListParameterfSGIX(uint list, Enums.ListParameterName pname, float param);
            public delegate void ListParameterfvSGIX(uint list, Enums.ListParameterName pname, float[] parameters);
            public delegate void ListParameteriSGIX(uint list, Enums.ListParameterName pname, int param);
            public delegate void ListParameterivSGIX(uint list, Enums.ListParameterName pname, int[] parameters);
            public delegate void IndexMaterialEXT(Enums.MaterialFace face, uint mode);
            public delegate void IndexFuncEXT(uint func, float reference);
            public delegate void LockArraysEXT(int first, int count);
            public delegate void UnlockArraysEXT();
            public delegate void CullParameterdvEXT(uint pname, out double[] parameters);
            public delegate void CullParameterfvEXT(uint pname, out float[] parameters);
            public delegate void FragmentColorMaterialSGIX(Enums.MaterialFace face, Enums.MaterialParameter mode);
            public delegate void FragmentLightfSGIX(uint light, uint pname, float param);
            public delegate void FragmentLightfvSGIX(uint light, uint pname, float[] parameters);
            public delegate void FragmentLightiSGIX(uint light, uint pname, int param);
            public delegate void FragmentLightivSGIX(uint light, uint pname, int[] parameters);
            public delegate void FragmentLightModelfSGIX(Enums.FragmentLightModelParameterSGIX pname, float param);
            public delegate void FragmentLightModelfvSGIX(Enums.FragmentLightModelParameterSGIX pname, float[] parameters);
            public delegate void FragmentLightModeliSGIX(Enums.FragmentLightModelParameterSGIX pname, int param);
            public delegate void FragmentLightModelivSGIX(Enums.FragmentLightModelParameterSGIX pname, int[] parameters);
            public delegate void FragmentMaterialfSGIX(Enums.MaterialFace face, Enums.MaterialParameter pname, float param);
            public delegate void FragmentMaterialfvSGIX(Enums.MaterialFace face, Enums.MaterialParameter pname, float[] parameters);
            public delegate void FragmentMaterialiSGIX(Enums.MaterialFace face, Enums.MaterialParameter pname, int param);
            public delegate void FragmentMaterialivSGIX(Enums.MaterialFace face, Enums.MaterialParameter pname, int[] parameters);
            public delegate void GetFragmentLightfvSGIX(uint light, uint pname, out float[] parameters);
            public delegate void GetFragmentLightivSGIX(uint light, uint pname, out int[] parameters);
            public delegate void GetFragmentMaterialfvSGIX(Enums.MaterialFace face, Enums.MaterialParameter pname, out float[] parameters);
            public delegate void GetFragmentMaterialivSGIX(Enums.MaterialFace face, Enums.MaterialParameter pname, out int[] parameters);
            public delegate void LightEnviSGIX(Enums.LightEnvParameterSGIX pname, int param);
            public delegate void DrawRangeElementsEXT(Enums.BeginMode mode, uint start, uint end, int count, uint type, [MarshalAs(UnmanagedType.AsAny)] object indices);
            public delegate void ApplyTextureEXT(uint mode);
            public delegate void TextureLightEXT(uint pname);
            public delegate void TextureMaterialEXT(Enums.MaterialFace face, Enums.MaterialParameter mode);
            public delegate void AsyncMarkerSGIX(uint marker);
            public delegate int FinishAsyncSGIX(out uint[] markerp);
            public delegate int PollAsyncSGIX(out uint[] markerp);
            public delegate uint GenAsyncMarkersSGIX(int range);
            public delegate void DeleteAsyncMarkersSGIX(uint marker, int range);
            public delegate bool IsAsyncMarkerSGIX(uint marker);
            public delegate void VertexPointervINTEL(int size, Enums.VertexPointerType type, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void NormalPointervINTEL(Enums.NormalPointerType type, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void ColorPointervINTEL(int size, Enums.VertexPointerType type, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void TexCoordPointervINTEL(int size, Enums.VertexPointerType type, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void PixelTransformParameteriEXT(uint target, uint pname, int param);
            public delegate void PixelTransformParameterfEXT(uint target, uint pname, float param);
            public delegate void PixelTransformParameterivEXT(uint target, uint pname, int[] parameters);
            public delegate void PixelTransformParameterfvEXT(uint target, uint pname, float[] parameters);
            public delegate void SecondaryColor3bEXT(byte red, byte green, byte blue);
            public delegate void SecondaryColor3bvEXT(byte[] v);
            public delegate void SecondaryColor3dEXT(double red, double green, double blue);
            public delegate void SecondaryColor3dvEXT(double[] v);
            public delegate void SecondaryColor3fEXT(float red, float green, float blue);
            public delegate void SecondaryColor3fvEXT(float[] v);
            public delegate void SecondaryColor3iEXT(int red, int green, int blue);
            public delegate void SecondaryColor3ivEXT(int[] v);
            public delegate void SecondaryColor3sEXT(short red, short green, short blue);
            public delegate void SecondaryColor3svEXT(short[] v);
            public delegate void SecondaryColor3ubEXT(byte red, byte green, byte blue);
            public delegate void SecondaryColor3ubvEXT(byte[] v);
            public delegate void SecondaryColor3uiEXT(uint red, uint green, uint blue);
            public delegate void SecondaryColor3uivEXT(uint[] v);
            public delegate void SecondaryColor3usEXT(ushort red, ushort green, ushort blue);
            public delegate void SecondaryColor3usvEXT(ushort[] v);
            public delegate void SecondaryColorPointerEXT(int size, Enums.ColorPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void TextureNormalEXT(uint mode);
            public delegate void MultiDrawArraysEXT(Enums.BeginMode mode, out int[] first, out int[] count, int primcount);
            public delegate void MultiDrawElementsEXT(Enums.BeginMode mode, int[] count, uint type, [MarshalAs(UnmanagedType.AsAny)] object indices, int primcount);
            public delegate void FogCoordfEXT(float coord);
            public delegate void FogCoordfvEXT(float[] coord);
            public delegate void FogCoorddEXT(double coord);
            public delegate void FogCoorddvEXT(double[] coord);
            public delegate void FogCoordPointerEXT(uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void Tangent3bEXT(byte tx, byte ty, byte tz);
            public delegate void Tangent3bvEXT(byte[] v);
            public delegate void Tangent3dEXT(double tx, double ty, double tz);
            public delegate void Tangent3dvEXT(double[] v);
            public delegate void Tangent3fEXT(float tx, float ty, float tz);
            public delegate void Tangent3fvEXT(float[] v);
            public delegate void Tangent3iEXT(int tx, int ty, int tz);
            public delegate void Tangent3ivEXT(int[] v);
            public delegate void Tangent3sEXT(short tx, short ty, short tz);
            public delegate void Tangent3svEXT(short[] v);
            public delegate void Binormal3bEXT(byte bx, byte by, byte bz);
            public delegate void Binormal3bvEXT(byte[] v);
            public delegate void Binormal3dEXT(double bx, double by, double bz);
            public delegate void Binormal3dvEXT(double[] v);
            public delegate void Binormal3fEXT(float bx, float by, float bz);
            public delegate void Binormal3fvEXT(float[] v);
            public delegate void Binormal3iEXT(int bx, int by, int bz);
            public delegate void Binormal3ivEXT(int[] v);
            public delegate void Binormal3sEXT(short bx, short by, short bz);
            public delegate void Binormal3svEXT(short[] v);
            public delegate void TangentPointerEXT(uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void BinormalPointerEXT(uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void FinishTextureSUNX();
            public delegate void GlobalAlphaFactorbSUN(byte factor);
            public delegate void GlobalAlphaFactorsSUN(short factor);
            public delegate void GlobalAlphaFactoriSUN(int factor);
            public delegate void GlobalAlphaFactorfSUN(float factor);
            public delegate void GlobalAlphaFactordSUN(double factor);
            public delegate void GlobalAlphaFactorubSUN(byte factor);
            public delegate void GlobalAlphaFactorusSUN(ushort factor);
            public delegate void GlobalAlphaFactoruiSUN(uint factor);
            public delegate void ReplacementCodeuiSUN(uint code);
            public delegate void ReplacementCodeusSUN(ushort code);
            public delegate void ReplacementCodeubSUN(byte code);
            public delegate void ReplacementCodeuivSUN(uint[] code);
            public delegate void ReplacementCodeusvSUN(ushort[] code);
            public delegate void ReplacementCodeubvSUN(byte[] code);
            public delegate void ReplacementCodePointerSUN(uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void Color4ubVertex2fSUN(byte r, byte g, byte b, byte a, float x, float y);
            public delegate void Color4ubVertex2fvSUN(byte[] c, float[] v);
            public delegate void Color4ubVertex3fSUN(byte r, byte g, byte b, byte a, float x, float y, float z);
            public delegate void Color4ubVertex3fvSUN(byte[] c, float[] v);
            public delegate void Color3fVertex3fSUN(float r, float g, float b, float x, float y, float z);
            public delegate void Color3fVertex3fvSUN(float[] c, float[] v);
            public delegate void Normal3fVertex3fSUN(float nx, float ny, float nz, float x, float y, float z);
            public delegate void Normal3fVertex3fvSUN(float[] n, float[] v);
            public delegate void Color4fNormal3fVertex3fSUN(float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
            public delegate void Color4fNormal3fVertex3fvSUN(float[] c, float[] n, float[] v);
            public delegate void TexCoord2fVertex3fSUN(float s, float t, float x, float y, float z);
            public delegate void TexCoord2fVertex3fvSUN(float[] tc, float[] v);
            public delegate void TexCoord4fVertex4fSUN(float s, float t, float p, float q, float x, float y, float z, float w);
            public delegate void TexCoord4fVertex4fvSUN(float[] tc, float[] v);
            public delegate void TexCoord2fColor4ubVertex3fSUN(float s, float t, byte r, byte g, byte b, byte a, float x, float y, float z);
            public delegate void TexCoord2fColor4ubVertex3fvSUN(float[] tc, byte[] c, float[] v);
            public delegate void TexCoord2fColor3fVertex3fSUN(float s, float t, float r, float g, float b, float x, float y, float z);
            public delegate void TexCoord2fColor3fVertex3fvSUN(float[] tc, float[] c, float[] v);
            public delegate void TexCoord2fNormal3fVertex3fSUN(float s, float t, float nx, float ny, float nz, float x, float y, float z);
            public delegate void TexCoord2fNormal3fVertex3fvSUN(float[] tc, float[] n, float[] v);
            public delegate void TexCoord2fColor4fNormal3fVertex3fSUN(float s, float t, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
            public delegate void TexCoord2fColor4fNormal3fVertex3fvSUN(float[] tc, float[] c, float[] n, float[] v);
            public delegate void TexCoord4fColor4fNormal3fVertex4fSUN(float s, float t, float p, float q, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z, float w);
            public delegate void TexCoord4fColor4fNormal3fVertex4fvSUN(float[] tc, float[] c, float[] n, float[] v);
            public delegate void ReplacementCodeuiVertex3fSUN(uint rc, float x, float y, float z);
            public delegate void ReplacementCodeuiVertex3fvSUN(uint[] rc, float[] v);
            public delegate void ReplacementCodeuiColor4ubVertex3fSUN(uint rc, byte r, byte g, byte b, byte a, float x, float y, float z);
            public delegate void ReplacementCodeuiColor4ubVertex3fvSUN(uint[] rc, byte[] c, float[] v);
            public delegate void ReplacementCodeuiColor3fVertex3fSUN(uint rc, float r, float g, float b, float x, float y, float z);
            public delegate void ReplacementCodeuiColor3fVertex3fvSUN(uint[] rc, float[] c, float[] v);
            public delegate void ReplacementCodeuiNormal3fVertex3fSUN(uint rc, float nx, float ny, float nz, float x, float y, float z);
            public delegate void ReplacementCodeuiNormal3fVertex3fvSUN(uint[] rc, float[] n, float[] v);
            public delegate void ReplacementCodeuiColor4fNormal3fVertex3fSUN(uint rc, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
            public delegate void ReplacementCodeuiColor4fNormal3fVertex3fvSUN(uint[] rc, float[] c, float[] n, float[] v);
            public delegate void ReplacementCodeuiTexCoord2fVertex3fSUN(uint rc, float s, float t, float x, float y, float z);
            public delegate void ReplacementCodeuiTexCoord2fVertex3fvSUN(uint[] rc, float[] tc, float[] v);
            public delegate void ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(uint rc, float s, float t, float nx, float ny, float nz, float x, float y, float z);
            public delegate void ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(uint[] rc, float[] tc, float[] n, float[] v);
            public delegate void ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(uint rc, float s, float t, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
            public delegate void ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(uint[] rc, float[] tc, float[] c, float[] n, float[] v);
            public delegate void BlendFuncSeparateEXT(uint sfactorRGB, uint dfactorRGB, uint sfactorAlpha, uint dfactorAlpha);
            public delegate void BlendFuncSeparateINGR(uint sfactorRGB, uint dfactorRGB, uint sfactorAlpha, uint dfactorAlpha);
            public delegate void VertexWeightfEXT(float weight);
            public delegate void VertexWeightfvEXT(float[] weight);
            public delegate void VertexWeightPointerEXT(int size, uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void FlushVertexArrayRangeNV();
            public delegate void VertexArrayRangeNV(int length, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void CombinerParameterfvNV(uint pname, float[] parameters);
            public delegate void CombinerParameterfNV(uint pname, float param);
            public delegate void CombinerParameterivNV(uint pname, int[] parameters);
            public delegate void CombinerParameteriNV(uint pname, int param);
            public delegate void CombinerInputNV(uint stage, uint portion, uint variable, uint input, uint mapping, uint componentUsage);
            public delegate void CombinerOutputNV(uint stage, uint portion, uint abOutput, uint cdOutput, uint sumOutput, uint scale, uint bias, bool abDotProduct, bool cdDotProduct, bool muxSum);
            public delegate void FinalCombinerInputNV(uint variable, uint input, uint mapping, uint componentUsage);
            public delegate void GetCombinerInputParameterfvNV(uint stage, uint portion, uint variable, uint pname, out float[] parameters);
            public delegate void GetCombinerInputParameterivNV(uint stage, uint portion, uint variable, uint pname, out int[] parameters);
            public delegate void GetCombinerOutputParameterfvNV(uint stage, uint portion, uint pname, out float[] parameters);
            public delegate void GetCombinerOutputParameterivNV(uint stage, uint portion, uint pname, out int[] parameters);
            public delegate void GetFinalCombinerInputParameterfvNV(uint variable, uint pname, out float[] parameters);
            public delegate void GetFinalCombinerInputParameterivNV(uint variable, uint pname, out int[] parameters);
            public delegate void ResizeBuffersMESA();
            public delegate void WindowPos2dMESA(double x, double y);
            public delegate void WindowPos2dvMESA(double[] v);
            public delegate void WindowPos2fMESA(float x, float y);
            public delegate void WindowPos2fvMESA(float[] v);
            public delegate void WindowPos2iMESA(int x, int y);
            public delegate void WindowPos2ivMESA(int[] v);
            public delegate void WindowPos2sMESA(short x, short y);
            public delegate void WindowPos2svMESA(short[] v);
            public delegate void WindowPos3dMESA(double x, double y, double z);
            public delegate void WindowPos3dvMESA(double[] v);
            public delegate void WindowPos3fMESA(float x, float y, float z);
            public delegate void WindowPos3fvMESA(float[] v);
            public delegate void WindowPos3iMESA(int x, int y, int z);
            public delegate void WindowPos3ivMESA(int[] v);
            public delegate void WindowPos3sMESA(short x, short y, short z);
            public delegate void WindowPos3svMESA(short[] v);
            public delegate void WindowPos4dMESA(double x, double y, double z, double w);
            public delegate void WindowPos4dvMESA(double[] v);
            public delegate void WindowPos4fMESA(float x, float y, float z, float w);
            public delegate void WindowPos4fvMESA(float[] v);
            public delegate void WindowPos4iMESA(int x, int y, int z, int w);
            public delegate void WindowPos4ivMESA(int[] v);
            public delegate void WindowPos4sMESA(short x, short y, short z, short w);
            public delegate void WindowPos4svMESA(short[] v);
            public delegate void MultiModeDrawArraysIBM(Enums.BeginMode[] mode, int[] first, int[] count, int primcount, int modestride);
            public delegate void MultiModeDrawElementsIBM(Enums.BeginMode[] mode, int[] count, uint type, [MarshalAs(UnmanagedType.AsAny)] object indices, int primcount, int modestride);
            public delegate void ColorPointerListIBM(int size, Enums.ColorPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer, int ptrstride);
            public delegate void SecondaryColorPointerListIBM(int size, uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer, int ptrstride);
            public delegate void EdgeFlagPointerListIBM(int stride, ref bool[] pointer, int ptrstride);
            public delegate void FogCoordPointerListIBM(uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer, int ptrstride);
            public delegate void IndexPointerListIBM(Enums.IndexPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer, int ptrstride);
            public delegate void NormalPointerListIBM(Enums.NormalPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer, int ptrstride);
            public delegate void TexCoordPointerListIBM(int size, Enums.TexCoordPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer, int ptrstride);
            public delegate void VertexPointerListIBM(int size, Enums.VertexPointerType type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer, int ptrstride);
            public delegate void TbufferMask3DFX(uint mask);
            public delegate void SampleMaskEXT(float value, bool invert);
            public delegate void SamplePatternEXT(uint pattern);
            public delegate void TextureColorMaskSGIS(bool red, bool green, bool blue, bool alpha);
            public delegate void IglooInterfaceSGIX(uint pname, [MarshalAs(UnmanagedType.AsAny)] object parameters);
            public delegate void DeleteFencesNV(int n, uint[] fences);
            public delegate void GenFencesNV(int n, out uint[] fences);
            public delegate bool IsFenceNV(uint fence);
            public delegate bool TestFenceNV(uint fence);
            public delegate void GetFenceivNV(uint fence, uint pname, out int[] parameters);
            public delegate void FinishFenceNV(uint fence);
            public delegate void SetFenceNV(uint fence, uint condition);
            public delegate void MapControlPointsNV(uint target, uint index, uint type, int ustride, int vstride, int uorder, int vorder, bool packed, [MarshalAs(UnmanagedType.AsAny)] object points);
            public delegate void MapParameterivNV(uint target, uint pname, int[] parameters);
            public delegate void MapParameterfvNV(uint target, uint pname, float[] parameters);
            public delegate void GetMapControlPointsNV(uint target, uint index, uint type, int ustride, int vstride, bool packed, out object points);
            public delegate void GetMapParameterivNV(uint target, uint pname, out int[] parameters);
            public delegate void GetMapParameterfvNV(uint target, uint pname, out float[] parameters);
            public delegate void GetMapAttribParameterivNV(uint target, uint index, uint pname, out int[] parameters);
            public delegate void GetMapAttribParameterfvNV(uint target, uint index, uint pname, out float[] parameters);
            public delegate void EvalMapsNV(uint target, uint mode);
            public delegate void CombinerStageParameterfvNV(uint stage, uint pname, float[] parameters);
            public delegate void GetCombinerStageParameterfvNV(uint stage, uint pname, out float[] parameters);
            public delegate bool AreProgramsResidentNV(int n, uint[] programs, out bool[] residences);
            public delegate void BindProgramNV(uint target, uint id);
            public delegate void DeleteProgramsNV(int n, uint[] programs);
            public delegate void ExecuteProgramNV(uint target, uint id, float[] parameters);
            public delegate void GenProgramsNV(int n, out uint[] programs);
            public delegate void GetProgramParameterdvNV(uint target, uint index, uint pname, out double[] parameters);
            public delegate void GetProgramParameterfvNV(uint target, uint index, uint pname, out float[] parameters);
            public delegate void GetProgramivNV(uint id, uint pname, out int[] parameters);
            public delegate void GetProgramStringNV(uint id, uint pname, out uint[] program);
            public delegate void GetTrackMatrixivNV(uint target, uint address, uint pname, out int[] parameters);
            public delegate void GetVertexAttribdvNV(uint index, uint pname, out double[] parameters);
            public delegate void GetVertexAttribfvNV(uint index, uint pname, out float[] parameters);
            public delegate void GetVertexAttribivNV(uint index, uint pname, out int[] parameters);
            public delegate void GetVertexAttribPointervNV(uint index, uint pname, out object pointer);
            public delegate bool IsProgramNV(uint id);
            public delegate void LoadProgramNV(uint target, uint id, int len, byte[] program);
            public delegate void ProgramParameter4dNV(uint target, uint index, double x, double y, double z, double w);
            public delegate void ProgramParameter4dvNV(uint target, uint index, double[] v);
            public delegate void ProgramParameter4fNV(uint target, uint index, float x, float y, float z, float w);
            public delegate void ProgramParameter4fvNV(uint target, uint index, float[] v);
            public delegate void ProgramParameters4dvNV(uint target, uint index, uint count, double[] v);
            public delegate void ProgramParameters4fvNV(uint target, uint index, uint count, float[] v);
            public delegate void RequestResidentProgramsNV(int n, uint[] programs);
            public delegate void TrackMatrixNV(uint target, uint address, uint matrix, uint transform);
            public delegate void VertexAttribPointerNV(uint index, int fsize, uint type, int stride, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void VertexAttrib1dNV(uint index, double x);
            public delegate void VertexAttrib1dvNV(uint index, double[] v);
            public delegate void VertexAttrib1fNV(uint index, float x);
            public delegate void VertexAttrib1fvNV(uint index, float[] v);
            public delegate void VertexAttrib1sNV(uint index, short x);
            public delegate void VertexAttrib1svNV(uint index, short[] v);
            public delegate void VertexAttrib2dNV(uint index, double x, double y);
            public delegate void VertexAttrib2dvNV(uint index, double[] v);
            public delegate void VertexAttrib2fNV(uint index, float x, float y);
            public delegate void VertexAttrib2fvNV(uint index, float[] v);
            public delegate void VertexAttrib2sNV(uint index, short x, short y);
            public delegate void VertexAttrib2svNV(uint index, short[] v);
            public delegate void VertexAttrib3dNV(uint index, double x, double y, double z);
            public delegate void VertexAttrib3dvNV(uint index, double[] v);
            public delegate void VertexAttrib3fNV(uint index, float x, float y, float z);
            public delegate void VertexAttrib3fvNV(uint index, float[] v);
            public delegate void VertexAttrib3sNV(uint index, short x, short y, short z);
            public delegate void VertexAttrib3svNV(uint index, short[] v);
            public delegate void VertexAttrib4dNV(uint index, double x, double y, double z, double w);
            public delegate void VertexAttrib4dvNV(uint index, double[] v);
            public delegate void VertexAttrib4fNV(uint index, float x, float y, float z, float w);
            public delegate void VertexAttrib4fvNV(uint index, float[] v);
            public delegate void VertexAttrib4sNV(uint index, short x, short y, short z, short w);
            public delegate void VertexAttrib4svNV(uint index, short[] v);
            public delegate void VertexAttrib4ubNV(uint index, byte x, byte y, byte z, byte w);
            public delegate void VertexAttrib4ubvNV(uint index, byte[] v);
            public delegate void VertexAttribs1dvNV(uint index, int count, double[] v);
            public delegate void VertexAttribs1fvNV(uint index, int count, float[] v);
            public delegate void VertexAttribs1svNV(uint index, int count, short[] v);
            public delegate void VertexAttribs2dvNV(uint index, int count, double[] v);
            public delegate void VertexAttribs2fvNV(uint index, int count, float[] v);
            public delegate void VertexAttribs2svNV(uint index, int count, short[] v);
            public delegate void VertexAttribs3dvNV(uint index, int count, double[] v);
            public delegate void VertexAttribs3fvNV(uint index, int count, float[] v);
            public delegate void VertexAttribs3svNV(uint index, int count, short[] v);
            public delegate void VertexAttribs4dvNV(uint index, int count, double[] v);
            public delegate void VertexAttribs4fvNV(uint index, int count, float[] v);
            public delegate void VertexAttribs4svNV(uint index, int count, short[] v);
            public delegate void VertexAttribs4ubvNV(uint index, int count, byte[] v);
            public delegate void TexBumpParameterivATI(uint pname, int[] param);
            public delegate void TexBumpParameterfvATI(uint pname, float[] param);
            public delegate void GetTexBumpParameterivATI(uint pname, out int[] param);
            public delegate void GetTexBumpParameterfvATI(uint pname, out float[] param);
            public delegate uint GenFragmentShadersATI(uint range);
            public delegate void BindFragmentShaderATI(uint id);
            public delegate void DeleteFragmentShaderATI(uint id);
            public delegate void BeginFragmentShaderATI();
            public delegate void EndFragmentShaderATI();
            public delegate void PassTexCoordATI(uint dst, uint coord, uint swizzle);
            public delegate void SampleMapATI(uint dst, uint interp, uint swizzle);
            public delegate void ColorFragmentOp1ATI(uint op, uint dst, uint dstMask, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod);
            public delegate void ColorFragmentOp2ATI(uint op, uint dst, uint dstMask, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod);
            public delegate void ColorFragmentOp3ATI(uint op, uint dst, uint dstMask, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod, uint arg3, uint arg3Rep, uint arg3Mod);
            public delegate void AlphaFragmentOp1ATI(uint op, uint dst, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod);
            public delegate void AlphaFragmentOp2ATI(uint op, uint dst, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod);
            public delegate void AlphaFragmentOp3ATI(uint op, uint dst, uint dstMod, uint arg1, uint arg1Rep, uint arg1Mod, uint arg2, uint arg2Rep, uint arg2Mod, uint arg3, uint arg3Rep, uint arg3Mod);
            public delegate void SetFragmentShaderConstantATI(uint dst, float[] value);
            public delegate void PNTrianglesiATI(uint pname, int param);
            public delegate void PNTrianglesfATI(uint pname, float param);
            public delegate uint NewObjectBufferATI(int size, [MarshalAs(UnmanagedType.AsAny)] object pointer, uint usage);
            public delegate bool IsObjectBufferATI(uint buffer);
            public delegate void UpdateObjectBufferATI(uint buffer, uint offset, int size, [MarshalAs(UnmanagedType.AsAny)] object pointer, uint preserve);
            public delegate void GetObjectBufferfvATI(uint buffer, uint pname, out float[] parameters);
            public delegate void GetObjectBufferivATI(uint buffer, uint pname, out int[] parameters);
            public delegate void FreeObjectBufferATI(uint buffer);
            public delegate void ArrayObjectATI(Enums.EnableCap array, int size, uint type, int stride, uint buffer, uint offset);
            public delegate void GetArrayObjectfvATI(Enums.EnableCap array, uint pname, out float[] parameters);
            public delegate void GetArrayObjectivATI(Enums.EnableCap array, uint pname, out int[] parameters);
            public delegate void VariantArrayObjectATI(uint id, uint type, int stride, uint buffer, uint offset);
            public delegate void GetVariantArrayObjectfvATI(uint id, uint pname, out float[] parameters);
            public delegate void GetVariantArrayObjectivATI(uint id, uint pname, out int[] parameters);
            public delegate void BeginVertexShaderEXT();
            public delegate void EndVertexShaderEXT();
            public delegate void BindVertexShaderEXT(uint id);
            public delegate uint GenVertexShadersEXT(uint range);
            public delegate void DeleteVertexShaderEXT(uint id);
            public delegate void ShaderOp1EXT(uint op, uint res, uint arg1);
            public delegate void ShaderOp2EXT(uint op, uint res, uint arg1, uint arg2);
            public delegate void ShaderOp3EXT(uint op, uint res, uint arg1, uint arg2, uint arg3);
            public delegate void SwizzleEXT(uint res, uint @in, uint outX, uint outY, uint outZ, uint outW);
            public delegate void WriteMaskEXT(uint res, uint @in, uint outX, uint outY, uint outZ, uint outW);
            public delegate void InsertComponentEXT(uint res, uint src, uint num);
            public delegate void ExtractComponentEXT(uint res, uint src, uint num);
            public delegate uint GenSymbolsEXT(uint datatype, uint storagetype, uint range, uint components);
            public delegate void SetInvariantEXT(uint id, uint type, [MarshalAs(UnmanagedType.AsAny)] object addr);
            public delegate void SetLocalConstantEXT(uint id, uint type, [MarshalAs(UnmanagedType.AsAny)] object addr);
            public delegate void VariantbvEXT(uint id, byte[] addr);
            public delegate void VariantsvEXT(uint id, short[] addr);
            public delegate void VariantivEXT(uint id, int[] addr);
            public delegate void VariantfvEXT(uint id, float[] addr);
            public delegate void VariantdvEXT(uint id, double[] addr);
            public delegate void VariantubvEXT(uint id, byte[] addr);
            public delegate void VariantusvEXT(uint id, ushort[] addr);
            public delegate void VariantuivEXT(uint id, uint[] addr);
            public delegate void VariantPointerEXT(uint id, uint type, uint stride, [MarshalAs(UnmanagedType.AsAny)] object addr);
            public delegate void EnableVariantClientStateEXT(uint id);
            public delegate void DisableVariantClientStateEXT(uint id);
            public delegate uint BindLightParameterEXT(Enums.LightName light, Enums.LightParameter value);
            public delegate uint BindMaterialParameterEXT(Enums.MaterialFace face, Enums.MaterialParameter value);
            public delegate uint BindTexGenParameterEXT(uint unit, Enums.TextureCoordName coord, Enums.TextureGenParameter value);
            public delegate uint BindTextureUnitParameterEXT(uint unit, uint value);
            public delegate uint BindParameterEXT(uint value);
            public delegate bool IsVariantEnabledEXT(uint id, uint cap);
            public delegate void GetVariantBooleanvEXT(uint id, uint value, out bool[] data);
            public delegate void GetVariantIntegervEXT(uint id, uint value, out int[] data);
            public delegate void GetVariantFloatvEXT(uint id, uint value, out float[] data);
            public delegate void GetVariantPointervEXT(uint id, uint value, out object data);
            public delegate void GetInvariantBooleanvEXT(uint id, uint value, out bool[] data);
            public delegate void GetInvariantIntegervEXT(uint id, uint value, out int[] data);
            public delegate void GetInvariantFloatvEXT(uint id, uint value, out float[] data);
            public delegate void GetLocalConstantBooleanvEXT(uint id, uint value, out bool[] data);
            public delegate void GetLocalConstantIntegervEXT(uint id, uint value, out int[] data);
            public delegate void GetLocalConstantFloatvEXT(uint id, uint value, out float[] data);
            public delegate void VertexStream1sATI(uint stream, short x);
            public delegate void VertexStream1svATI(uint stream, short[] coords);
            public delegate void VertexStream1iATI(uint stream, int x);
            public delegate void VertexStream1ivATI(uint stream, int[] coords);
            public delegate void VertexStream1fATI(uint stream, float x);
            public delegate void VertexStream1fvATI(uint stream, float[] coords);
            public delegate void VertexStream1dATI(uint stream, double x);
            public delegate void VertexStream1dvATI(uint stream, double[] coords);
            public delegate void VertexStream2sATI(uint stream, short x, short y);
            public delegate void VertexStream2svATI(uint stream, short[] coords);
            public delegate void VertexStream2iATI(uint stream, int x, int y);
            public delegate void VertexStream2ivATI(uint stream, int[] coords);
            public delegate void VertexStream2fATI(uint stream, float x, float y);
            public delegate void VertexStream2fvATI(uint stream, float[] coords);
            public delegate void VertexStream2dATI(uint stream, double x, double y);
            public delegate void VertexStream2dvATI(uint stream, double[] coords);
            public delegate void VertexStream3sATI(uint stream, short x, short y, short z);
            public delegate void VertexStream3svATI(uint stream, short[] coords);
            public delegate void VertexStream3iATI(uint stream, int x, int y, int z);
            public delegate void VertexStream3ivATI(uint stream, int[] coords);
            public delegate void VertexStream3fATI(uint stream, float x, float y, float z);
            public delegate void VertexStream3fvATI(uint stream, float[] coords);
            public delegate void VertexStream3dATI(uint stream, double x, double y, double z);
            public delegate void VertexStream3dvATI(uint stream, double[] coords);
            public delegate void VertexStream4sATI(uint stream, short x, short y, short z, short w);
            public delegate void VertexStream4svATI(uint stream, short[] coords);
            public delegate void VertexStream4iATI(uint stream, int x, int y, int z, int w);
            public delegate void VertexStream4ivATI(uint stream, int[] coords);
            public delegate void VertexStream4fATI(uint stream, float x, float y, float z, float w);
            public delegate void VertexStream4fvATI(uint stream, float[] coords);
            public delegate void VertexStream4dATI(uint stream, double x, double y, double z, double w);
            public delegate void VertexStream4dvATI(uint stream, double[] coords);
            public delegate void NormalStream3bATI(uint stream, byte nx, byte ny, byte nz);
            public delegate void NormalStream3bvATI(uint stream, byte[] coords);
            public delegate void NormalStream3sATI(uint stream, short nx, short ny, short nz);
            public delegate void NormalStream3svATI(uint stream, short[] coords);
            public delegate void NormalStream3iATI(uint stream, int nx, int ny, int nz);
            public delegate void NormalStream3ivATI(uint stream, int[] coords);
            public delegate void NormalStream3fATI(uint stream, float nx, float ny, float nz);
            public delegate void NormalStream3fvATI(uint stream, float[] coords);
            public delegate void NormalStream3dATI(uint stream, double nx, double ny, double nz);
            public delegate void NormalStream3dvATI(uint stream, double[] coords);
            public delegate void ClientActiveVertexStreamATI(uint stream);
            public delegate void VertexBlendEnviATI(uint pname, int param);
            public delegate void VertexBlendEnvfATI(uint pname, float param);
            public delegate void ElementPointerATI(uint type, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void DrawElementArrayATI(Enums.BeginMode mode, int count);
            public delegate void DrawRangeElementArrayATI(Enums.BeginMode mode, uint start, uint end, int count);
            public delegate void DrawMeshArraysSUN(Enums.BeginMode mode, int first, int count, int width);
            public delegate void GenOcclusionQueriesNV(int n, out uint[] ids);
            public delegate void DeleteOcclusionQueriesNV(int n, uint[] ids);
            public delegate bool IsOcclusionQueryNV(uint id);
            public delegate void BeginOcclusionQueryNV(uint id);
            public delegate void EndOcclusionQueryNV();
            public delegate void GetOcclusionQueryivNV(uint id, uint pname, out int[] parameters);
            public delegate void GetOcclusionQueryuivNV(uint id, uint pname, out uint[] parameters);
            public delegate void PointParameteriNV(Enums.PointParameterNameSGIS pname, int param);
            public delegate void PointParameterivNV(Enums.PointParameterNameSGIS pname, int[] parameters);
            public delegate void ActiveStencilFaceEXT(uint face);
            public delegate void ElementPointerAPPLE(uint type, [MarshalAs(UnmanagedType.AsAny)] object pointer);
            public delegate void DrawElementArrayAPPLE(Enums.BeginMode mode, int first, int count);
            public delegate void DrawRangeElementArrayAPPLE(Enums.BeginMode mode, uint start, uint end, int first, int count);
            public delegate void MultiDrawElementArrayAPPLE(Enums.BeginMode mode, int[] first, int[] count, int primcount);
            public delegate void MultiDrawRangeElementArrayAPPLE(Enums.BeginMode mode, uint start, uint end, int[] first, int[] count, int primcount);
            public delegate void GenFencesAPPLE(int n, out uint[] fences);
            public delegate void DeleteFencesAPPLE(int n, uint[] fences);
            public delegate void SetFenceAPPLE(uint fence);
            public delegate bool IsFenceAPPLE(uint fence);
            public delegate bool TestFenceAPPLE(uint fence);
            public delegate void FinishFenceAPPLE(uint fence);
            public delegate bool TestObjectAPPLE(uint @object, uint name);
            public delegate void FinishObjectAPPLE(uint @object, int name);
            public delegate void BindVertexArrayAPPLE(uint array);
            public delegate void DeleteVertexArraysAPPLE(int n, uint[] arrays);
            public delegate void GenVertexArraysAPPLE(int n, uint[] arrays);
            public delegate bool IsVertexArrayAPPLE(uint array);
            public delegate void VertexArrayRangeAPPLE(int length, out object pointer);
            public delegate void FlushVertexArrayRangeAPPLE(int length, out object pointer);
            public delegate void VertexArrayParameteriAPPLE(uint pname, int param);
            public delegate void DrawBuffersATI(int n, Enums.DrawBufferMode[] bufs);
            public delegate void ProgramNamedParameter4fNV(uint id, int len, byte[] name, float x, float y, float z, float w);
            public delegate void ProgramNamedParameter4dNV(uint id, int len, byte[] name, double x, double y, double z, double w);
            public delegate void ProgramNamedParameter4fvNV(uint id, int len, byte[] name, float[] v);
            public delegate void ProgramNamedParameter4dvNV(uint id, int len, byte[] name, double[] v);
            public delegate void GetProgramNamedParameterfvNV(uint id, int len, byte[] name, out float[] parameters);
            public delegate void GetProgramNamedParameterdvNV(uint id, int len, byte[] name, out double[] parameters);
            public delegate void Vertex2hNV(ushort x, ushort y);
            public delegate void Vertex2hvNV(ushort[] v);
            public delegate void Vertex3hNV(ushort x, ushort y, ushort z);
            public delegate void Vertex3hvNV(ushort[] v);
            public delegate void Vertex4hNV(ushort x, ushort y, ushort z, ushort w);
            public delegate void Vertex4hvNV(ushort[] v);
            public delegate void Normal3hNV(ushort nx, ushort ny, ushort nz);
            public delegate void Normal3hvNV(ushort[] v);
            public delegate void Color3hNV(ushort red, ushort green, ushort blue);
            public delegate void Color3hvNV(ushort[] v);
            public delegate void Color4hNV(ushort red, ushort green, ushort blue, ushort alpha);
            public delegate void Color4hvNV(ushort[] v);
            public delegate void TexCoord1hNV(ushort s);
            public delegate void TexCoord1hvNV(ushort[] v);
            public delegate void TexCoord2hNV(ushort s, ushort t);
            public delegate void TexCoord2hvNV(ushort[] v);
            public delegate void TexCoord3hNV(ushort s, ushort t, ushort r);
            public delegate void TexCoord3hvNV(ushort[] v);
            public delegate void TexCoord4hNV(ushort s, ushort t, ushort r, ushort q);
            public delegate void TexCoord4hvNV(ushort[] v);
            public delegate void MultiTexCoord1hNV(uint target, ushort s);
            public delegate void MultiTexCoord1hvNV(uint target, ushort[] v);
            public delegate void MultiTexCoord2hNV(uint target, ushort s, ushort t);
            public delegate void MultiTexCoord2hvNV(uint target, ushort[] v);
            public delegate void MultiTexCoord3hNV(uint target, ushort s, ushort t, ushort r);
            public delegate void MultiTexCoord3hvNV(uint target, ushort[] v);
            public delegate void MultiTexCoord4hNV(uint target, ushort s, ushort t, ushort r, ushort q);
            public delegate void MultiTexCoord4hvNV(uint target, ushort[] v);
            public delegate void FogCoordhNV(ushort fog);
            public delegate void FogCoordhvNV(ushort[] fog);
            public delegate void SecondaryColor3hNV(ushort red, ushort green, ushort blue);
            public delegate void SecondaryColor3hvNV(ushort[] v);
            public delegate void VertexWeighthNV(ushort weight);
            public delegate void VertexWeighthvNV(ushort[] weight);
            public delegate void VertexAttrib1hNV(uint index, ushort x);
            public delegate void VertexAttrib1hvNV(uint index, ushort[] v);
            public delegate void VertexAttrib2hNV(uint index, ushort x, ushort y);
            public delegate void VertexAttrib2hvNV(uint index, ushort[] v);
            public delegate void VertexAttrib3hNV(uint index, ushort x, ushort y, ushort z);
            public delegate void VertexAttrib3hvNV(uint index, ushort[] v);
            public delegate void VertexAttrib4hNV(uint index, ushort x, ushort y, ushort z, ushort w);
            public delegate void VertexAttrib4hvNV(uint index, ushort[] v);
            public delegate void VertexAttribs1hvNV(uint index, int n, ushort[] v);
            public delegate void VertexAttribs2hvNV(uint index, int n, ushort[] v);
            public delegate void VertexAttribs3hvNV(uint index, int n, ushort[] v);
            public delegate void VertexAttribs4hvNV(uint index, int n, ushort[] v);
            public delegate void PixelDataRangeNV(uint target, int length, out object pointer);
            public delegate void FlushPixelDataRangeNV(uint target);
            public delegate void PrimitiveRestartNV();
            public delegate void PrimitiveRestartIndexNV(uint index);
            public delegate IntPtr MapObjectBufferATI_(uint buffer);
            public delegate void UnmapObjectBufferATI(uint buffer);
            public delegate void StencilOpSeparateATI(uint face, Enums.StencilOp sfail, Enums.StencilOp dpfail, Enums.StencilOp dppass);
            public delegate void StencilFuncSeparateATI(Enums.StencilFunction frontfunc, Enums.StencilFunction backfunc, int reference, uint mask);
            public delegate void VertexAttribArrayObjectATI(uint index, int size, uint type, bool normalized, int stride, uint buffer, uint offset);
            public delegate void GetVertexAttribArrayObjectfvATI(uint index, uint pname, out float[] parameters);
            public delegate void GetVertexAttribArrayObjectivATI(uint index, uint pname, out int[] parameters);
            public delegate void DepthBoundsEXT(double zmin, double zmax);
            public delegate void BlendEquationSeparateEXT(Enums.BlendEquationModeEXT modeRGB, Enums.BlendEquationModeEXT modeAlpha);
            public delegate bool IsRenderbufferEXT(uint renderbuffer);
            public delegate void BindRenderbufferEXT(uint target, uint renderbuffer);
            public delegate void DeleteRenderbuffersEXT(int n, uint[] renderbuffers);
            public delegate void GenRenderbuffersEXT(int n, out uint[] renderbuffers);
            public delegate void RenderbufferStorageEXT(uint target, uint internalformat, int width, int height);
            public delegate void GetRenderbufferParameterivEXT(uint target, uint pname, out int[] parameters);
            public delegate bool IsFramebufferEXT(uint framebuffer);
            public delegate void BindFramebufferEXT(uint target, uint framebuffer);
            public delegate void DeleteFramebuffersEXT(int n, uint[] framebuffers);
            public delegate void GenFramebuffersEXT(int n, out uint[] framebuffers);
            public delegate uint CheckFramebufferStatusEXT(uint target);
            public delegate void FramebufferTexture1DEXT(uint target, uint attachment, uint textarget, uint texture, int level);
            public delegate void FramebufferTexture2DEXT(uint target, uint attachment, uint textarget, uint texture, int level);
            public delegate void FramebufferTexture3DEXT(uint target, uint attachment, uint textarget, uint texture, int level, int zoffset);
            public delegate void FramebufferRenderbufferEXT(uint target, uint attachment, uint renderbuffertarget, uint renderbuffer);
            public delegate void GetFramebufferAttachmentParameterivEXT(uint target, uint attachment, uint pname, out int[] parameters);
            public delegate void GenerateMipmapEXT(uint target);
            public delegate void StringMarkerGREMEDY(int len, [MarshalAs(UnmanagedType.AsAny)] object @string);
        }

        #endregion
    }
}

